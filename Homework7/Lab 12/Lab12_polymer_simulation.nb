(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    661870,      12693]
NotebookOptionsPosition[    650754,      12495]
NotebookOutlinePosition[    656631,      12617]
CellTagsIndexPosition[    656588,      12614]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "BE/CS 196a Lab 12 \n",
 StyleBox["Design and analysis of a DNA origami tile array that reconfigures \
from a sword to a rattlesnake", "Subtitle"]
}], "Title",
 CellChangeTimes->{{3.8182793113964434`*^9, 3.8182793240093365`*^9}, {
   3.818279407651252*^9, 3.8182794531486425`*^9}, 3.818279675493853*^9, 
   3.8182881577916727`*^9, {3.8185575735745087`*^9, 3.818557625144997*^9}, 
   3.818818945709343*^9, {3.8204365282760324`*^9, 3.8204365586402245`*^9}, {
   3.8211345767167435`*^9, 3.821134610569594*^9}, {3.8229301847688894`*^9, 
   3.82293020630742*^9}},ExpressionUUID->"492c0e2a-a86c-4c0f-9487-\
9e7e5877e7b4"],

Cell[CellGroupData[{

Cell["CRN Simulator", "Section",
 CellChangeTimes->{{3.7559830291570773`*^9, 
  3.7559830461117964`*^9}},ExpressionUUID->"d87aba98-74b9-4ada-8bb7-\
0432e75cbe35"],

Cell["\<\
Chemical Reaction Network (CRN) Simulator package is developed by David \
Soloveichik. Copyright 2009-2015. 
http://users.ece.utexas.edu/~soloveichik/crnsimulator.html\
\>", "Text",ExpressionUUID->"9ae93a3c-733b-4855-a659-1c1c843a8bba"],

Cell[CellGroupData[{

Cell["Public interface specification", "Subsection",ExpressionUUID->"70a405bd-5a59-4227-906a-a3f800b0dc1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Notation`AutoLoadNotationPalette", " ", "=", " ", "False"}], 
  ";"}], "\n", 
 RowBox[{"Needs", "[", "\"\<Notation`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<CRNSimulator`\>\"", ",", " ", 
    RowBox[{"{", "\"\<Notation`\>\"", "}"}]}], "]"}], ";"}]}], "Code",
 CellLabel->
  "In[102]:=",ExpressionUUID->"058465d2-9ae6-4ba3-ad7f-1f4904b765cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rxn", "::", "usage"}], "=", 
   "\"\<Represents an irreversible reaction. eg. rxn[a+b,c,1]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"revrxn", "::", "usage"}], "=", 
   "\"\<Represents a reversible reaction. eg. revrxn[a+b,c,1,1]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"conc", "::", "usage"}], "=", 
   "\"\<Initial concentration: conc[x,10] or conc[{x,y},10].\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"term", "::", "usage"}], "=", 
   "\"\<Represents an additive term in the ODE for species x. \\\nSpecies \
concentrations must be expressed in x[t] form. eg. term[x, -2 \
x[t]*y[t]]\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[105]:=",ExpressionUUID->"b3c15077-cabb-49ce-b722-dfe59833353d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimulateRxnsys", "::", "usage"}], "=", "\n", 
    "\"\<SimulateRxnsys[rxnsys,endtime] simulates the reaction system rxnsys \
for time 0 \\\nto endtime. In rxnsys, initial concentrations are specified by \
conc statements. \\\nIf no initial condition is set for a species, its \
initial concentration is set to 0. \\\nRxnsys can also include term[] \
statements (e.g. term[x, -2 x[t]]) which are additively \\\ncombined together \
with term[]s derived from rxn[] statements. \\\nRxnsys can also include \
direct ODE definitions for some species (e.g. x'[t]==...), \\\nor direct \
definitions of species as functions of time (e.g. x[t]==...), \\\nwhich are \
passed to NDSolve without modification. \\\nAny options specified (eg \
WorkingPrecision->30) \\\nare passed to NDSolve.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpeciesInRxnsys", "::", "usage"}], "=", "\n", 
   "\"\<SpeciesInRxnsys[rxnsys] returns the species in reaction system \
rxnsys. \\\nSpeciesInRxnsys[rxnsys,pttrn] returns the species in reaction \
system rxnsys \\\nmatching Mathematica pattern pttrn (eg x[1,_]).\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpeciesInRxnsysStringPattern", "::", "usage"}], "=", "\n", 
   "\"\<SpeciesInRxnsysPattern[rxnsys,pttrn] returns the species in reaction \
system rxnsys \\\nmatching Mathematica string pattern pttrn. \\\n(Eg \
\\\"g$*\\\" matches all species names starting with \\\"g$\\\" ; \\ \ncan \
also do RegularExpression[\\\"o..d.\\$.*\\\"].)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RxnsysToOdesys", "::", "usage"}], "=", "\n", 
   "\"\<RxnsysToOdesys[rxnsys,t] returns the ODEs corresponding to reaction \
system rxnsys, \\\nwith initial conditions. If no initial condition is set \
for a species, its initial \\\nconcentration is set to 0. \\\nThe time \
variable is given as the second argument; if omitted it is set to Global`t.\>\
\""}], ";"}]}], "Code",
 CellLabel->
  "In[109]:=",ExpressionUUID->"3f273241-b65e-4d8c-83db-85cc6a66e316"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "To", " ", "use", " ", "instead", " ", "of", " ", "Sequence", " ", "in", 
     " ", "functions", " ", "with", " ", "Hold", " ", "attribute", " ", "but",
      " ", "not", " ", "HoldSequence"}], ",", "\n", 
    RowBox[{"like", " ", "Module"}], ",", " ", "If", ",", " ", "etc"}], 
   "*)"}], "\n", 
  RowBox[{"Seq", ":=", "Sequence", " "}]}]], "Code",
 CellLabel->
  "In[113]:=",ExpressionUUID->"982d001a-1f79-4cef-bcba-43186049c4a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private", "Subsection",ExpressionUUID->"4f9ccfe8-3775-48a9-ba19-7310bc035e59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellLabel->
  "In[114]:=",ExpressionUUID->"9cae575a-a936-44f8-bc81-f420782bd0ad"],

Cell[BoxData[{
 RowBox[{"Notation", "[", 
  RowBox[{
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<r_\>\"", ",", " ", "\"\< \>\"", ",", " ", 
       RowBox[{"OverscriptBox", "[", 
        RowBox[{"\"\<\[RightArrow]\>\"", ",", " ", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\< \>\"", ",", " ", "\"\<k_\>\"", ",", " ", "\"\< \>\""}], 
           "}"}], "]"}]}], "]"}], ",", " ", "\"\< \>\"", ",", " ", 
       "\"\<p_\>\"", ",", " ", "\"\< \>\""}], "}"}], "]"}], "]"}], " ", 
   "\[DoubleLongLeftRightArrow]", " ", 
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<rxn\>\"", ",", " ", "\"\<[\>\"", ",", " ", 
       RowBox[{"RowBox", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r_\>\"", ",", " ", "\"\<,\>\"", ",", " ", "\"\<p_\>\"", ",", 
          " ", "\"\<,\>\"", ",", " ", "\"\<k_\>\""}], "}"}], "]"}], ",", " ", 
       "\"\<]\>\""}], "}"}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"Notation", "[", 
  RowBox[{
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<r_\>\"", ",", " ", "\"\< \>\"", ",", " ", 
       RowBox[{"UnderoverscriptBox", "[", 
        RowBox[{
        "\"\<\[RightArrowLeftArrow]\>\"", ",", " ", "\"\<k2_\>\"", ",", " ", 
         "\"\<k1_\>\""}], "]"}], ",", " ", "\"\< \>\"", ",", " ", 
       "\"\<p_\>\"", ",", " ", "\"\< \>\""}], "}"}], "]"}], "]"}], " ", 
   "\[DoubleLongLeftRightArrow]", " ", 
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<revrxn\>\"", ",", " ", "\"\<[\>\"", ",", " ", 
       RowBox[{"RowBox", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r_\>\"", ",", " ", "\"\<,\>\"", ",", " ", "\"\<p_\>\"", ",", 
          " ", "\"\<,\>\"", ",", " ", "\"\<k1_\>\"", ",", " ", "\"\<,\>\"", 
          ",", " ", "\"\<k2_\>\""}], "}"}], "]"}], ",", " ", "\"\<]\>\""}], 
      "}"}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Placeholder]\>\"", ",", " ", "\"\< \>\"", ",", " ", 
       RowBox[{"OverscriptBox", "[", 
        RowBox[{"\"\<\[RightArrow]\>\"", ",", " ", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\< \>\"", ",", " ", "\"\<\[Placeholder]\>\"", ",", " ", 
            "\"\< \>\""}], "}"}], "]"}]}], "]"}], ",", " ", "\"\< \>\"", ",", 
       " ", "\"\<\[Placeholder]\>\"", ",", " ", "\"\< \>\""}], "}"}], "]"}], 
    "]"}], ",", "\"\<rxn\>\""}], "]"}], "\n", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"RowBox", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Placeholder]\>\"", ",", " ", "\"\< \>\"", ",", " ", 
       RowBox[{"UnderoverscriptBox", "[", 
        RowBox[{
        "\"\<\[RightArrowLeftArrow]\>\"", ",", " ", "\"\<\[Placeholder]\>\"", 
         ",", " ", "\"\<\[Placeholder]\>\""}], "]"}], ",", " ", "\"\< \>\"", 
       ",", " ", "\"\<\[Placeholder]\>\"", ",", " ", "\"\< \>\""}], "}"}], 
     "]"}], "]"}], ",", "\"\<revrxn\>\""}], "]"}]}], "Code",
 CellLabel->
  "In[115]:=",ExpressionUUID->"de4fab3a-eaa8-4bbc-b6c0-2757f30386a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"We", " ", "want", " ", 
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"a", "+", "b"}], ",", "c", ",", "1"}], "]"}], " ", "to", " ", 
     "be", " ", "different", " ", "from", " ", 
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"b", "+", "a"}], ",", "c", ",", "1"}], "]"}]}], ",", " ", 
    RowBox[{
    "so", " ", "we", " ", "have", " ", "to", " ", "set", " ", "attribute", 
     "\n", 
     RowBox[{"HoldAll", ".", " ", "But"}], " ", "we", " ", "also", " ", 
     "want", " ", "to", " ", "evaluate", " ", "if", " ", "any", " ", 
     "variables", " ", "can", " ", "be", " ", 
     RowBox[{"evaluated", "."}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rxn", ",", "revrxn"}], "}"}], ",", " ", "HoldAll"}], "]"}], 
   "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"rs_Plus", ",", "ps_", ",", "k_"}], "]"}], ":=", "\n", " ", 
    RowBox[{
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{
        RowBox[{"rxn", "[", 
         RowBox[{"1", ",", "ps", ",", "k"}], "]"}], ",", 
        RowBox[{"1", "->", 
         RowBox[{
          RowBox[{"Hold", "[", "Plus", "]"}], "@@", 
          RowBox[{"List", "@@", 
           RowBox[{"Unevaluated", "[", "rs", "]"}]}]}]}]}], "]"}], "]"}], "/;",
      "\n", " ", 
     RowBox[{
      RowBox[{"Hold", "@@", 
       RowBox[{"Unevaluated", "[", "rs", "]"}]}], " ", "=!=", " ", 
      RowBox[{"Hold", "@@", 
       RowBox[{"List", "@@", 
        RowBox[{"Unevaluated", "[", "rs", "]"}]}]}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"rs_", ",", "ps_Plus", ",", "k_"}], "]"}], ":=", "\n", " ", 
    RowBox[{
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{
        RowBox[{"rxn", "[", 
         RowBox[{"rs", ",", "1", ",", "k"}], "]"}], ",", 
        RowBox[{"2", "->", 
         RowBox[{
          RowBox[{"Hold", "[", "Plus", "]"}], "@@", 
          RowBox[{"List", "@@", 
           RowBox[{"Unevaluated", "[", "ps", "]"}]}]}]}]}], "]"}], "]"}], "/;",
      "\n", " ", 
     RowBox[{
      RowBox[{"Hold", "@@", 
       RowBox[{"Unevaluated", "[", "ps", "]"}]}], " ", "=!=", " ", 
      RowBox[{"Hold", "@@", 
       RowBox[{"List", "@@", 
        RowBox[{"Unevaluated", "[", "ps", "]"}]}]}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"rs_", ",", "ps_", ",", "k_"}], "]"}], ":=", "\n", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rse", "=", "rs"}], "}"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{"rse", ",", "ps", ",", "k"}], "]"}]}], "]"}], ")"}], "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "rs", "]"}], "=!=", "Plus"}], "&&", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "rs", "]"}], "=!=", "rs"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"rs_", ",", "ps_", ",", "k_"}], "]"}], ":=", "\n", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pse", "=", "ps"}], "}"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{"rs", ",", "pse", ",", "k"}], "]"}]}], "]"}], ")"}], "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "ps", "]"}], "=!=", "Plus"}], "&&", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "ps", "]"}], "=!=", "ps"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"rs_", ",", "ps_", ",", "k_"}], "]"}], ":=", "\n", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ke", "=", "k"}], "}"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{"rs", ",", "ps", ",", "ke"}], "]"}]}], "]"}], ")"}], "/;", 
     RowBox[{
      RowBox[{"Unevaluated", "[", "k", "]"}], "=!=", "k"}]}]}]}]}]], "Code",
 CellLabel->
  "In[119]:=",ExpressionUUID->"98e47793-b7e2-44b9-919e-cc82cb260593"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Automatically", " ", "expand", " ", "revrxn", " ", "and", " ", 
    "concentration", " ", "lists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"revrxn", "[", 
     RowBox[{"r_", ",", "p_", ",", "k1_", ",", "k2_"}], "]"}], ":=", 
    RowBox[{"Sequence", "[", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{"r", ",", "p", ",", "k1"}], "]"}], ",", 
      RowBox[{"rxn", "[", 
       RowBox[{"p", ",", "r", ",", "k2"}], "]"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"conc", "[", 
     RowBox[{"xs_List", ",", "c_"}], "]"}], ":=", 
    RowBox[{"Seq", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"conc", "[", 
         RowBox[{"#", ",", "c"}], "]"}], "&"}], "/@", "xs"}], ")"}]}]}], "\n",
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "People", " ", "are", " ", "often", " ", "confused", " ", "about", " ", 
     RowBox[{"rxn", "[", 
      RowBox[{"0", ",", "x", ",", "1"}], "]"}], " ", "instead", " ", "of", 
     " ", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{"1", ",", "x", ",", "1"}], "]"}], ".", " ", "So"}], " ", "we", 
     " ", "automatically", " ", "replace", " ", "any", " ", "integer", " ", 
     "with", " ", "1."}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"1", ",", "_Integer"}], "]"}], ",", "ps_", ",", "k_"}], "]"}], 
    ":=", 
    RowBox[{"rxn", "[", 
     RowBox[{"1", ",", "ps", ",", "k"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[125]:=",ExpressionUUID->"608afa2c-9c5b-4dd1-bd7f-c072aaf2ff4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Species", " ", "as", " ", "products", " ", "or", " ", "reactants", " ", 
     "in", " ", 
     RowBox[{"rxn", "[", "]"}], " ", "statements"}], ",", " ", 
    RowBox[{
     RowBox[{"as", " ", "well", " ", "as", " ", "defined", " ", "in", " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}]}], "==", " ", 
     RowBox[{"or", " ", 
      RowBox[{"x", "[", "t", "]"}]}], "==", " ", 
     RowBox[{
      RowBox[{"statements", " ", "\\\n", "or"}], " ", "term", " ", 
      "statements"}]}], ",", " ", 
    RowBox[{"or", " ", "conc", " ", "statements"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SpeciesInRxnsys", "[", "rxnsys_", "]"}], ":=", "\n", " ", 
    RowBox[{"Union", "[", "\n", " \t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"rxnsys", ",", 
           RowBox[{
            RowBox[{"rxn", "[", 
             RowBox[{"r_", ",", "p_", ",", "_"}], "]"}], ":>", 
            RowBox[{"Seq", "[", 
             RowBox[{"r", ",", "p"}], "]"}]}]}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Times", "|", "Plus"}], "->", "Seq"}]}], ",", 
        RowBox[{"s_Symbol", "|", 
         RowBox[{"s_Symbol", "[", "__", "]"}]}]}], "]"}], ",", "\n", " \t", 
      RowBox[{"Cases", "[", 
       RowBox[{"rxnsys", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x_", "'"}], "[", "_", "]"}], "==", "_"}], " ", "|", " ", 
          RowBox[{
           RowBox[{"x_", "[", "_", "]"}], "==", "_"}], " ", "|", " ", 
          RowBox[{"term", "[", 
           RowBox[{"x_", ",", "__"}], "]"}], " ", "|", " ", 
          RowBox[{"conc", "[", 
           RowBox[{"x_", ",", "_"}], "]"}]}], " ", ":>", " ", "x"}]}], 
       "]"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"SpeciesInRxnsys", "[", 
     RowBox[{"rsys_", ",", "pattern_"}], "]"}], ":=", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", "pattern"}], 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"SpeciesInRxnsysStringPattern", "[", 
     RowBox[{"rsys_", ",", "pattern_"}], "]"}], ":=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", "pattern"}], "]"}], 
       "&"}]}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[128]:=",ExpressionUUID->"f2fbe24a-cfaf-421a-9889-e7b6f1b2f8bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "if", " ", "a", " ", 
    RowBox[{"species", "'"}], " ", "initial", " ", "value", " ", "is", " ", 
    "set", " ", "in", " ", "a", " ", "odesys"}], " ", "*)"}], " \t", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InitialValueSetQ", "[", 
     RowBox[{"odesys_", ",", "x_"}], "]"}], ":=", "\n", " ", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"odesys", ",", 
      RowBox[{
       RowBox[{"x", "[", "_", "]"}], "==", "_"}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "if", " ", "a", " ", "species", " ", "is", " ", "missing", 
     " ", "an", " ", "ODE", " ", "or", " ", "a", " ", "direct", " ", 
     "definition", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "=", "_"}], ")"}], " ", "in", " ", 
     RowBox[{"odesys", "."}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"MissingODEQ", "[", 
     RowBox[{"odesys_", ",", "x_", ",", "t_Symbol"}], "]"}], ":=", "\n", " ", 
    RowBox[{"!", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"odesys", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "==", "_"}], " ", 
        "|", " ", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "==", "_"}]}]}], "]"}]}]}], "  \t", 
   "\n", "\n", 
   RowBox[{
    RowBox[{"RxnsysToOdesys", "[", 
     RowBox[{"rxnsys_", ",", 
      RowBox[{"t_Symbol", ":", "Global`t"}]}], "]"}], ":=", "\n", " ", 
    RowBox[{"Module", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"spcs", "=", 
         RowBox[{"SpeciesInRxnsys", "[", "rxnsys", "]"}]}], ",", " ", "concs",
         ",", " ", "termssys", ",", " ", "odesys", ",", " ", "eqsFromTerms", 
        ",", " ", "eqsFromConcs"}], "}"}], ",", "\n", "\n", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "extract", " ", "conc", " ", "statements", " ", "and", " ", "sum", " ",
         "them", " ", "for", " ", "same", " ", "species"}], " ", "*)"}], "\n",
       "  ", 
      RowBox[{
       RowBox[{"concs", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"conc", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "&"}], 
         "/@", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"rxnsys", ",", 
             RowBox[{"conc", "[", "__", "]"}]}], "]"}], ",", 
           RowBox[{"Extract", "[", 
            RowBox[{"{", "1", "}"}], "]"}]}], "]"}]}]}], ";", "\n", "\n", 
       "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"Convert", " ", 
         RowBox[{"rxn", "[", "]"}], " ", "to", " ", 
         RowBox[{"term", "[", "]"}], " ", "statements"}], " ", "*)"}], "\n", 
       "  ", 
       RowBox[{"termssys", "=", 
        RowBox[{"rxnsys", " ", "/.", " ", 
         RowBox[{
          RowBox[{"rxn", ":", 
           RowBox[{"rxn", "[", "__", "]"}]}], ":>", 
          RowBox[{"Seq", "@@", 
           RowBox[{"ProcessRxnToTerms", "[", 
            RowBox[{"rxn", ",", "t"}], "]"}]}]}]}]}], ";", "\n", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"ODEs", " ", "from", " ", "parsing", " ", "terms"}], " ", 
        "*)"}], "\n", "  ", 
       RowBox[{"eqsFromTerms", " ", "=", " ", 
        RowBox[{"ProcessTermsToOdes", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"termssys", ",", 
            RowBox[{"term", "[", "__", "]"}]}], "]"}], ",", "t"}], "]"}]}], 
       ";", " ", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "initial", " ", "values", " ", "from", " ", "parsing", " ", "conc", 
         " ", "statements"}], " ", "*)"}], "\n", "  ", 
       RowBox[{"eqsFromConcs", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"concs", ",", 
          RowBox[{
           RowBox[{"conc", "[", 
            RowBox[{"x_", ",", "c_"}], "]"}], ":>", 
           RowBox[{
            RowBox[{"x", "[", "0", "]"}], "==", "c"}]}]}], "]"}]}], ";", " ", 
       "\n", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Remove", " ", "term", " ", "and", " ", "conc", " ", "statements", 
          " ", "from", " ", "rxnsys", " ", "and", " ", "add", " ", "eqs", " ",
           "generated", " ", "from", " ", 
          RowBox[{"them", ".", " ", "\n", "     ", "If"}], " ", "there", " ", 
          "is", " ", "a", " ", "conflict"}], ",", " ", 
         RowBox[{
          RowBox[{"use", " ", "pass"}], "-", 
          RowBox[{"through", " ", "equations"}]}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"odesys", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"termssys", ",", " ", 
          RowBox[{
           RowBox[{"term", "[", "__", "]"}], "|", 
           RowBox[{"conc", "[", "__", "]"}]}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"odesys", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"odesys", ",", "\n", "                ", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"eqsFromTerms", ",", " ", 
            RowBox[{"Alternatives", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "'"}], "[", "t", "]"}], "==", "_"}], "&"}], 
               " ", "/@", " ", 
               RowBox[{"Cases", "[", 
                RowBox[{"odesys", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x_", "'"}], "[", "t", "]"}], "|", 
                    RowBox[{"x_", "[", "t", "]"}]}], ")"}], "==", "_"}], ":>",
                   "x"}]}], "]"}]}], ")"}]}]}], "]"}], ",", "\n", 
          "                ", "eqsFromConcs"}], "]"}]}], ";", "\n", "     ", 
       "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "For", " ", "species", " ", "still", " ", "without", " ", "initial", 
          " ", "values"}], ",", " ", 
         RowBox[{"add", " ", "zeros"}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"odesys", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"odesys", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "0", "]"}], "==", "0"}], "&"}], " ", "/@", " ", 
           RowBox[{"Select", "[", 
            RowBox[{"spcs", ",", " ", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"InitialValueSetQ", "[", 
                RowBox[{"odesys", ",", "#"}], "]"}]}], "&"}]}], "]"}]}]}], 
         "]"}]}], ";", "\n", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "For", " ", "species", " ", "still", " ", "without", " ", "ODE", " ",
           "or", " ", "direct", " ", "definition"}], ",", " ", 
         RowBox[{"add", " ", "zero", " ", "time", " ", "derivative"}]}], " ", 
        "*)"}], "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "This", " ", "can", " ", "happen", " ", "for", " ", "example", " ", 
          "if", " ", "conc", " ", "is", " ", "defined"}], ",", " ", 
         RowBox[{"but", " ", "nothing", " ", "else"}]}], " ", "*)"}], "\n", 
       "  ", 
       RowBox[{"Join", "[", 
        RowBox[{"odesys", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"#", "[", "t", "]"}], ",", "t"}], "]"}], "==", "0"}], 
           "&"}], " ", "/@", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"spcs", ",", " ", 
            RowBox[{
             RowBox[{"MissingODEQ", "[", 
              RowBox[{"odesys", ",", "#", ",", "t"}], "]"}], "&"}]}], 
           "]"}]}]}], "]"}]}]}], "\n", " ", "]"}]}], "\n", " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Create", " ", "list", " ", "of", " ", "ODEs", " ", "from", " ", 
     "parsing", " ", "term", " ", 
     RowBox[{"statements", ".", " ", "terms"}], " ", "should", " ", "be", " ",
      "list", " ", "of", " ", 
     RowBox[{"term", "[", "]"}], " ", 
     RowBox[{"statements", "."}]}], " ", "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProcessTermsToOdes", "[", 
      RowBox[{"terms_", ",", "t_Symbol"}], "]"}], ":=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"spcs", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"terms", ",", 
            RowBox[{
             RowBox[{"term", "[", 
              RowBox[{"s_", ",", "_"}], "]"}], ":>", "s"}]}], "]"}], "]"}]}], 
        "}"}], ",", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"Total", "[", 
           RowBox[{"Cases", "[", 
            RowBox[{"terms", ",", 
             RowBox[{
              RowBox[{"term", "[", 
               RowBox[{"#", ",", "rate_"}], "]"}], ":>", "rate"}]}], "]"}], 
           "]"}]}], " ", "&"}], " ", "/@", " ", "spcs"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Create", " ", "list", " ", "of", " ", 
     RowBox[{"term", "[", "]"}], " ", "statements", " ", "from", " ", 
     "parsing", " ", "a", " ", "rxn", " ", "statement"}], " ", "*)"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProcessRxnToTerms", "[", 
      RowBox[{
       RowBox[{"reaction", ":", 
        RowBox[{"rxn", "[", 
         RowBox[{"r_", ",", "p_", ",", "k_"}], "]"}]}], ",", "t_Symbol"}], 
      "]"}], ":=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"spcs", "=", 
          RowBox[{"SpeciesInRxnsys", "[", 
           RowBox[{"{", "reaction", "}"}], "]"}]}], ",", " ", "rrate", ",", 
         " ", "spccoeffs", ",", "terms"}], "}"}], ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "compute", " ", "rate", " ", "of", " ", "this", " ", "reaction"}], 
        " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"rrate", " ", "=", " ", 
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"r", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Times", "[", 
                RowBox[{"b_", ",", "s_"}], "]"}], ":>", 
               RowBox[{"s", "^", "b"}]}], ",", 
              RowBox[{"Plus", "->", "Times"}]}], "}"}]}], ")"}]}]}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"for", " ", "each", " ", "species"}], ",", " ", 
          RowBox[{"get", " ", "a", " ", "net", " ", "coefficient"}]}], "*)"}],
         "\n", 
        RowBox[{"spccoeffs", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"p", "-", "r"}], ",", "#"}], "]"}], "&"}], " ", "/@", 
          " ", "spcs"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "create", " ", "term", " ", "for", " ", "each", " ", "species"}], 
         "*)"}], "\n", 
        RowBox[{"terms", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"term", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"#2", "*", "rrate"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"spcs", ",", " ", "spccoeffs"}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
         "change", " ", "all", " ", "species", " ", "variables", " ", "in", 
          " ", "the", " ", "second", " ", "arg", " ", "in", " ", 
          RowBox[{"term", "[", "]"}], " ", "to", " ", "be", " ", "functions", 
          " ", "of", " ", "t"}], "*)"}], "\n", 
        RowBox[{"terms", "/.", 
         RowBox[{
          RowBox[{"term", "[", 
           RowBox[{"spc_", ",", "rate_"}], "]"}], ":>", 
          RowBox[{"term", "[", 
           RowBox[{"spc", ",", 
            RowBox[{"rate", "/.", 
             RowBox[{
              RowBox[{"s_", "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"spcs", ",", "s"}], "]"}]}], ":>", 
              RowBox[{"s", "[", "t", "]"}]}]}]}], "]"}]}]}]}]}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[131]:=",ExpressionUUID->"0bf08946-00fb-491b-aa7b-777cfbe3aa6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateRxnsys", "[", 
   RowBox[{"rxnsys_", ",", "endtime_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "NDSolve", "]"}]}]}], "]"}], ":=", "\n", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spcs", "=", 
       RowBox[{"SpeciesInRxnsys", "[", "rxnsys", "]"}]}], ",", 
      RowBox[{"odesys", "=", 
       RowBox[{"RxnsysToOdesys", "[", 
        RowBox[{"rxnsys", ",", "Global`t"}], "]"}]}]}], "}"}], ",", "\n", " ", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{"odesys", ",", " ", "spcs", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Global`t", ",", "0", ",", "endtime"}], "}"}], ",", "opts", 
         ",", 
         RowBox[{"MaxSteps", "->", "Infinity"}], ",", 
         RowBox[{"AccuracyGoal", "->", "MachinePrecision"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"NDSolve", "::", "\"\<precw\>\""}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[136]:=",ExpressionUUID->"0ab66a60-4873-4f07-ad13-ae6f96c96551"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[137]:=",ExpressionUUID->"5105bf3b-0c20-4204-a302-3e644a296f99"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Polymer CRNs", "Section",
 CellChangeTimes->{{3.818557658537264*^9, 3.8185576713330364`*^9}, {
   3.8197309193809843`*^9, 3.8197309456480274`*^9}, 3.8204387720897236`*^9, {
   3.821141297262041*^9, 3.8211412986652975`*^9}, {3.8211438860836153`*^9, 
   3.8211438914312844`*^9}, {3.822930149104574*^9, 
   3.822930153098341*^9}},ExpressionUUID->"bc8d069d-abd3-456a-9b21-\
637c887590ef"],

Cell[TextData[{
 StyleBox["listToSpeciesName", "Code"],
 " converts a polymer stored as a ",
 StyleBox["list", "Input"],
 " of monomers to a species name that joins all monomers."
}], "Text",
 CellChangeTimes->{{3.6858173207085094`*^9, 3.685817370869405*^9}, {
   3.685817420131446*^9, 3.685817472976656*^9}, {3.687368890613741*^9, 
   3.6873688957198954`*^9}, {3.6873696155806227`*^9, 
   3.6873697365324306`*^9}, {3.687369778455845*^9, 3.6873698505270557`*^9}, {
   3.6873698924056263`*^9, 3.687369991477169*^9}, {3.6873700508495855`*^9, 
   3.6873700685383353`*^9}, {3.6873701321501617`*^9, 
   3.6873701775229006`*^9}, {3.687370221317741*^9, 3.6873702224322834`*^9}, {
   3.687370259994568*^9, 3.6873703048256226`*^9}, {3.6873703527770095`*^9, 
   3.687370356694211*^9}, {3.68737041652482*^9, 3.687370425961397*^9}, {
   3.6873757070638685`*^9, 3.6873757095674376`*^9}, {3.6873757464890842`*^9, 
   3.687375807885219*^9}, 3.6874937985440903`*^9, {3.7545068032325873`*^9, 
   3.7545068242746696`*^9}, {3.7545068866192703`*^9, 3.754506893227106*^9}, {
   3.7545069237511616`*^9, 3.754506999498821*^9}, {3.75450705214262*^9, 
   3.754507095382265*^9}, {3.754512912444339*^9, 3.754512914865609*^9}, {
   3.754512960120391*^9, 3.7545129640258408`*^9}, {3.754512997299365*^9, 
   3.7545130782486677`*^9}, {3.7559965397377644`*^9, 3.75599653998785*^9}, {
   3.755999575865232*^9, 3.7559996133720393`*^9}, {3.7559997358732944`*^9, 
   3.7559997363265333`*^9}, {3.755999769363742*^9, 3.7559998239340973`*^9}, {
   3.7559998920423093`*^9, 3.7559999016985674`*^9}, 3.755999972922656*^9, {
   3.7560000379602966`*^9, 3.7560000526802197`*^9}, {3.7560000848923893`*^9, 
   3.7560001515503855`*^9}, {3.7560002087650213`*^9, 3.756000271524587*^9}, {
   3.756000339933739*^9, 3.756000343184882*^9}, {3.7560005588932424`*^9, 
   3.756000562064345*^9}, {3.7560016125416775`*^9, 3.7560016201240187`*^9}, {
   3.756004459288654*^9, 3.756004486186623*^9}, 3.7560053887361155`*^9, {
   3.756005548584444*^9, 3.7560055499905357`*^9}, 3.7560059590700874`*^9, 
   3.756173590171424*^9, {3.8192370372016497`*^9, 3.8192370433448887`*^9}, {
   3.81923708126733*^9, 3.8192370944567556`*^9}, {3.8192371286370587`*^9, 
   3.819237143084407*^9}, {3.8192371744690547`*^9, 3.819237191751663*^9}, {
   3.8192372231366224`*^9, 3.819237309497175*^9}, {3.8192386902955136`*^9, 
   3.8192386932892227`*^9}, {3.822940792760927*^9, 3.8229408298686795`*^9}, {
   3.822940867692195*^9, 3.8229409190043845`*^9}, {3.822940967308549*^9, 
   3.8229409722260265`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"175b8890-2772-48c1-9df0-c1a0a799a50e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listToSpeciesName", "[", "list_", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8229341390923233`*^9, 3.8229341940798674`*^9}, {
  3.8229360012694087`*^9, 3.8229360160020757`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"298f91c4-a0a2-4516-9662-307074df6c6d"],

Cell[TextData[{
 StyleBox["polymerCRN", "Code"],
 " generates a list of polymers and a list of polymer reactions based on a \
list of ",
 StyleBox["monomers", "Input"],
 ", a list of ",
 StyleBox["rules", "Input"],
 " for how the monomers interact with each other (each rule is defined as a \
pair of monomers with an order that applies to all rules, e.g. left to right, \
bottom to top), a list of ",
 StyleBox["rates", "Input"],
 " of monomer interactions (one for each rule), and the maximum length of \
polymers enumerated (",
 StyleBox["maxlength", "Input"],
 "). \n\nNote: An experimental system will not have a set maximum length of \
polymers, and polymers could grow infinitely (whether it is likely or not \
depends on parameters including concentrations and rates). Setting a maximum \
length in simulation allows for the approximate modeling of an infinite \
chemical reaction network. The choice of the maximum length will affect the \
result of simulation (i.e. how accurate the approximation is). To understand \
the expected behavior of an experimental system, a good choice of the maximum \
length is just large enough so that no significant change in the result is \
observed with a larger number.   "
}], "Text",
 CellChangeTimes->{{3.6858173207085094`*^9, 3.685817370869405*^9}, {
   3.685817420131446*^9, 3.685817472976656*^9}, {3.687368890613741*^9, 
   3.6873688957198954`*^9}, {3.6873696155806227`*^9, 
   3.6873697365324306`*^9}, {3.687369778455845*^9, 3.6873698505270557`*^9}, {
   3.6873698924056263`*^9, 3.687369991477169*^9}, {3.6873700508495855`*^9, 
   3.6873700685383353`*^9}, {3.6873701321501617`*^9, 
   3.6873701775229006`*^9}, {3.687370221317741*^9, 3.6873702224322834`*^9}, {
   3.687370259994568*^9, 3.6873703048256226`*^9}, {3.6873703527770095`*^9, 
   3.687370356694211*^9}, {3.68737041652482*^9, 3.687370425961397*^9}, {
   3.6873757070638685`*^9, 3.6873757095674376`*^9}, {3.6873757464890842`*^9, 
   3.687375807885219*^9}, 3.6874937985440903`*^9, {3.7545068032325873`*^9, 
   3.7545068242746696`*^9}, {3.7545068866192703`*^9, 3.754506893227106*^9}, {
   3.7545069237511616`*^9, 3.754506999498821*^9}, {3.75450705214262*^9, 
   3.754507095382265*^9}, {3.754512912444339*^9, 3.754512914865609*^9}, {
   3.754512960120391*^9, 3.7545129640258408`*^9}, {3.754512997299365*^9, 
   3.7545130782486677`*^9}, {3.7559965397377644`*^9, 3.75599653998785*^9}, {
   3.755999575865232*^9, 3.7559996133720393`*^9}, {3.7559997358732944`*^9, 
   3.7559997363265333`*^9}, {3.755999769363742*^9, 3.7559998239340973`*^9}, {
   3.7559998920423093`*^9, 3.7559999016985674`*^9}, 3.755999972922656*^9, {
   3.7560000379602966`*^9, 3.7560000526802197`*^9}, {3.7560000848923893`*^9, 
   3.7560001515503855`*^9}, {3.7560002087650213`*^9, 3.756000271524587*^9}, {
   3.756000339933739*^9, 3.756000343184882*^9}, {3.7560005588932424`*^9, 
   3.756000562064345*^9}, {3.7560016125416775`*^9, 3.7560016201240187`*^9}, {
   3.756004459288654*^9, 3.756004486186623*^9}, 3.7560053887361155`*^9, {
   3.756005548584444*^9, 3.7560055499905357`*^9}, 3.7560059590700874`*^9, 
   3.756173590171424*^9, {3.8192370372016497`*^9, 3.8192370433448887`*^9}, {
   3.81923708126733*^9, 3.8192370944567556`*^9}, {3.8192371286370587`*^9, 
   3.819237143084407*^9}, {3.8192371744690547`*^9, 3.819237191751663*^9}, {
   3.8192372231366224`*^9, 3.819237309497175*^9}, {3.8192386902955136`*^9, 
   3.8192386932892227`*^9}, {3.822940792760927*^9, 3.8229408298686795`*^9}, {
   3.822940867692195*^9, 3.8229409190043845`*^9}, {3.822940967308549*^9, 
   3.8229412086229415`*^9}, {3.8229413402834806`*^9, 3.822941488495116*^9}, {
   3.8229415455833993`*^9, 3.8229415550785503`*^9}, {3.8229415877295237`*^9, 
   3.822941646005414*^9}, {3.8230229095621614`*^9, 3.8230230987542667`*^9}, {
   3.8230231389345365`*^9, 3.8230231485252953`*^9}, {3.823023199335842*^9, 
   3.8230232075307093`*^9}, {3.8230232518097796`*^9, 3.823023348731785*^9}, {
   3.8230233957739177`*^9, 3.823023406846073*^9}, {3.8230234595183764`*^9, 
   3.8230234614619527`*^9}, {3.823023497763599*^9, 3.8230235602949705`*^9}, {
   3.8230235993951645`*^9, 3.8230237115303135`*^9}, {3.8230237525658064`*^9, 
   3.823023834395361*^9}, {3.823023884666051*^9, 3.8230238954269514`*^9}, {
   3.823023981757885*^9, 3.8230239822267385`*^9}, {3.823024359715495*^9, 
   3.823024438740167*^9}, {3.823192855369005*^9, 3.823192874382123*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"130a33d4-1f4e-4b64-9d69-b8fc5e872495"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polymerCRN", "[", 
   RowBox[{"monomers_", ",", "rules_", ",", "rates_", ",", "maxlength_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "polymers", ",", "rxnsys", ",", "n1", ",", "n2", ",", "m", ",", "i", ",",
       "j", ",", "k", ",", "p", ",", "q", ",", "ruleset", ",", "newpolymer", 
      ",", "newrxn"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"polymers", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"monomers", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "monomers", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rxnsys", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n1", "=", "0"}], ";", 
     RowBox[{"n2", "=", "0"}], ";", 
     RowBox[{"m", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"n1", "<", "n2"}], " ", "||", " ", 
        RowBox[{"m", "\[Equal]", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n1", "=", "n2"}], ";", 
        RowBox[{"m", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "polymers", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", 
              RowBox[{"polymers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ruleset", "=", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"rules", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"polymers", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "1"}], ",", 
               RowBox[{"k", "\[LessEqual]", 
                RowBox[{"Length", "[", "ruleset", "]"}]}], ",", 
               RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"p", "=", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"rules", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ruleset", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"q", "=", "1"}], ",", 
                  RowBox[{"q", "\[LessEqual]", 
                   RowBox[{"Length", "[", 
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"q", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"newpolymer", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "q"}], "]"}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"newrxn", "=", 
                    RowBox[{"rxn", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"listToSpeciesName", "[", 
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "+", 
                    RowBox[{"listToSpeciesName", "[", 
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "q"}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"listToSpeciesName", "[", "newpolymer", "]"}], 
                    ",", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"ruleset", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "newpolymer"}], 
                    "]"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "newpolymer", "]"}], 
                    "\[LessEqual]", "maxlength"}]}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"polymers", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "newpolymer"}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"rxnsys", ",", "newrxn"}], "]"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "newpolymer", "]"}], 
                    "\[LessEqual]", "maxlength"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"rxnsys", ",", "newrxn"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"n2", "++"}]}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}]}], "]"}]}]}], "]"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"listToSpeciesName", "[", 
           RowBox[{"polymers", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "polymers", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"polymers", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
        "Flatten"}], ",", "\[IndentingNewLine]", "rxnsys"}], "}"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwd0Fsog3EYBvBvxJUzE2P6NitZyrYmJYmbXWAXFotSRmQOJayUEc0hp7n4
Wi6cSmnl0NJyYTZ242Y59C1L0S6sUbuYGCWNbb7nf/H26+mt96lX1DOi6Uui
KIrmBpbdzaQeGMMNfi+bBiMvD1JonZbKYH/DaBUcXs2rhgrLxjBUvvmI30mO
CajSeSbhc1fHHMx68SzCoUq3GRpMthPSw6ov4cAm5YYVPOaL3C10E9nG9R/Y
HKNikInreYecmoydZGhbcaRBAd+aDl9r6Bw4VpAsgDkhnRjKLX4pLFY4KqGy
fFkJY+EWNfwzGgdg4DRzFu4M5RK/6xPzUCtsWoDRfaEdXiyKiHXz8nNolwhd
sDNSyMLW7sADfNLRIbh7IyF6ytff4J2X/w6Dl23iI05dtEQGo1l7tVBVxtTD
FPO9huTizx4Yz44boN20tQTzgvlm2O4sYGDLYMIJfddaF9mX3v5CelfxB68+
tvnHnPqlqSJoGj9btuEvj71r8B9V3xMP
  "],
 CellLabel->
  "In[140]:=",ExpressionUUID->"81547e91-c10c-440f-93d1-0c568558893b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot function", "Section",
 CellChangeTimes->{{3.818557658537264*^9, 3.8185576713330364`*^9}, 
   3.8197309193809843`*^9, {3.8204366251305375`*^9, 3.8204366264698496`*^9}, {
   3.8229364411346016`*^9, 
   3.8229364665468216`*^9}},ExpressionUUID->"6d40e031-754e-4146-a506-\
dd10bdf5e8dc"],

Cell[TextData[{
 StyleBox["PlotSim", "Code"],
 " function plots a simulation including multiple trajectories.\n",
 StyleBox["SIMcircuit", "Input"],
 " is a simulation.\n",
 StyleBox["SIMtime", "Input"],
 " is the simulation time.  \n",
 StyleBox["trajectories", "Input"],
 " is a list of species names or concentrations shown in the legend. The \
default is none.\n",
 StyleBox["TrajectoryLabel", "Input"],
 " is a label for the legend of trajectories. The default is none.\n",
 StyleBox["OutputLabel", "Input"],
 " is a label for the vertical axis, which should be a description of the \
output simulated, with unit specified. The default is none.\n",
 StyleBox["CircuitLabel", "Input"],
 " is a label for the plot. It can be a description of the circuit. The \
default is none. \n",
 StyleBox["TimeRange", "Input"],
 " defines the range of time plotted. The unit is hours. The format is All, \
{All, max}, {min, All}, or {min, max}, where min and max should be given as \
the desired numbers for a time range. The default is All (i.e. all data \
points plotted).\n",
 StyleBox["OutputRange", "Input"],
 " defines the range of output plotted. The unit is nM. Same format and \
default as timeRange."
}], "Text",
 CellChangeTimes->{{3.6858173207085094`*^9, 3.685817370869405*^9}, {
   3.685817420131446*^9, 3.685817472976656*^9}, {3.687368890613741*^9, 
   3.6873688957198954`*^9}, {3.6873696155806227`*^9, 
   3.6873697365324306`*^9}, {3.687369778455845*^9, 3.6873698505270557`*^9}, {
   3.6873698924056263`*^9, 3.687369991477169*^9}, {3.6873700508495855`*^9, 
   3.6873700685383353`*^9}, {3.6873701321501617`*^9, 
   3.6873701775229006`*^9}, {3.687370221317741*^9, 3.6873702224322834`*^9}, {
   3.687370259994568*^9, 3.6873703048256226`*^9}, {3.6873703527770095`*^9, 
   3.687370356694211*^9}, {3.68737041652482*^9, 3.687370425961397*^9}, {
   3.6873757070638685`*^9, 3.6873757095674376`*^9}, {3.6873757464890842`*^9, 
   3.687375807885219*^9}, 3.6874937985440903`*^9, {3.7545068032325873`*^9, 
   3.7545068242746696`*^9}, {3.7545068866192703`*^9, 3.754506893227106*^9}, {
   3.7545069237511616`*^9, 3.754506999498821*^9}, {3.75450705214262*^9, 
   3.754507095382265*^9}, {3.754512912444339*^9, 3.754512914865609*^9}, {
   3.754512960120391*^9, 3.7545129640258408`*^9}, {3.754512997299365*^9, 
   3.7545130782486677`*^9}, {3.7559965397377644`*^9, 3.75599653998785*^9}, {
   3.755999575865232*^9, 3.7559996133720393`*^9}, {3.7559997358732944`*^9, 
   3.7559997363265333`*^9}, {3.755999769363742*^9, 3.7559998239340973`*^9}, {
   3.7559998920423093`*^9, 3.7559999016985674`*^9}, 3.755999972922656*^9, {
   3.7560000379602966`*^9, 3.7560000526802197`*^9}, {3.7560000848923893`*^9, 
   3.7560001515503855`*^9}, {3.7560002087650213`*^9, 3.756000271524587*^9}, {
   3.756000339933739*^9, 3.756000343184882*^9}, {3.7560005588932424`*^9, 
   3.756000562064345*^9}, {3.7560016125416775`*^9, 3.7560016201240187`*^9}, {
   3.756004459288654*^9, 3.756004486186623*^9}, 3.7560053887361155`*^9, {
   3.756005548584444*^9, 3.7560055499905357`*^9}, 3.7560059590700874`*^9, 
   3.756173590171424*^9, {3.8192370372016497`*^9, 3.8192370433448887`*^9}, {
   3.81923708126733*^9, 3.8192370944567556`*^9}, {3.8192371286370587`*^9, 
   3.819237143084407*^9}, {3.8192371744690547`*^9, 3.819237191751663*^9}, {
   3.8192372231366224`*^9, 3.819237309497175*^9}, {3.8192386902955136`*^9, 
   3.8192386932892227`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e571a294-4583-4a1c-b9ed-7f8ed095a2ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotSim", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plotSize", "\[Rule]", "300"}], ",", 
     RowBox[{"labelSize", "\[Rule]", "16"}], ",", 
     RowBox[{"lineThickness", "\[Rule]", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotSim", "[", 
   RowBox[{"SIMcircuit_", ",", "SIMtime_", ",", 
    RowBox[{"trajectories_", ":", "\"\<\>\""}], ",", 
    RowBox[{"TrajectoryLabel_", ":", "\"\<\>\""}], ",", 
    RowBox[{"OutputLable_", ":", "\"\<\>\""}], ",", 
    RowBox[{"CircuitLabel_", ":", "\"\<\>\""}], ",", 
    RowBox[{"TimeRange_", ":", "All"}], ",", 
    RowBox[{"OutputRange_", ":", "All"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{"SIMcircuit", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "SIMtime"}], "}"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"CircuitLabel", ",", 
       RowBox[{"OptionValue", "[", "labelSize", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Time (hours)\>\"", ",", "OutputLable"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", 
          RowBox[{"OptionValue", "[", "lineThickness", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "i", 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "SIMcircuit", "]"}], "<", "8"}], ",", 
           "0.12", ",", "0"}], "]"}], ",", "0.96", ",", 
         RowBox[{"0.96", "/", 
          RowBox[{"Length", "[", "SIMcircuit", "]"}]}]}], "}"}]}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"SwatchLegend", "[", 
        RowBox[{"Automatic", ",", "trajectories", ",", 
         RowBox[{"LegendLabel", "\[Rule]", "TrajectoryLabel"}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
          RowBox[{
           RowBox[{"OptionValue", "[", "labelSize", "]"}], "*", "0.75"}]}]}], 
        "]"}], ",", "Right"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"Gray", ",", 
       RowBox[{"FontSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "labelSize", "]"}]}], ",", 
       RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"TimeRange", ",", "OutputRange"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "1.3"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "plotSize", "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.638141502622283*^9, 3.6381415461364202`*^9}, {
   3.6467581367602463`*^9, 3.646758199791881*^9}, {3.646758324150941*^9, 
   3.6467583696901913`*^9}, {3.646758400344897*^9, 3.646758407253806*^9}, {
   3.6467584595177965`*^9, 3.64675849583051*^9}, {3.6467585929222646`*^9, 
   3.6467585970371776`*^9}, {3.6467586899129443`*^9, 3.646758726095566*^9}, {
   3.646758762402275*^9, 3.646758771706864*^9}, {3.6489400154802666`*^9, 
   3.6489400601050463`*^9}, {3.6647464400533576`*^9, 
   3.6647465215831947`*^9}, {3.6647465616746364`*^9, 3.664746656361826*^9}, {
   3.6647472134087296`*^9, 3.66474728615934*^9}, {3.6647478330072794`*^9, 
   3.664747844342334*^9}, {3.6647478997296114`*^9, 3.664747953975089*^9}, {
   3.664747994954178*^9, 3.664748041597248*^9}, {3.664748078295282*^9, 
   3.664748158225004*^9}, {3.6647482051833153`*^9, 3.6647482601372805`*^9}, {
   3.6647483573382363`*^9, 3.664748359920067*^9}, {3.6647483905398073`*^9, 
   3.6647485667247944`*^9}, {3.664748617520811*^9, 3.6647486279392004`*^9}, {
   3.66474868043444*^9, 3.664748766938807*^9}, {3.664748817294529*^9, 
   3.6647490258304806`*^9}, {3.6647490566683598`*^9, 3.664749141339425*^9}, {
   3.6647491991153936`*^9, 3.6647492023737082`*^9}, {3.6647492548929644`*^9, 
   3.664749441001988*^9}, {3.664749600863394*^9, 3.6647496340449333`*^9}, {
   3.664749776537019*^9, 3.664749856921061*^9}, {3.6647601582475567`*^9, 
   3.6647601955890503`*^9}, {3.6647602344776363`*^9, 
   3.6647602351581206`*^9}, {3.664761013914587*^9, 3.664761036366514*^9}, {
   3.664763764292715*^9, 3.664763764543871*^9}, {3.6647642853833723`*^9, 
   3.6647643014847775`*^9}, 3.664764658577117*^9, {3.664764888939536*^9, 
   3.664764892053746*^9}, {3.664765157116782*^9, 3.6647651996229353`*^9}, {
   3.664766736045859*^9, 3.66476673843155*^9}, {3.6648203812798395`*^9, 
   3.6648203944691963`*^9}, {3.6648208488605423`*^9, 3.6648208518886905`*^9}, 
   3.6648238711425724`*^9, 3.679090360137673*^9, {3.685378497462957*^9, 
   3.6853785602913203`*^9}, {3.685378704361683*^9, 3.6853787066401587`*^9}, {
   3.6853787546467304`*^9, 3.685378791728092*^9}, {3.68537892618746*^9, 
   3.6853789267169795`*^9}, {3.685379612064245*^9, 3.685379614624648*^9}, {
   3.685380057914824*^9, 3.6853800769071617`*^9}, {3.6853801201384087`*^9, 
   3.6853801697940254`*^9}, {3.685380251420563*^9, 3.685380318650753*^9}, {
   3.685380503773093*^9, 3.6853805159903336`*^9}, {3.6853805479198356`*^9, 
   3.6853805675602555`*^9}, {3.6853817975003333`*^9, 
   3.6853818022111826`*^9}, {3.6853819259543104`*^9, 
   3.6853819723615484`*^9}, {3.685382048961948*^9, 3.6853820506871247`*^9}, {
   3.6853820918549185`*^9, 3.6853821173188295`*^9}, {3.6853856095451417`*^9, 
   3.685385627712569*^9}, {3.685385671253661*^9, 3.6853856774502125`*^9}, {
   3.685386480752714*^9, 3.6853864907079086`*^9}, {3.685386542040861*^9, 
   3.68538654500936*^9}, {3.6853865835292325`*^9, 3.685386604146385*^9}, {
   3.685386663866081*^9, 3.685386714324999*^9}, {3.685386763616073*^9, 
   3.685386814216276*^9}, {3.6853868750064206`*^9, 3.685386923904418*^9}, {
   3.6853870158129916`*^9, 3.685387062424082*^9}, {3.6853873068281317`*^9, 
   3.6853873072101946`*^9}, {3.685387438353346*^9, 3.6853874408271017`*^9}, {
   3.685816877895047*^9, 3.685816917234632*^9}, {3.685816965781227*^9, 
   3.6858169659618773`*^9}, {3.6858172721908407`*^9, 3.685817274308077*^9}, {
   3.685817516468889*^9, 3.685817547012492*^9}, {3.68581758372794*^9, 
   3.6858175900450196`*^9}, {3.685817736479788*^9, 3.685817739332979*^9}, {
   3.685817893157239*^9, 3.6858179099099765`*^9}, {3.6858181805027547`*^9, 
   3.685818183603495*^9}, {3.68581828292848*^9, 3.6858182859484434`*^9}, {
   3.6858196241919966`*^9, 3.6858196398473406`*^9}, {3.685819852400467*^9, 
   3.6858198559172907`*^9}, {3.6858306940859857`*^9, 3.6858307118856955`*^9}, 
   3.6858307517348948`*^9, {3.685830943545213*^9, 3.685830945975828*^9}, {
   3.685830983051689*^9, 3.6858309941831155`*^9}, {3.685895208687392*^9, 
   3.6858952187132273`*^9}, {3.685899542327878*^9, 3.6858995429631405`*^9}, 
   3.6873692341304164`*^9, {3.6873695199339037`*^9, 3.6873695700943484`*^9}, {
   3.6873700084632125`*^9, 3.6873700165088634`*^9}, {3.6873703780598617`*^9, 
   3.687370409807455*^9}, {3.6873704925231857`*^9, 3.6873705250728126`*^9}, {
   3.687372674952151*^9, 3.687372741564371*^9}, {3.6873730096995707`*^9, 
   3.6873730099996924`*^9}, {3.6873731396722536`*^9, 
   3.6873731462519274`*^9}, {3.687373319151724*^9, 3.687373326592295*^9}, {
   3.687374767578972*^9, 3.6873747804736457`*^9}, {3.687375304415467*^9, 
   3.6873753621237288`*^9}, {3.687375514500484*^9, 3.687375514975692*^9}, 
   3.6873757146036463`*^9, {3.687376122531373*^9, 3.687376199083696*^9}, {
   3.6873762298308487`*^9, 3.6873762309443054`*^9}, {3.6873814350726852`*^9, 
   3.687381436682313*^9}, 3.6873859813123894`*^9, 3.734963890059538*^9, 
   3.735184088989194*^9, {3.7545058019525814`*^9, 3.754505815652623*^9}, {
   3.7545060313599296`*^9, 3.7545060877647896`*^9}, {3.754506688806528*^9, 
   3.754506713863101*^9}, {3.75450678301862*^9, 3.754506797124851*^9}, {
   3.7545106771431956`*^9, 3.7545106775649276`*^9}, {3.7545110519072123`*^9, 
   3.7545110548594894`*^9}, {3.7545128098177805`*^9, 
   3.7545128375453815`*^9}, {3.7545128717874575`*^9, 
   3.7545129048681326`*^9}, {3.7545129454207106`*^9, 3.754512952465918*^9}, {
   3.755999324729804*^9, 3.7559993601095457`*^9}, {3.755999390954863*^9, 
   3.755999394176148*^9}, {3.7559994587386456`*^9, 3.7559994951583257`*^9}, {
   3.7559995332688913`*^9, 3.755999552206046*^9}, {3.756001065757695*^9, 
   3.7560010680225945`*^9}, {3.756005553726348*^9, 3.756005566308635*^9}, {
   3.818536981555495*^9, 3.8185369910497856`*^9}, {3.8211441013788767`*^9, 
   3.8211441278713593`*^9}, {3.8211441579103117`*^9, 
   3.8211441759904456`*^9}, {3.8211442234854064`*^9, 3.821144295249792*^9}, {
   3.8211453773446712`*^9, 3.8211454142481785`*^9}, {3.8229365384675336`*^9, 
   3.8229365396328907`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"3bb8255c-f187-45e6-8c27-7755bdd5b2e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation (an example polymer reaction)", "Section",
 CellChangeTimes->{{3.818557658537264*^9, 3.8185576713330364`*^9}, 
   3.8197309193809843`*^9, {3.8204366251305375`*^9, 3.8204366264698496`*^9}, {
   3.8229364411346016`*^9, 3.822936462546181*^9}, {3.82293782259871*^9, 
   3.822937826174492*^9}, {3.822940386188287*^9, 3.8229403903795977`*^9}, {
   3.822940520868741*^9, 3.822940522652008*^9}, {3.8229461445781612`*^9, 
   3.822946151499323*^9}},ExpressionUUID->"c9867c8c-7bf2-44e3-ae35-\
de56928f681c"],

Cell[TextData[{
 "Remove the tail connector and make the tail have a blue receive instead of \
a dark green receive\nWith the revised set of tiles, we would get any number \
of unique structures.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
uFddXR3CyKysrNbzi3HDuLW5wCkkJiba2tpCDIZAc3FxgawN+TtevdDBgBez
oOirjUFfrg3adzQ5KYvLIYgbpWXgs+hlVsE0m1y7GKz2RaXAPyB5pU/YoaCc
5Ew2yeOSfIIkigq5Jaj4+nlqcrQXVQ9SPwcHBx0dnb59+4aEhLSeNRLjhnFr
UyHfdOjQIRSAGRsbA3QItKY69AgKN/4Kj9CJS09Otft2sWvAnm8TeRevCYWV
deLaZhbmF6FVj0Xivx9WxuX94LL1/HKX8D3fJqdmF1CE8QlmIcnlcUgep35+
qBytANfs5uYGAXCPHj327t3bypRNIowbxq2tBFaam5u7evXqbt26aWlpjR07
9vjx42g1uWbOkuBmuSzA0j5w0rKQKbZBdp5nY1Iu/u/uCwHl42ppJ/e2ib4C
USyk9qkX1d159CKecXn1tpjFbiE7jyUnZ3P4RCEfnJ08uEl6UL29vQ1obdq0
qa1YIzFuGLc2Ejiv1NTU2bNna2trGxoaOjo6QrIjyy0qCW6TbE9NXXZ6yrKA
KXanrJYFwcPBKzIq9fvf7z6Hmjfaotfb0lChZ22tqPav+5XJeT87b42ydT0N
oSmVbxHf0fGkTDkdWsNk/fr1AJqurq6rq2uLXxdyCeOGcWulUFd/QkLCZ599
pqGhYWpqun//fsmKBC3aqjRuU+xOT7Y/ZWV/wnJ5oKV9gKVtkKXtSTuvyISM
S5WVVLe/qEFkWU+c+NUGNaI6gUjw4FFlcs7PS9wj57uE+B9LZhaQVE7XEm5Q
1fz8fPii6NKli76+PrAG6LWhayMxbhi3VgsMMioqasSIEcDagAEDgoKC5DJR
adys7ICy01Z2wVZ2ZyyXn7C0PTHL4bSbbwqz6FdwXRA3Nr3hk5Dab7ROCNwJ
a2tu/P7wWOxFG9cQR8/TweGZXDa9ilZLrUhMTJw1axZ4ZyMjI4gh29avIWHc
MG6tEfi1uLg4xBo8R0REyOsO3sBteYClXfAU25BptoHT7YM996fl8K4/eF4r
oMxTclO78caJ64RVQvH13x8ERRctWR/q5BMeEJzJzOfzeUU8koAUrtEGS5j6
9ttvhwwZoqmp2adPn71797Y5aEgYN4ybwgKykpKSJk6cCKyNHDkyJiZGkdDr
FW5hk2wDLJcHTLI9PdM+0HVHNLPw5v0nNSIxdRtbalf6xomrFYjKf7sfGEXY
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
zqf9A/OuXL8nENa0vG+vmILv6Yvq4h/+2P518lLX0567o6MTWBwOX8aoEhoC
KaeZmRmwZmlpmZqa2oaskRg3FVIH4gbhlq2tra6urqGhobu7O+p4lOXc+mDy
FW40aOgRZGkX8pntWculgXOcAs9EF76oFtU13W1CSySqEwjrRGKh8HlVdcHF
323Xxc1aHuR7KC6XTXALW5i1jWbogHeGGBhSztmzZ8M3RtuyRmLcVEgdghsY
JJPJBHemra0Nhrpt2za5Tm8UN6tl4NoCLZeenOcSdCAg74fSf57X1DbTRUm3
Df4T1daJHr0UkL+UbT2Ubusa5r773PkLOWwWWUhAMNmcn0W3yJcuXQquWU9P
b8mSJa2/xdaoMG4qI+XjBn4NYsivvvpKR0enV69e+/fvl7e3XBJMOngGU5Qt
DwC/ZmV7ChK3w0Gcy9fuVdYIwF9R+RkFVKNmCu9RPSrPq4Xkf27tPZaywDnQ
Y3fUubgcNlV6IY+6CLcp2tCE7qNHj0KyqampaWxsvGHDBvgCaQ/WSIybCknJ
uIFBQlFgnPr6+t27d9+1a5did6b4wCyTtPeAuPG0pW2QzVdB63eey+ZeqXop
FL8aw9X0UC6xEFB88lJYfOXO9kPJy1wD3befO5dA5BOFZGELt93QTfbY2Fjw
ZVB/YG3o0KHHjh1r1x2CMG4qo4aUtTdufn5+RkZGEH15e3uTig6gAu9TwCy0
8zxrvSLIY090eDy7gMMvL78mFguaA60O3QioraiuCYgqXOwatMnvQkQsh80t
5hPg0Tj07lFNXJG+1Z6UlOTq6mpubg6gAW729vbJycnt5NQkwripjJSGG3z/
g1lGRUUhW3VycpJ37W5p8cgiJov0OxV/Pr6ABUFfIVyAV176X7G4hfHJ9A05
4ZOKqgvZl/5z/a+rP5UX0q6SYo3kNuyKhDoXFxdD9As1X7lypYWFBRomPXHi
xICAAPi1KLD2iLzCuKmMlIYb2GReXt6UKVPAXKdOnZqbm9s6K6XGdHH4RYXU
0CsoiEOQnNLSshZNUkwldRRyAhHVHXnj+jUeB5pWxCEp+Om7aK/uvKMELS4u
bvv27bNmzerRowfUXFdXd/z48fv27UOZWnuDhoRxUxkpDTcwTg8PDx0dHfBu
4CkgMGuTfActLYImd9+6dUuuXeahaTdv3oQTS0pKUFKZn5+fmZmZmJh4/Pjx
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
HU9Se2bUvKj6X03tU3r3DIwblspKGrf/B1RR2lQ=
     "], {{0, 212}, {293, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{293, 212},
   PlotRange->{{0, 293}, {0, 212}}]], "Input",ExpressionUUID->
  "2615ac94-ad9c-445a-b929-5bd0db73de03"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3X+snmV9x/Huxx/Lsi1mWbL9s2QzkmzRsD8WDZsaA4kuxGxMxa1z2gmx
Y0SCwxpwG8PAYMyyKSNMakqhSsuPMugKkwYoWAREba3abXQQpKWUSmXdgmLP
aQ/tPZ4Szc1yzsWz536e6/6e7/N6Je/9kF4k54SL6+MR+/zqmR9595/++JIl
S1b81Ev/491nXHDyRz96xl+85zUv/T/vPXfF2Wedu/xDp577seVnLf/oSWf+
xEv/4n/+2JIl977063/ypf+7AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAASGb79u2SXiUAYHHqe0NIiyEAYHH64Vs+++zX
5m3r1lubU5Yvl9I2+Gt8ob/+bV1g3Bb6+403V9NQ6c0dNAm2rqY9WxeoydbV
NGfrSvWzdYGabF1Nc7auVD9bF6jJ1tU0Z+tK9bN1gZpsXU1ztq5UP1sXqMnW
1TTX59ad2b123r714BXNX176vmJ9f9+kUu/6k6XFbr7uk82Oe66bN1sXGDdb
V9Ncn1v30LZTRuryv1/a+/dNKnX6svc2573nLSNl6wLjttDPlvx8SRnq8vOl
QZNg6yp7ti4QyajvrTdXi6Eub+6gSbB1lT1bF4jE1lXmbF2pfrYuEImtq8zZ
ulL9bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWUu49bdfv9FzR133SCF
7bNXXmjrAmHYuspc6K27/R0jNfPkquLvCSz13UMbr7Z1gTC6bF0/X1L0uvx8
6fjWPTbXrXl0fcuPfPf+3reMVMrWBSLpsnVnvv2Z3v+eKpXq8uYOOrLnypHv
x+yjZ89752xdZc/WBSKxdZU5W1eqn60LRGLrKnO2rlQ/WxeIxNZV5mxdqX62
LhCJravM2bpS/WxdIBJbV5mzdaX62bpAJLauMhd5677431tHytZV9GxdIBJb
V5kbx9Y9/MTFIzefrp+b5t4perYuEImtq8x13bqTYOsqe7YuEImtq8zZulL9
bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXqZ+sCkdi6ypytK9XP
1gUisXWVudBb9+vvHKmZ3at7/75KpWxdIBJbV5nrvHWPHurWPHxumrJn6wKR
2LrKXOTPTRuVravo2bpAJLauMmfrSvWzdYFIbF1lztaV6mfrApHYusqcrSvV
z9YFIrF1lTlbV6qfrQtEYusqc7auVD9bF4jE1lXmIm/dFw9uGSlbV9GzdYFI
bF1lbhxb9/C3Lxu5+fjcNGXP1gUisXWVudCfm+beKWm2LhCJravM2bpS/Wxd
IBJbV5mzdaX62bpAJLauMmfrSvWzdYFIbF1lztaV6mfrApHYusqcrSvVz9YF
IrF1lbnIW3fmG6eN1OzuNb1/X6VSti4Qia2rzHXdusfmvtep+fjcNGXP1gUi
sXWVucifmzYqW1fRs3WBSGxdZc7Wlepn6wKR2LrKnK0r1c/WBSKxdZU5W1eq
n60LRGLrKnO2rlQ/WxeIxNZV5mxdqX62LhCJravMRd66Lz63eaRsXUXP1gUi
sXWVuXFs3cO7V47cfHxumrJn6wKR2LrKXOTPTXPvlDVbF4jE1lXmbF2pfrYu
EImtq8zZulL9bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXqZ+sC
kdi6ylzkrTvzzdNHanbP2t6/r1IpWxeIxNZV5rpu3WNHDnZqPj43TdmzdYFI
bF1lLvLnpo3K1lX0bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXq
Z+sCkdi6ypytK9XP1gUisXWVOVtXqp+tC0Ri6ypzkbfu3HfvHClbV9GzdYFI
bF1lbhxb98ieT43cfHxumrJn6wKR2LrKXOTPTXPvlDVbF4jE1lXmbF2pfrYu
EImtq8zZulL9bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXqZ+sC
kdi6ylzkrTvzraUjNfvU53v/vkqlbF0gEltXmeu6dY8dPtCp+fjcNGXP1gUi
sXWVucifmzYqW1fRs3WBSGxdZc7Wlepn6wKR2LrKnK0r1c/WBSKxdZU5W1eq
n60LRGLrKnO2rlQ/WxeIxNZV5mxdqX62LhCJravMRd66cwc2jpStq+jZukAk
tq4y13nrPnVVp+bjc9OUPVsXiMTWVeYif26aeze+dj58a3Pi609olixZ8qoN
ft22+9c3H1r27ubtJ5/U7N917/E/xxfvWH38jw/+d99fz2LP1gUisXWVOVt3
Onpq5+bmikvOay698Jwf9Uenn3p8u5595h+84l8f/LrHtm2ydSeYrQtEYuuO
Nz9fipWtO71d/0+X/L/ukXs3vmxdIBJbd7z5+VKsbN3pzdbtL1sXiMTWnXze
3P6ydae30r37nz0PDvXvMWe+89Xma/etb5Yt/d3m51/zc83P/sxPN7936tua
ezeuOv7H+v4ao2brApHYupPP1u0vW3d667p1B1v286suPb5xB7/uxmsvbzau
+3Tzh+/6neObd+1n/sbeXSBbF4jE1p18fr7UX5G37szOD4zU7N71vX9fF0Nd
793gny/6rTf9RnPm+3+/OfjkAz86+8K+R5pPXPBnza+d8CvNjgdu7v3rjJit
C0Ri604+P1/qr65b99jsvk7Nx+em1anrvRucH9yv+c5vu//G5nWv/eXm6pUf
7/3rjJitC0Ri604+P1/qr8ifmzYqW3e4ut67i84/6/ieHfx57rn9mle0fvXl
zRt+/XXN+ed+sPnBM1/p/WuNlq0LRGLrTj4/X+ovW3d663LvfvjHX+33DRz8
msGv7ftrjZatC0Ri604+P1/qL1t3euty7wb/TNCFH1venPTGE5vHt2/q/WtZ
bNm6QCS27uTz86X+snWnt67/HnPwn5WU/vOUN/3mG5qr/u6C3r/OiNm6QCS2
7uTz86X+snWnt65b94efgXjGH5/WPPfE1lecPfes9zW/9Iu/0Dy4+frev86I
2bpAJLbu5PPzpf6ydae3cfz+J4Pf42Rw9/7v738y+HWDzz4c/PdD+/46I2br
ApHYupPPz5f6K/LWnXt2w0jZusM1id/XevDHT37rG5ub13zSzi1k6wKR2LqT
z8+X+qvz1t17Tafm43PTlD1bF4jE1p18fr7UX5E/N829U9ZsXSASW1eZs3Wl
+tm6QCS2rjJn60r1s3WBSGxdZc7Wlepn6wKR2LrKnK0r1c/WBSKxdZU5W1eq
n60LRGLrKnORt+7Mv58xUrNP39T791UqZesCkdi6ylzXrXvs0J5Ozcfnpil7
ti4Qia2rzEX+3LRR2bqKnq0LRGLrKnO2rlQ/WxeIxNZV5mxdqX62LhCJravM
2bpS/WxdIBJbV5mzdaX62bpAJLauMmfrSvWzdYFIbF1lLvLWndt/40jZuoqe
rQtEYusqc5237r7VnZqPz01T9mxdIBJbV5mL/Llp7p2yZusCkdi6ypytK9XP
1gUisXWVOVtXqp+tC0Ri6ypztq5UP1sXiMTWVeZsXal+ti4Qia2rzNm6Uv1s
XSASW1eZi7x1Z/9j+UgdfnpD799XqZStC0Ri6ypzXbfu0R880an5+Nw0Zc/W
BSKxdZW5yJ+bNipbV9GzdYFIbF1lztaV6mfrApHYusqcrSvVz9YFIrF1lTlb
V6qfrQtEYusqc7auVD9bF4jE1lXmbF2pfrYuEImtq8xF3rpzz3xupGxdRc/W
BSKxdZW5zlv3mbWdmo/PTVP2bF0gEltXmYv8uWnunbJm6wKR2LrKnK0r1c/W
BSKxdZU5W1eqn60LRGLrKnO2rlQ/WxeIxNZV5mxdqX62LhCJravM2bpS/Wxd
IBJbV5mLvHVnH/3wSB3ed1vv31eplK0LRGLrKnNdt+7RFx7t1Hx8bpqyZ+sC
kdi6ylzkz00bla2r6Nm6QCS2rjJn60r1s3WBSGxdZc7Wlepn6wKR2LrKnK0r
1c/WBSKxdZU5W1eqn60LRGLrKnO2rlQ/WxeIxNZV5iJv3SP71oyWravg2bpA
JLauMtd1687tX9ep+fjcNGXP1gUisXWVucifm+beKWu2LhCJravM2bpS/Wxd
IBJbV5mzdaX62bpAJLauMmfrSvWzdYFIbF1lztaV6mfrApHYusqcrSvVz9YF
IrF1lbnIW3d210dG6vAzG3v/vkqlbF0gEltXmeu6dY9+f2en5uNz05Q9WxeI
xNZV5iJ/btqobF1Fz9YFIrF1lTlbV6qfrQtEYusqc7auVD9bF4jE1lXmbF2p
frYuEImtq8zZulL9bF0gEltXmbN1pfrZukAktq4yF3nrHnl61WjZugqerQtE
Yusqc1237tx3bunUfHxumrJn6wKR2LrKXOTPTXPvlDVbF4jE1lXmbF2pfrYu
EImtq8zZulL9bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXqZ+sC
kdi6ylzkrTv72IqROrx/U+/fV6mUrQtEYusqc1237tHnd3RqPj43TdmzdYFI
bF1lLvLnpo3K1lX0bF0gEltXmbN1pfrZukAktq4yZ+tK9bN1gUhsXWXO1pXq
Z+sCkdi6ypytK9XP1gUisXWVOVtXqp+tC0Ri6ypzkbfukb1Xj9T3H7ul2bfl
KilsD332vOYfP/jbC3bFsjfbukA1tq4y13Xrzj17W6fm0/Vz03Zd85bmofNP
khZtti5QU5et+9yXVvT+8wOpVJefLw2aBFtX056tC9TUZet6c7XYs3Wl+tm6
QE22rqY5W1eqn60L1GTrapqzdaX62bpATbaupjlbV6qfrQvUZOtqmrN1pfrZ
ukBNtq6muT637szutfP2X49c3PzblW8u1vf3TerStvWfaHbcc9282brAuNm6
mub63LoL/Z7Azz68pvfvizTJBn+NL/TXv60LjNtCP1vy8yVNQ6WfLw2aBFtX
056tC9RU+swpb66yV3pzB02Cratpz9YFarJ1Nc3ZulL9bF2gJltX05ytK9XP
1gVqsnU1zdm6Uv1sXaAmW1fTXJ9bV9LCAYyLratpztaVYgYwLrauprk+ti4A
sDjMzc01V65bV6zk0Oxsp/Pfe+GFTucPPv98p/MHDh4snr3qppuK5/cdOFA8
f82GDcXze/bvL55fffvtxfNP7N1bPL9206bi+UeffLJ4ft0XvlA8v/Pxx4vn
b7n77uL5Hbt2Fc/ftmVL8TwAQMlg656yfPmCXbxqVfH8YOuWzl927bXF84Ot
Wzq/8vrri+cHW7d0/lM33FA8P9i6pfPDbN3S+WG2bun8MFu3dH6YrVs6P8zW
LZ0fZuuWztu6AEAXtq6ta+sCAFnZuraurQsAZGXr2rq2LgCQla1r69q6AEBW
tq6ta+sCAFnZuraurQsAZGXr2rq2LgCQla1r69q6AEBWtq6ta+sCAFnZurau
rQsAZGXr2rq2LgCQla1r69q6AEBWtq6ta+sCAFkNtu7Zl122YMNs3dL5YbZu
6fwwW7d0fpitWzo/zNYtnR9m65bOD7N1S+eH2bql88Ns3dL5YbZu6bytCwAA
AAAAwDjMPvu1Bdu69dbiP58lLfYGf42X7kCUu/aOs88u/rm3bt9ePP/Oc84p
nt/yla8Uz5/2539ePL/54YeL509fsaJ4/s4HHiieX3rBBcXzG++7r3j+A3/1
V8XzG+65p3j+jIsuKp6/8a67iueXX3JJ8fzn7ryzeP7Df/u3xfNrNm4snv/I
ypXF86tuLf/1t+If/qF4/uqbbw511wDabF1Nc7buy2xdW7d03tYFFjNbV9Oc
rfsyW9fWLZ23dYHFzNbVNGfrvszWtXVL521dYDGzdTXN2bovs3Vt3dJ5WxdY
zGxdTXO27stsXVu3dN7WBRYzW1fTnK37MlvX1i2dt3WBxWxm99oF+9aDVzR/
een7ivW9VaRS7/qTpcVuvu6TzY57rluwKHftry9fVvxz27q2bul8ja0b6a4B
tB3adsrIXf73S3vfMlKp05e9tznvPW8ZuSh3beWn31/8c9u6tm7pfI2tG+mu
AbTZuspcpPfX1l2YrWvrAkyKravMRXp/bd2F2bq2LsCk2LrKXKT319ZdmK1r
6wJMiq2rzEV6f23dhdm6ti7ApNi6ylyk99fWXZita+sCTIqtq8xFen9t3YXZ
urYuwKR0eX+3339Rc8ddN0hh++yVF3Z7f4/NdWtMd+3rWy9uvrHzy8VK34e7
7r6p0/nN997S6fzd9/1zp/P3fvH2Tufv2/ovnc5/8Ut3dDq/9aF/7XT+wS9v
7nT+oUfu7nT+y1+991XPd75rABPS5f2d+fZnip+DI/XdQxuv7vT+Htlz5cj3
Y/bRV37W2aHt7xi5mSdX9f69lEp1vWsAk2LrKnORtm4XR757f+/fS6mUrQtE
Zesqc7auVCdbF4jK1lXmbF2pTrYuEJWtq8zZulKdbF0gKltXmbN1pTrZukBU
tq4yZ+tKdbJ1gahsXWVuHFv38BMXj9y42LqKnq0LRGXrKnOR3t8X/3vryNm6
il6kuwbQZusqc5HeX3dNmYt01wDavL/KXKT3111T5iLdNYA2768yF+n9ddeU
uUh3DaDN+6vMRXp/3TVlLtJdA2jz/ipzkd5fd02Zi3TXANq8v8pcpPfXXVPm
It01gDbvrzLX+f09eqhb7pqmJFsXiMr7q8xF+ty0Q19/58jN7F7d+/dSKmXr
AlHZuspcpK3bhc+SUPRsXSAqW1eZs3WlOtm6QFS2rjJn60p1snWBqGxdZc7W
lepk6wJR2brKnK0r1cnWBaKydZU5W1eqk60LRGXrKnPj2LqHv33ZyI2Lravo
2bpAVLauMhfp/X3x4JaRs3UVvUh3DaDN1lXmIr2/7poyF+muAbR5f5W5SO+v
u6bMRbprAG3eX2Uu0vvrrilzke4aQJv3V5mL9P66a8pcpLsG0Ob9VeYivb/u
mjIX6a4BtHl/lblI76+7psxFumsAbd5fZa7r+3ts7nudctc0Ldm6QFTeX2Uu
0uemzXzjtJGb3b2m9++lVMrWBaKydZW5SFu3C58loejZukBUtq4yZ+tKdbJ1
gahsXWXO1pXqZOsCUdm6ypytK9XJ1gWisnWVOVtXqpOtC0Rl6ypztq5UJ1sX
iMrWVebGsXUP7145cuNi6yp6ti4Qla2rzEV6f198bvPI2bqKXqS7BtBm6ypz
kd5fd02Zi3TXANq8v8pcpPfXXVPmIt01gDbvrzIX6f1115S5SHcNoM37q8xF
en/dNWUu0l0DaPP+KnOR3l93TZmLdNcA2ry/ylyk99ddU+Yi3TWANu+vMtf1
/T125GCn3DVNS7YuEJX3V5mL9LlpM988feRm96zt/XsplbJ1gahsXWUu0tbt
wmdJKHq2LhCVravM2bpSnWxdICpbV5mzdaU62bpAVLauMmfrSnWydYGobF1l
ztaV6mTrAlHZusqcrSvVydYForJ1lblxbN0jez41cuNi6yp6ti4Qla2rzEV6
f+e+e+fI2bqKXqS7BtBm6ypzkd5fd02Zi3TXANq8v8pcpPfXXVPmIt01gDbv
rzIX6f1115S5SHcNoM37q8xFen/dNWUu0l0DaPP+KnOR3l93TZmLdNcA2ry/
ylyk99ddU+Yi3TWANu+vMtf1/T12+ECn3DVNS7YuEJX3V5mL9LlpM99aOnKz
T32+9++lVMrWBaKydZW5SFu3C58loejZukBUtq4yZ+tKdbJ1gahsXWXO1pXq
ZOsCUdm6ypytK9XJ1gWisnWVOVtXqpOtC0Rl6ypztq5UJ1sXiMrWVeY6b92n
rurUuNi6ip6tC0Rl6ypzkd7fuQMbR87WVfQi3TWANltXmYv0/rprylykuwbQ
5v0dbzsfvrU58fUnNEuWLHnVBr9u2/3rmw8te3fz9pNPavbvuvf4n+OLd6w+
/scH/7vvr2exF+n9ddfGm7sWq0h3DaDN+zventq5ubnikvOaSy8850f90emn
Hn9Pzz7zD17xrw9+3WPbNnl/J1ik99ddG2/uWqwi3TWANu/v5Lv+ny75f72n
3t/xFen9ddcmn7vWX5HuGkCb93fyeX/7K9L7665NPnetvyLdNYA27+/kK72/
/7PnwaH+c9WZ73y1+dp965tlS3+3+fnX/Fzzsz/z083vnfq25t6Nq47/sb6/
xqhFen/dtcnnrvVXpLsG0Ob9nXxd39/B+/r5VZcef3cHv+7Gay9vNq77dPOH
7/qd4+/w2s/8jTd4gbq+v8dm93XKXaubu9Zfti4Qlfd38nV9fwf/nZrfetNv
NGe+//ebg08+8KOzL+x7pPnEBX/W/NoJv9LseODm3r/OiEX63LSZnR8Yudm9
63v/Xi6G3LX+snWBqGzdydf1/R2cH/xMab7z2+6/sXnda3+5uXrlx3v/OiMW
aet24bMkhstd6y9bF4jK1p18Xd/fi84/6/gbO/jz3HP7Na9o/erLmzf8+uua
88/9YPODZ77S+9caLVt3unLX+svWBaKydSdfl/f3h3/81X6v/MGvGfzavr/W
aNm605W71l+2LhCVrTv5ury/g/8ezIUfW96c9MYTm8e3b+r9a1ls2brTlbvW
X7YuEJWtO/m6/ueqg38+sPTPEL7pN9/QXPV3F/T+dUbM1p2u3LX+snWBqGzd
ydf1/d358K3Nia8/oTnjj09rnnti6yvOnnvW+5pf+sVfaB7cfH3vX2fEbN3p
yl3rL1sXiMrWnXzj+D0/B7+v5+DnTf/39/wc/LpLLzzn+O+J1PfXGbHOW3fv
NZ0aF1t3uNy1/rJ1gahs3ck3ic9yGvzxk9/6xubmNZ/09haK9P7OPbth5Gzd
4XLX+ivSXQNos3WVuUjvr7umzEW6awBt3l9lLtL7664pc5HuGkCb91eZi/T+
umvKXKS7BtDm/VXmIr2/7poyF+muAbR5f5W5SO+vu6bMRbprAG3eX2Uu0vvr
rilzke4aQJv3V5nr+v4eO7SnU+6apiVbF4jK+6vMRfrctJl/P2PkZp++qffv
pVTK1gWisnWVuUhbtwufJaHo2bpAVLauMmfrSnWydYGobF1lztaV6mTrAlHZ
usqcrSvVydYForJ1lTlbV6qTrQtEZesqc7auVCdbF4jK1lXmOm/dfas7NS62
rqJn6wJR2brKXKT3d27/jSNn6yp6ke4aQJutq8xFen/dNWUu0l0DaPP+KnOR
3l93TZmLdNcA2ry/ylyk99ddU+Yi3TWANu+vMhfp/XXXlLlIdw2gzfurzEV6
f901ZS7SXQNo8/4qc5HeX3dNmYt01wDavL/KXNf39+gPnuiUu6ZpydYFovL+
KnORPjdt9j+Wj9zhpzf0/r2UStm6QFS2rjIXaet24bMkFD1bF4jK1lXmbF2p
TrYuEJWtq8zZulKdbF0gKltXmbN1pTrZukBUtq4yZ+tKdbJ1gahsXWXO1pXq
ZOsCUdm6ylznrfvM2k6Ni62r6Nm6QFS2rjIX6f2de+ZzI2frKnqR7hpAm62r
zEV6f901ZS7SXQNo8/4qc5HeX3dNmYt01wDavL/KXKT3111T5iLdNYA2768y
F+n9ddeUuUh3DaDN+6vMRXp/3TVlLtJdA2jz/ipzkd5fd02Zi3TXANq8v8pc
1/f36AuPdspd07Rk6wJReX+VuUifmzb76IdH7vC+23r/XkqlbF0gKltXmYu0
dbvwWRKKnq0LRGXrKnO2rlQnWxeIytZV5mxdqU62LhCVravM2bpSnWxdICpb
V5mzdaU62bpAVLauMmfrSnWydYGobF1lruv7O7d/XafGxdZV9GxdICpbV5mL
9P4e2bdm9GxdBS/SXQNos3WVuUjvr7umzEW6awBt3l9lLtL7664pc5HuGkCb
91eZi/T+umvKXKS7BtDm/VXmIr2/7poyF+muAbR5f5W5SO+vu6bMRbprAG3e
X2Uu0vvrrilzke4aQJv3V5nr+v4e/f7OTrlrmpZsXSAq768yF+lz02Z3fWTk
Dj+zsffvpVTK1gWisnWVuUhbtwufJaHo2bpAVLauMmfrSnWydYGobF1lztaV
6mTrAlHZusqcrSvVydYForJ1lTlbV6qTrQtEZesqc7auVCdbF4jK1lXmur6/
c9+5pVPjYusqerYuEJWtq8xFen+PPL1q9GxdBS/SXQNos3WVuUjvr7umzEW6
awBt3l9lLtL7664pc5HuGkCb91eZi/T+umvKXKS7BtDm/VXmIr2/7poyF+mu
AbR5f5W5SO+vu6bMRbprAG3eX2Uu0vvrrilzke4aQJv3V5nr+v4efX5Hp9w1
TUu2LhCV91eZi/S5abOPrRi5w/s39f69lErZukBUtq4yF2nrduGzJBQ9WxeI
ytZV5mxdqU62LhCVravM2bpSnWxdICpbV5mzdaU62bpAVLauMmfrSnWydYGo
bF1lztaV6mTrAlHZuspc1/d37tnbOjUutq6iZ+sCUXXZus99aUWzb8tVUtge
+ux5zT9+8LcX7Iplb672/h7Ze/XIff+xW3r/XkqlIt01gLYuW3fXNW9pHjr/
JGnRVvP9ddc0zdm6QF+8v5rmbF2pTrYu0Bfvr6Y5W1eqk60L9MX7q2nO1pXq
ZOsCffH+apqzdaU62bpAX7y/muZsXalOti7QF++vpjlbV6qTrQv0ZWb32gX7
r0cubv7tyjcX6/vvn1KXtq3/RLPjnusWzF2TxlPNuwbQVvocnGcfXtP73x+l
STb4a7x0B9w1aTzVvGsAbd5fTXO2rlQnWxfoi/dX05ytK9XJ1gX64v3VNGfr
SnWydYG+eH81zdm6Up1sXaAv3l9Nc7auVCdbF+iL91fTnK0r1cnWBRajubm5
5sp164qVHJqd7XT+ey+80On8weef73T+wMGDxbNX3XRT8fy+AweK56/ZsKF4
fs/+/cXzq2+/vXj+ib17i+fXbtpUPP/ok08Wz6/7wheK53c+/njx/C133108
v2PXruL527ZsKZ4HACgZbN1Tli9fsItXrSqeH2zd0vnLrr22eH6wdUvnV15/
ffH8YOuWzn/qhhuK5wdbt3R+mK1bOj/M1i2dH2brls4Ps3VL54fZuqXzw2zd
0nlbFwDowta1dW1dACArW9fWtXUBgKxsXVvX1gUAsrJ1bV1bFwDIyta1dW1d
ACArW9fWtXUBgKxsXVvX1gUAsrJ1bV1bFwDIyta1dW1dACArW9fWtXUBgKxs
XVvX1gUAsrJ1bV1bFwDIyta1dW1dACCrwdY9+7LLFmyYrVs6P8zWLZ0fZuuW
zg+zdUvnh9m6pfPDbN3S+WG2bun8MFu3dH6YrVs6P8zWLZ23dQEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
JuN/ARHS5UA=
     "], {{0, 472}, {699, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{699, 472},
   PlotRange->{{0, 699}, {0, 472}}]],ExpressionUUID->
  "17f2119a-6651-4a22-9694-01bde420e8fe"],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.8232834755001497`*^9, 3.8232834972515965`*^9}, {
  3.8232835346881337`*^9, 3.823283562869234*^9}, {3.824326835896571*^9, 
  3.8243268531072598`*^9}, {3.824327033786998*^9, 3.824327043375182*^9}, {
  3.8243270938412137`*^9, 3.8243271729576597`*^9}, {3.824328150888888*^9, 
  3.8243281750178103`*^9}, {3.824328219062776*^9, 3.8243282469837093`*^9}, {
  3.8243289552581234`*^9, 
  3.8243289566992393`*^9}},ExpressionUUID->"d55c8bd7-22a3-4356-8cd9-\
7317f4a70500"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.824326829588976*^9, 3.8243268348621264`*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"f5f6b8ff-c309-4ab9-9d93-0fb43518767f"],

Cell[TextData[{
 "Use ",
 StyleBox["polymerCRN", "Code"],
 " defined above under Polymer CRNs to enumerate polymer reactions given a \
set of monomers and their interactions. (Note: the maxlength below is chosen \
to demonstrate a simple simulation, see explanation under Polymer CRNs to \
make your own choice about the set maximum length of polymers.)"
}], "Item",
 CellChangeTimes->{{3.8229462826757607`*^9, 3.8229464156362715`*^9}, {
  3.82302400805154*^9, 
  3.823024221463962*^9}},ExpressionUUID->"dd6ad8ba-d374-4b0c-ab68-\
b9f7e81a9ce3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"monomers", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{"2", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"rate", " ", "of", " ", "hybridization"}], ",", " ", 
    RowBox[{"unit", ":", " ", 
     RowBox[{
      RowBox[{"/", "M"}], "/", "s"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rates", "=", 
   RowBox[{"{", 
    RowBox[{"k", ",", "k", ",", "k"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxlength", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"polymers", ",", "rxnsys"}], "}"}], "=", 
   RowBox[{"polymerCRN", "[", 
    RowBox[{"monomers", ",", "rules", ",", "rates", ",", "maxlength"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8229328184108915`*^9, 3.8229328472766485`*^9}, 
   3.8229335381679792`*^9, {3.822933777309662*^9, 3.8229337790702286`*^9}, {
   3.8229338886579447`*^9, 3.8229338977341433`*^9}, 3.822934406084282*^9, {
   3.8229352216521883`*^9, 3.8229352218517256`*^9}, {3.8229352974535785`*^9, 
   3.8229354591408453`*^9}, {3.82293553836388*^9, 3.822935637507578*^9}, {
   3.822935734783523*^9, 3.8229357640437746`*^9}, {3.8229359170681267`*^9, 
   3.8229359771283937`*^9}, {3.822936124526598*^9, 3.822936128791669*^9}, 
   3.822936297853299*^9, {3.8229363395208683`*^9, 3.8229363537001343`*^9}, {
   3.8229366600120707`*^9, 3.8229366638488684`*^9}, 3.8229368958903*^9, {
   3.822937209353619*^9, 3.8229372284319887`*^9}, {3.822937471341462*^9, 
   3.8229374722464733`*^9}, {3.8229379831055837`*^9, 3.822938140971569*^9}, {
   3.822939644840574*^9, 3.8229396648813553`*^9}, {3.822939701896546*^9, 
   3.8229397262078238`*^9}, {3.8229404455605345`*^9, 
   3.8229404601579027`*^9}, {3.8229404942936835`*^9, 
   3.8229404943785725`*^9}, {3.822940525681422*^9, 3.8229405390258985`*^9}, {
   3.822940577018327*^9, 3.822940600083501*^9}, {3.823024831932018*^9, 
   3.8230248703005476`*^9}, {3.823283749250167*^9, 3.8232837836693845`*^9}, {
   3.823283986027546*^9, 3.8232840124474764`*^9}, {3.8232840554523926`*^9, 
   3.8232840834707313`*^9}, {3.823284145341297*^9, 3.8232841707566133`*^9}, {
   3.823284363463877*^9, 3.823284363525532*^9}},
 CellLabel->
  "In[579]:=",ExpressionUUID->"363133ff-eb9f-47be-a227-706ba6d28088"],

Cell[CellGroupData[{

Cell[BoxData["polymers"], "Input",
 CellLabel->
  "In[585]:=",ExpressionUUID->"e48c75db-3311-41e7-aea0-e6af11e3315a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "ab", ",", "ac", ",", "aba", ",", "abab", ",", "abac", ",", 
   "ababa", ",", "ababab", ",", "ababac", ",", "b", ",", "ba", ",", "bab", 
   ",", "bac", ",", "baba", ",", "babab", ",", "babac", ",", "bababa", ",", 
   "c"}], "}"}]], "Output",
 CellChangeTimes->{
  3.822944753297821*^9, 3.822947299686716*^9, 3.8229480920008574`*^9, 
   3.822948219802515*^9, 3.8230248887763596`*^9, 3.823283718637749*^9, {
   3.823284062503497*^9, 3.823284088439994*^9}, {3.8232841508898573`*^9, 
   3.823284175535928*^9}, 3.823284242187092*^9, {3.823284302949865*^9, 
   3.8232843347298512`*^9}, 3.823284371307661*^9, {3.823284404182971*^9, 
   3.8232844533306074`*^9}, 3.824325224912795*^9, 3.824325315738406*^9, 
   3.8243254558051233`*^9, 3.824325524251062*^9, {3.8243256435278783`*^9, 
   3.8243256694702682`*^9}, 3.824326054054037*^9, {3.8243275065811567`*^9, 
   3.824327527369038*^9}, {3.8243286580022526`*^9, 3.8243287000691895`*^9}},
 CellLabel->
  "Out[585]=",ExpressionUUID->"c491e668-3648-4d2d-aeb7-66d44b964d5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rxnsys"], "Input",
 CellLabel->
  "In[586]:=",ExpressionUUID->"08301afe-325f-475e-bd27-37c790028792"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "+", "b"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ab"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "c"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ac"}], " ", ",", 
   RowBox[{
    RowBox[{"ab", "+", "a"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "aba"}], " ", ",", 
   RowBox[{
    RowBox[{"2", " ", "ab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abab"}], " ", ",", 
   RowBox[{
    RowBox[{"ab", "+", "ac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abac"}], " ", ",", 
   RowBox[{
    RowBox[{"ab", "+", "aba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababa"}], " ", ",", 
   RowBox[{
    RowBox[{"ab", "+", "abab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababab"}], " ", ",", 
   RowBox[{
    RowBox[{"ab", "+", "abac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababac"}], " ", ",", 
   RowBox[{
    RowBox[{"aba", "+", "b"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abab"}], " ", ",", 
   RowBox[{
    RowBox[{"aba", "+", "c"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abac"}], " ", ",", 
   RowBox[{
    RowBox[{"abab", "+", "a"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababa"}], " ", ",", 
   RowBox[{
    RowBox[{"abab", "+", "ab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababab"}], " ", ",", 
   RowBox[{
    RowBox[{"abab", "+", "ac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababac"}], " ", ",", 
   RowBox[{
    RowBox[{"ababa", "+", "b"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababab"}], " ", ",", 
   RowBox[{
    RowBox[{"ababa", "+", "c"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababac"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "a"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ba"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "ab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bab"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "ac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bac"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "aba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "baba"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "abab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babab"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "abac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babac"}], " ", ",", 
   RowBox[{
    RowBox[{"b", "+", "ababa"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bababa"}], " ", ",", 
   RowBox[{
    RowBox[{"ba", "+", "b"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bab"}], " ", ",", 
   RowBox[{
    RowBox[{"2", " ", "ba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "baba"}], " ", ",", 
   RowBox[{
    RowBox[{"ba", "+", "bab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babab"}], " ", ",", 
   RowBox[{
    RowBox[{"ba", "+", "bac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babac"}], " ", ",", 
   RowBox[{
    RowBox[{"ba", "+", "baba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bababa"}], " ", ",", 
   RowBox[{
    RowBox[{"ba", "+", "c"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bac"}], " ", ",", 
   RowBox[{
    RowBox[{"bab", "+", "a"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "baba"}], " ", ",", 
   RowBox[{
    RowBox[{"bab", "+", "ab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babab"}], " ", ",", 
   RowBox[{
    RowBox[{"bab", "+", "ac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babac"}], " ", ",", 
   RowBox[{
    RowBox[{"bab", "+", "aba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bababa"}], " ", ",", 
   RowBox[{
    RowBox[{"baba", "+", "b"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babab"}], " ", ",", 
   RowBox[{
    RowBox[{"baba", "+", "ba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bababa"}], " ", ",", 
   RowBox[{
    RowBox[{"baba", "+", "c"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "babac"}], " ", ",", 
   RowBox[{
    RowBox[{"babab", "+", "a"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "bababa"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "ba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "aba"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "bab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abab"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "bac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "abac"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "baba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababa"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "babab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababab"}], " ", ",", 
   RowBox[{
    RowBox[{"a", "+", "babac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababac"}], " ", ",", 
   RowBox[{
    RowBox[{"aba", "+", "ba"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababa"}], " ", ",", 
   RowBox[{
    RowBox[{"aba", "+", "bab"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababab"}], " ", ",", 
   RowBox[{
    RowBox[{"aba", "+", "bac"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2000000", " "}]], " ", "ababac"}]}], " ", "}"}]], "Output",
 CellChangeTimes->{
  3.8229447571711893`*^9, 3.8229472998715773`*^9, 3.8229480921010675`*^9, 
   3.8229482199027524`*^9, 3.8230248888766193`*^9, 3.823283718710397*^9, {
   3.8232840625827303`*^9, 3.823284088499593*^9}, {3.823284150942991*^9, 
   3.823284175603368*^9}, 3.823284242248517*^9, {3.8232843029850626`*^9, 
   3.8232843348317833`*^9}, 3.8232843714275513`*^9, {3.823284404269432*^9, 
   3.8232844533978815`*^9}, 3.824325225016794*^9, 3.824325315835723*^9, 
   3.8243254558731194`*^9, 3.8243255243095245`*^9, {3.8243256436240053`*^9, 
   3.8243256695662622`*^9}, 3.8243260541180315`*^9, {3.824327506692255*^9, 
   3.82432752749483*^9}, {3.824328658147745*^9, 3.824328700222367*^9}},
 CellLabel->
  "Out[586]=",ExpressionUUID->"9092d5bb-a75a-42e6-ad11-451be837e7ee"]
}, Open  ]],

Cell["\<\
Simulate the polymer reactions given initial concentrations of the monomers. \
\>", "Item",
 CellChangeTimes->{{3.8229462826757607`*^9, 3.8229464156362715`*^9}, {
  3.8229464689040995`*^9, 
  3.8229465154459076`*^9}},ExpressionUUID->"37736219-b3c3-41ad-90d6-\
020b3ccdf3a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SIMtime", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"unit", ":", " ", "hours"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sc", "=", 
    RowBox[{"10", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "9"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"standard", " ", "concentration"}], ",", " ", 
    RowBox[{"unit", ":", " ", "M"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polymersys", "=", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"rxnsys", ",", "\[IndentingNewLine]", 
      RowBox[{"conc", "[", 
       RowBox[{"a", ",", 
        RowBox[{"2.5", "*", "sc"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"conc", "[", 
       RowBox[{"b", ",", 
        RowBox[{"1", "*", "sc"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"conc", "[", 
       RowBox[{"c", ",", 
        RowBox[{"1.5", "*", "sc"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "//",
     "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{"polymersys", ",", 
     RowBox[{"SIMtime", "*", "60", "*", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIMpolymer", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"polymers", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"t", "*", "60", "*", "60"}], "]"}], "/", 
       RowBox[{"10", "^", 
        RowBox[{"-", "9"}]}]}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "polymers", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.822940498087764*^9, {3.822940548259939*^9, 3.822940557472247*^9}, 
   3.8229406412757998`*^9, {3.822945802891944*^9, 3.8229458729306097`*^9}, {
   3.8232841181874113`*^9, 3.823284121308261*^9}, {3.8232842382303576`*^9, 
   3.823284238272298*^9}, {3.8232842988378286`*^9, 3.8232843313898087`*^9}, {
   3.8232843990909085`*^9, 3.823284448389694*^9}, {3.824325241324455*^9, 
   3.824325272712068*^9}, {3.8243254532624507`*^9, 3.8243254533494177`*^9}, {
   3.824325521788433*^9, 3.824325521882424*^9}, {3.8243256412783766`*^9, 
   3.8243256666888795`*^9}, {3.8243260496166153`*^9, 3.82432605084734*^9}, {
   3.824327502388939*^9, 3.8243275236704507`*^9}, {3.8243286532783794`*^9, 
   3.824328696956738*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"ac555a0e-ec25-49d4-98e3-14d0da784c7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["trajectories", "Input"], 
   StyleBox["=", "Input"], "polymers"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["TrajectoryLabel", "Input"], 
   StyleBox["=", "Input"], "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["OutputLabel", "Input"], 
    StyleBox["=", "Input"], "\"\<Concentration (nM)\>\""}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["CircuitLabel", "Input"], 
    StyleBox["=", "Input"], "\"\<An example polymer reaction\>\""}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["TimeRange", "Input"], 
   StyleBox["=", "Input"], 
   RowBox[{"{", 
    RowBox[{"All", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSim", "[", 
  RowBox[{"SIMpolymer", ",", "SIMtime", ",", 
   StyleBox["trajectories", "Input"], ",", 
   StyleBox["TrajectoryLabel", "Input"], ",", 
   StyleBox["OutputLabel", "Input"], 
   StyleBox[",", "Input"], 
   StyleBox["CircuitLabel", "Input"], 
   StyleBox[",", "Input"], 
   StyleBox["TimeRange", "Input"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8229356551705513`*^9, 3.8229356764815645`*^9}, {
   3.8229357236954365`*^9, 3.822935725533046*^9}, {3.822935769416608*^9, 
   3.822935808110729*^9}, {3.822936140606247*^9, 3.8229361535272913`*^9}, 
   3.8229361873068275`*^9, {3.822936502708453*^9, 3.822936510618645*^9}, {
   3.8229365720493507`*^9, 3.822936577617923*^9}, {3.8229366902638464`*^9, 
   3.8229367297055073`*^9}, {3.822945879195392*^9, 3.8229459365605288`*^9}, {
   3.8229459691085205`*^9, 3.822946064256652*^9}, {3.8229461109691277`*^9, 
   3.8229461152534895`*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"930d243a-25e5-4263-b4a9-d166f3a25b05"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         LineBox[CompressedData["
1:eJwVV3c81YsDRYWUVVRkZrQkT6GUzjcUz6isJjLrSb0oiSiPupdkluw9bsom
ZGTnZnPRzZZ5RSEzyf31++N8zj/nj/PXGZJWtw1t2VhYWFb/4P+sY8toq5iw
PfFoM6vsNPMIsV5D2GFASBOSnNI/roYpEYfiwqPzhIzRlRFbQ51QJEZEpD3v
y5pjZZjnU0+1AqHbRM+NEbJB9s+z7ZvZ5QlpP9EUprgdKjvdV+zE9hOrOtZh
lrL/4t/ZuEHLzD3E1ycdNZahjkizYuOojpYlLtgsvX8u5AQLyh2+8k/SRI2G
cGF1tDOsbI6Hbj4jRShIqWXPi7vid5BHGWVJkohms3gtk+QG3hjX6ul6CYJz
yCvxvOwjGOY77N7vJU4UD9Kaqo3/Q5HPoMLp16KEwzkbHdNQT7DmdbwzZRMh
ZCsWaufpXrhuebvuGFmY6DvoreEv9ATunx+6LcoLESFxOypkrpDwsmBZI2lp
O6HD++Z4WTQZPpqNz3b3biNYPI4Vne/3xrd9Yfv5ugSJgu+NStPiT+FPCvnm
OClA3DQ3z/W29MV2Rja9lU+A2NU8LS+R9Ay6g+5Zm7W2EgEZW/YYyAbgkWa5
JdcAP3FKNDl54nogbq4bafysxk88qo3kqzQOwqmHKnd9X/ERlx4Nn/FfCAL9
sbbl1p18xGFlOf9LocH4OHRZl+8gL8H73alBRuU5+nbHEIpHeIivKe83/qA/
h9MUr4ToOW4iXvAs2VcoBHd8G2MuvtpEuDWF1ZwvDgG7jnL04xEu4jxpkE3q
yktUCOYrSMlxEZsXHD1KokOhNsFIDKZzEuPpxe+91cIg/STO59dRTqLKZt2q
UX8YtnXrn+NK5iBcOkJcpsQjkMkw813yYyeM/PoK3lVEQEyI8+oIFzshrym7
8MQyEml2x3mDAzYQI3mFjqJJUehXfaCTk7KeMHjRfeOMbCxa41qjLbnWEXK6
Uq+FqbHQE3qub5bBRnCuuzk+dj0OElqWx9qN2IirRWs55cbxsFV6WmD/hpXQ
E5Rqk0mJh7JO/XWly6yEqqPWzLOFeNSapXNSN7MSgnuD5C+GJoBj+vKhXFcW
go30Vr9sLAGZp4eLPh5iIWYGP9+UVknEc6cQpsYgEw3hkmkz9ESY/aD0XO5f
gydn3u6nQskw3RMyyuT4jX1awT65DsnYV6lYPBC8Chrp9kQPNRmtRTR5S/FV
SK+TS5N3TsH0fe26eM1fqP2dLN9Bo4BnLpS+mPcTt48/Dvy99xX6vkfEFZ7/
iR1uljOynq9gIEo+y7q6DLtl0VzXg6mgORLpH/WXsXkuVEnc7zU4ujTqAjct
If+ve6Haw6+hNbS7a7V8EeYORkuOqm+w6pojo+68iKxvvEU1jDeYOHh8kpex
AEOGz/Ebp9IxdTsuiGNgHr9kr8e8iE7Hs00vAt3i55Fse2qtdC4dzck7eAyt
57EwxFrBm5gBj7S1pqWpOYT3PdDIX8uEGYVq/4tnDidFLiX3m2ThJNvyPuPu
H/h6WWUDZ0YWHFhdrpVRfkBsytU640A2rimFcFHUf+C2nbIMS282ugWTsqdI
s6jxSekM4cjBXtqbTT8vzmJHqgB576Ec6M90jfTKzaJi7MeYoW8OVgWtDmyl
z2CLTVZqypFcRJ1RTY45PINrj8Uuqdrk4sEnqQcfuWdQkui/sSUwFxePjQQS
LdOw+WJ/Y3ksFw7ZX819VaeRb75HTvdlHtpzthX3iX/HxUsJWTOzb3HZWPGd
iPgUpnuMuRKF86EfYOpnOT4JsjmnrZFGPmj6wap3sieRZ31buCAkH0b8h8ij
mpPg+VeN5KZSAPK611oJzl/xwavrMvvDQmiTosSwwoDpBv/8wpRCBFKYo/ea
GPjhTfDZNRdi0ny4FgkMSPi/+tAg/g612zbyeekw4B52TyG46h0KX45P3Usa
h2I6P7sIZzGsPXheMG+OoU7+g0WTQjGUfvIrqWmPwSLHpeTRpWJsYjsbw5Aa
g3/BgMOXN8WInHNc79k7CkZFRg9FvwRcEZHW3oajiO38O+evF6XwZBTXOJ8b
wSamp6mWWDmoXroCG3yHEG53wVzudDliB+JukRyGIN0hZ8H/bzmmjQxET10Y
wonXdOue9+VgeTw68UhmCEWvQ/ML5StwJUD/VnXNF3wzmirVba7Ayws8PT3c
X3B4I13txFAFOknRlG9Lg3hQVlmmsFiBL4ps+xSHBsGxN6xCUKwSrzI/hJ8r
HITk2smagVuVkIxISGu1HoRJaljDXe4qSIy7sWT5DiDazEvvmmQV4vlX4l7Y
DGBoy62mi0pV2GJAKq4/MYDbD9Vb1MyqYOZwVU9uvh9PDb/RODKqcHBc/n68
VT/er6p3R+lV459d3G8f6vdBxuA7o/pZDcZoWyU0TXog7KGlej2hBtVKycxT
Sj3gy4h/xlVYA46GsfO+gj1Y4TSSNxiqAY+apzr9UzdaKwrv9h/5gFmRSNNb
pt14oOC5tjz6Ae2fpDkYd7rQzCsgIE9QoSP9YfLlRzqq1W7ZtplQIUSz1n2Z
Rcc7+9oCJ3sqhIe/T1aF0pFEdblUEkpF+kPGKsWWDhePvljtb1S4P5auIm2g
Y9c0Za915EfoGOVwH9X/hPvNRxE+X4d0ybDusJ8d4JHPH63jrIenspHRl7EO
JPsr+P0SqYfuthhW7Y4OtOnt7jI/VY8Mufgp+6wO7G8QuCsTWg/Bs6wR7Nc7
MECdpuSqNGBPT9KsQU87tCpTeJoeNILT8ywj+xMN/RKS+WsBjRjwLjtygEqD
03/RVxSSGrFjR2tOeSENCXiR+qKhEdVFJZdlI2j49f4/9csiTeA7bTe0YEpD
VvEV5/H3TViSF9jgymjD9rf8/aysLZD+W/TEHHcbTP1+GY9sawHfztjzTcxW
JNqMNtTKtWBlHzW1ZLYVcoJFRc8utqBKSPt0R2cr1J0tXgpmtyD1rsTvmdhW
KEdfoIQcbIUlT2hPweE/bE4xS+1vhQppV8NwdzOe6OyMiJhoxQhfhebW6mZQ
lIM6fOdbwT03u9cqrRlTPA90b3G14Zw0q7aZezOcy/WPKiq3wZ5yMLdKvBl+
EgsCpf5tsN3rukvoZhMKhjQaW47TMBoWz/1QqBGftD1n/bVo6CM9Hw/Y0IjF
zLJteoY0TP0apL6bbYCK21HLj9dpUEppXzCqb8C7rQcXK57TQPve+ijJvQFF
msISuQwaylUk6x6P1qOUMnM3JKQd1aULZprUOvRulo8wjGuH43UL9s0FdVi9
Y1/G96Yd+upDguPJdVDDGKd/eTtSdRMnP3nVoYzeE0P62o7hE7+lIlGHck4q
1ZnogHM25VZI6UdU3YjZeWmqAzuCSANB1VTkTdjbmy92QDl9d3FAPhXJ/6iW
WLN0QkQsxS7yFRWka/TL/wp04nsRJ2fPMyq0rfgjHx/vRNPw5m1MYypaLpF2
ZPp1ojk+6UrlRC16tW8JrjvwCce500eyRWqxIKvGm3GLDtE3VfeykmtwYkid
6utCx/Qzjvb08BqQY7Q9/nlMh3SFZFW+Xw22CRhPS0XQEXxIc/tXpxoos9q3
RNbQYdumMd59qgYuPeGBPjs/Y+Chy62WiWqsBs7z2tR9RqSIa3bU0Wqw/Uzj
2ynTjQaTEf7BhUrsbFKfw8FufKWlXluYqsThhK5Om6PdkJN6usw/Ugnbvzmi
MvW7kVRXlmNBq8THCKs/PdqNpQ0TfkZZlQhUFVK1o3ZjteXYY+8blRBxJ1sX
2vXAo/nI+OxoBZSZFgVGmb1YcNFNdu8vh55+hdepd70w3WbmtqO1HNZR4mdV
qnohcWC+qayyHEEq/ePCn3rBw+lWsS+lHBO3rwgN/e6F1cnU4kc3yxE9aOLu
8CenzMpJLDy/y8BapaPuP9UHow6nYk+ZMjQ+Odxcu28Azq84axOCS6HK28AW
rDQAK+XJBZ8npUiNsFS5QgxgOOt8kev9UjzODIifNhkAR9vV1vtmf/SfGXd2
eA7AQoxdb3TvH/3+mO036AOYuDij8LCmBOoTXtns6oPwyEsKMGcpgXjQ5M/X
3wfBp8qYZQkuwuTSQH+nwhBOz7KHdCkUIvlrST1PwDAWnibYT/56Cx7RV9Mj
IyOwolTQjorlwc8u/1q89BgQ7KDcEZ6DRSJt5B+PcTRRflYekMmGk2LN223V
DAiua6PeH8nAQGbNszbJr7DSHZSjhKTh142OqL0PJqEXJd5cFfAa+09yrF0r
mUL72YTE5Z5X0EqUvJ6z/Tvc77kl7VKk4L7o1V1fTKcBr7CClrpkyE2ZbKLr
zyBJ+oS6vHcStvLOcNaszEBDfG3/Va1ErC+PypKKngXL0P1lPuUE2B8u6dqo
+wMrOzob9snGI+1vq/iyxR/giZM9qGAVi4VJYb6x0DmwKDu/nCmJRr6R1roQ
zXmc3idvoCsQBQ9tUtzbsXlUGsrE1aVEQLJP53MSaQHLzrE8QhfCoaryJERI
cRFlU0VP59aHwVSs5Sdr+yIOizRs6u1/iYV6/yEHzyW4TAdM/J0fgvD15k6G
0ssI/Wsl71XOC2ztz09kq1nGX/fOc32seo4NDz2Njzr+hNbFkwmVLcFgeW2e
NbRlBe3nZi/0rwThTmSW/5aqFayxjL2V2RWE9/t9OPn//QUxuT0be94GgF/n
jpwXzyrY08Sd6k380Xugtd21dBXnosUcB74/Q3YspEfMf+Oaz7fk97m+MMtS
5hdd+425so0xF/yf4j9SgmfvmzVcMzGxhoUPMhiiUTx6zD9/bf1hm/Pe8Ikh
WfSfYaIvdixz0MAbNobfZDINmGC87Dhiru8NkdLSbP0LTCSpx7uYanrDN/BK
rZ8VE2vpvnG2it74RzlilsuVCeGUh6ff8Hhj1xMBbQ4KE5tlDCgrVDLWjrhz
01OZKON7ey28moyub8M0ShoT60/KyamUkxF0Ic/sdA4TH+z3f7hfQAZzn+Fd
UikTPm3cuzekkNHbFhi7rp0JLaE31895kfGOvGTd3slE+UiiydpDMkKOXd2b
9Jn5Z5dOaWS4kqGbIv9Wvf/PT/DVkOBxJKPYpanOc4IJJ9Xklp6rZIQeUAo0
mGLCLaGlMPgKGY5D0caS00ysO/I1RvsCGXv0bg5UzDPBPlNiVXSGjPWsHclB
S3/8B3YTd3XIGMw/dsNihYk7Vwp3yp8mo/RG0kGF30xgC/vcxEkywsQ3LTCZ
TGjefVBLUSPjfz1l0OE=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.33457829333333333`, 0.11628728, 0.6443092266666667]], 
         LineBox[CompressedData["
1:eJwUV3c4V+8btpOVkZmdSEmyyec89iYZoSF7pIQQFaEyQvlKoqxQZshe59gz
e28++Bhlk6zy8/vrXPf13s+4n+d6r3O/fNYPDe1IiIiIVk8SEf3/q2232FOz
ZIc8jxV5wKXMBGQqHK5T7KpArOBEWWzzCySSYuML2Y2hr/zPyEDSb5jjFAh4
LGgBdaquC/0k+6DTMVSQwG4Leh6KUQGXD0EgnOvLEY8TFLWrXCv9cwiH2jYf
rARdAIdy/4mdOoSfL/sbrGLcwECtlKzp6iGY2v5Bo9g9oFc6dZJb5QAaVDhK
6+O9ING4jPs1+z6IncXlb/P4gOlm3Ur84C5QzgSm3BD0A57Nu//p43agYrq3
o97YHyROOb8N+7MNrga22rdjAuDv9bzw5KotmLgcrBLB/hKEN51Vtx5uQHQS
W825W6+AHV11Y7VcB+1TWQpYfBBU406/3MVWgej51fIbk8FwJvvges3YMpSs
tkut8YSC4KWK3BjmX3DfwqIg2Oo1LHmz6Wo5LwF/55oob2oYpOj8Wno+tgBv
vjGevy74BoLQR+Nt5ARQ40pLW3J4C3RXI03I0Vnwa/pIX2scCU+GXcR5QmfA
3G9WP+J3JOw5DjA3OeJBUlokwjzmP+ifCx4vvTkNp1Y9fpyTiYJXw9VPgysn
4ecX9OTmUBScf9F3/T1+HJKZrwW9Zo+GCxYtkdqvRuBpx4eGGxXRcKbq5wv+
oyG48Wqa5Oyt9/A5sMBH/79BuIITVlo7eA/0jw42JOQHgOa32/PK+BhQl2v/
YLLbBws5FWgw7gM0/ILea229UGdLemg0+QGyy5b3B3N7wLs/2nuZJw7uXYp2
SjHpAqPwiZKymjhorz/1WsK/A0RVBX+/tPoIxv8Kxa80/4CThy4S10k+wdS7
y3fazrfBXGGpG1fqJ2ClVbC/ltoC1c5E+Usq8SB+MrP1klQzfDyrtVo8Fw/v
hRP/LI83wvV3o/f0BRPBXvTCwjfHehDROZvJ0ZwIFg3rETLadUBJen9h3iEJ
PJ2og78p1IL7ndEoc7JkCLkl9f4E1MDd8n/fq42TYe9o/fT7ZAx0mc/2nPuS
DKO/L1ZwT1WBvJvGetjvZAgwaXPfkqkEZuFIUbOYz1AxRfJWU7wMSF4V6WHz
nyEo+Mo8vrsE1qeH7wvIpEDpYosq8cti+BHLl70+lAI7Yn/O7PAXQtm2WtuN
86lA+eKSYRRNAXw1uLdU5Z0K1bzlDQoU3yGAslAolD0NSoh85g50cuGCxn8h
Ba5poO1FVLPumgO9rx4ujTWngf2B9KxJYRY8bdDTJuf5AqzPki6ZMGSCAKlI
tqjXF7jI31ooEpoO7UpUNGYdX+AtqdVHBfav4Om/eD9A4Cv4rBykEdWkQdPf
NNH+3q9AKqa+R6ybAg8VXrz9K5wOBT49ft9FPwPbU6t1wYB08GTpt53hT4aa
crhuMJwOHmsJ2qeuJYLTLleBz+UMEL/Z7H/lcTwwyhwypgZlQIqQhb5E1Ueo
8Bx91D6RAR+0r6Te5IwDmq0YKZ7wTJAccdVxFIqB4iueMZqzmeATS41X7ooG
C1ejP27yWdCjIqsvEP4OKPKumH36LwuepRskFN+OgryVU+UNi1ngd8hu1wb/
gZnIKvsqZMPE6212RclIIHJuf8L64Rh3P7z3x+0NGC6GKNxTywF//Vja0cnX
cCDokPAuPgdo71iavUdCIc1O7V/VVg6cOZwUSC4NBt20s3fntb+Ba/L7CHfN
IPg9Q1xzKuUb3D2VlB289hIS+aZ55fa+AW/Q3/mQ7BegbokFWBvkQs8r7SLk
aSDETjxRKf6XC1kcm5JrBv6gxGmeNmmSB69eErPczPSDnzdlyCm/5YGBNuvg
465n0NZOVchGkg8RSV5G5oxPgXvZx+bbpXxQ/0Wzze/qA+7US0zK5vkgWyR1
X2zhMTRdMGsYfJkP1/b4qOi9vOChk/Q5ovF8SKIhwgcNPIKGkC8D0Se+w/DZ
F1zWqe7AlnE6SFjiO2Tdeq/Z+MIN7je/kMYsvgOl1Cft956uUDO/OW/4+jv4
Toqbuay5wGkK6w8Lxd/BmjUrRIPxATid69F4hj/mO6vidq87A6NtXsYX2QKY
My4oo+NzBPsX3ObytgXwPbbpEt83e6hMiTjZ9bYArEjtWr9eswP6usNym8oC
aPCIun3thC3Y4p3v7c4XANZuVNbWaw1lRGMcEYyF4JrbI9KXbwU0vNo/+JBC
iEqqk76RbAnFFudFdN4XglrIvrzf3TtA5fdhfKqmEH433C5CPt0CiwSKCI/l
QnD2ZqMR3DSHgipP3Em2IlDhPeNdYm0GFONzKwkqRRCWdhjy6NcNuHlglCj+
sAjcV4y7pl+bQB5HvX7zxyI4r+UxFwDGYGb+OW99owh8W3eSBGavw9qYMVUK
RzFkFd1qLsUbQJAFpZ2RSjFcPVf/pWziGhTaPOQoiS6GAmqea3PWuqA9z+/p
gBbDz/2inOA2bZh2HOximy+GeI0GWh4tLaBzwb16KlMC3TfKh+4GqcOX9fUp
EcsS4NQ0hjRlNVB4lCY/GVICt/fXKhgZVOGeN/W64mgJNJgsSihPKwHxAaa9
SVIKo7tIst6UIsT6un9JvVgKJUz9XytGABoDR25S+JZC3C0crYWlAtwmjygu
/VIKPV9VKb60yMNmsCK9U2cplCWpvW7XkAPeiPTGHzxlEOhky/vvlTSUnrrF
66tZBut8HJkZylKgH0X3VNStDBQOs7M8GCTh2QdPsf/qyiDkm9ZjHP4KMHEI
hyn/Oo4n3r3yaloMsuLHCVtM5cDBNBUeOX4Zhj6rfLphVw4XS77VDdmIgIvA
n98n3pRD1kVfv5vtF4AsPcugvKQcBNN7VXJ0hEE8h4GCk7ICCs5PmdC/FoRW
0UbLDrEKOOXz0LRd/RxYfveu9DOvgJKbH9qzmAUgomTKFZ9VAX3S93y8CHwg
IPfuR1RfBXQc/bbKneOFikp1QdXDCmik14qun+OBxZpvY1/1KkFZzoqU6T4n
PFexkjbzqgRZZhuqtn4OYGk6/d/JpEowtDLaO2vMDio/nqrfX6+EJYpiTu4o
FhjVu/yZi70KfPLK6xP0mcG1e+agU6kKFKiH2y24TkPigNb3K++qYErrBLHt
CgNImf2lnq2sgrS56Pi3y/TQPppvHz1XBbKWS8+ot0/B3hQr5x8pFCTnxqhI
ntBApPUPrwwLFLzPXeJSmKECQYJfj3kwCsJaHf/dszoJxj8JQVXDKHgqVr2l
TqKAX/fj8A+IMaiyuNJOdoscAtd0FXguYPB6g8ecT5gM8rcLNwKeYsB85W/C
iV1i0HjsoCuRhgFfVfHm5g4RTO5xpM+1YyDk/bRHlYwIqI8CbmtwV0Ne8htG
+YhDJNbJ1EJEvRpqnePCjA/3EYF+EUsGl2rg2UffhgbsIUjmkM0YWg3rIdfW
Q1t3kB9M3+xqCNXwnks+Yzf0NyICtYW9FDWgkpmz03ZrGynPjCkuFa0Ba4+O
6vnLmwjR3QDpLOUaQAm42M9iG4j66ful8TdqYLZleMUN1pE+P6XyAL8amFb5
qPiIcgXhkBSR94iqAaODqi5Nt1+I5RJLpf3XGmjrThGE9SVkxWi5SqezBi5t
vD7QEVlAJE8O4ZCZGlCtzaE2WCAgT7BaTGynBqpOkyipF80hJ4Q/1DBz18IL
lPby3PMZRH8yQIlSvBYqJ83uuz/DI9Hv7tftq9XCnVSWPcrgaYTvn1LD1INa
oE7ZvxMaPIE4Foqo9QbUwtPcuxZaS2NIriNrU8P7Wnjs1W1Obj2KXO1bbs5E
a8Hv20HC7XdDSGDIkGZ8Ty38vNEa/UBrEGnB1bW+IdRC9S6HzQOGAcQk48OP
R7R1QPr5L2d0Xy8SfydQ156vDkqYIzPPtvcgM4wPOsyk6uCFe+CKTl838tBX
uQt3pw4ySloaXE93IiXilwzE3OogV+3VSptrO3K4wNrD/6oOVqKqGPdn25BQ
w5XeE9/qgJy2IDL4ZAvSfWLYaL+mDj6YyNmQVzQhLGhd/3J/HbSJnSHsPWtE
UoViB3sO66A4xHdfUroe+TkeaNpAXw+RTxrful+oQ8SiHgyXCNQDsrQzdPpS
LYIeKo9+0q0H+8O7XeSFGEJWcOnWG8t68HKiGFwjRRFtB7Zxf496aFRZCqC+
X4kM9axM2MXXw/MLN3MTfMsQ7uBhC7P8eogQseH7I1CK2CrUT2k31ENzUCK3
5lQxsvE1Fn95uR76RVPiY0IKEdnbL6z5iRqASunUoLdnAeLH4DJ7+nQDyGZw
WD5y+45QP1Mh7F1tADIn2XrJ83mI4RVR++VrDce+PftMhvs3JHaebWHSpgGy
PzRqFQ9kI+eury7WhzWAcdveXs9UBsLxXEPe4XMDiJEVcdo4pCP035LDqEob
INiumWOL7CtCPrY3/q29AUh+OEq/Lk1D9imNRK/PNEC04pzrNb9UZF065/n2
nwbQ6NKvIzVLQQi25D0faBuB3x/ld1T5jHTXlD6alG2E9qEdfGh0ItK4St8Y
oN8IxW5LCX5N8UgF5z2Wc7aN8OZDuOwYwyckX7veocWnEaZWltRaPOKQL96c
5c5vGyEiOewutvYB+fjVk+rUl0b4ryWEJz0gBons77xVUNEI4QlVHLLC75En
YgH/dgmNIC8qxSJcFIU8tBi9Fn/QCOrmYorb0f8htuESn4GhCT7Sd+3igiKR
a4sElSCFJlgkb+lVvxCBqLIcW2/DJmC8xRdjbBmGyKvGzrc7NMFc0Ccumm+h
iECydijTuybI3Xm6whoahLB3po6WZDSBmZlkAxH7K4Tu8PDiTawJNkPm7Byx
FwjZhRu+f/ua4GEIQcXHOxDZM83rTF5qAmHTyK476gHI6itKXtWj43q/cU8U
hfyRuUIrt4XTzWDb8ObeB0k/pPPU6dOiis2gZ5KqQu3wBKnHPbDrMWkGDZqT
9xnzvZEy56YSD+dmILhX3q1meYzkxvFQsgU0w5BuuWjKR08ktdnbvDKm+fi/
XcnTI++BxP7uybLIaYZ8ofUPhr/dkTdnLx4S1zVDwV7goUiLG+L9fCJRc6UZ
NmfXEBqLh8iDb9Lrv0haIK7XweCs3wPEeuyt0lu2FrgqRGbLU+2M6Mkozw2o
tEC6OkPl3jtHRNnuk5SPeQtsF0q92+BxQGTfbQdxPmwBDu0NU0vUDuFf+yps
87EFruOJyAqlbRBWLqKnFPktoBX4LWaV3hqh0TFvz2xsgSHle+eRQ0vkz1fq
h+vrLfA893ec1eEdZLnftuYdRSs8pXqpUs13G5khwRhkOFtBiI5o65H5TaTd
wrXIV6MVTnu9cWZYv4HUhbeS891pBZU3wWUMGiZIaQW/aYN7K7xdWfAK+WyE
pLAM7FEltsLh9Yp7L9wMkA+qojq5ha2QLSeZoTWmh4S7B8dfb20FphppS6Md
beRxpxzEbrcCO+2Wm3+OGkInWkxopWyDW36dcVM+KkhahFj4AWcb9H0Z9Z3z
UULkV7LFL11pg2ZKDZNma0B6dIVGLNTaoFrqnrmNtgLimJPyPNK8DQr7pfnU
i+SQf9TcgnUP2qDf/4zhdroMEu0c174V0AYObOu6PrTSyMUfpx+di2mDj+9s
L3b1SiJ1FyLZTbPaIF3iXX3NsgRi9pq6JgRrg3q5mF9sBhLI6lKQfUVvG2zO
B/ukbIgjr7RIaJfn28D2WaDK+SZxhDPTt5DroA2UrybzeNaJIwWUe+bXTv2A
XNuDWaMxcUTT0YMo4OwP6JTLtX9LLoFMNa99LZD5AS0Hvb6bUhKIl5Cz3pzO
D6j99eJIw0oCoQme32K2/AGj2mO1N59JICnzVh81PH4ABAmGOb+VQOTUJxR9
Qn5Akecqc2GDBNL9xWwhK/4HPN6Wa/NllETsyfsjxvN/AE6Yv3ncWRI5tL0m
Sdf4A5rkay7i6yWRdw1tozDyA+auXWKNp5VCLgioB7it/ADVt4EZ3ApSSM2L
WqFU4nbI4Bn556MshdyYVejsZ26HPiFtuWomKWRFucyD4kI7vOxc9TpKkURe
pkickUXawUV+elBnVgLhIMmrdTJsB4coGe/iZnEk3+qC4yf7dhD4S/tET+UK
olH7ha7jSTt0Ku/taEWJIpO8fMX/3rRDhI6czMdYYcTDP/6WWGo7vLOm2/r2
/CxCNc1KYl3aDotl6wUXrdiQz/Au492PdjhwUfS8E3yEk02iu9Y41Q697BwR
yRukWOe/0N87W+3gl+NQ0DjLiR2g/so3OTtgE1HfTL58BYviOlwME+uAn3fH
zenVpbHzvo/foqodINMq/i3C5CqGjW9KrZl1QM3o7cbsc4qYiYLLOO+DDhjM
c9W88VoZW/60FGgY0AErRLR5dl2qWOCBrfDL9x3g+8tJ0+eXOsZ2a7qrOLMD
hsKrbcQGNLG8ilteC2gH2JOoG1x4oY2pcwxxsvd2gKWT1B2KZR1s3MewXnu+
A/YnG0dsKPQw95EOp2f7HVDtf5l5pkUPOymnRZ9L1wnZJatFDpL6WHJsQ8kU
fyec+I/eUf+uPia9C3cYZDqB0PmvsUVHH2s3rSRV0emE4usdbp37ephNqXSW
x91OGNt/S2f6QA/bZykw+PqoEzqzb8LNNF0s0uvSn6HgTqBXV0rvStbBBAcz
Ek7GdwJHtulSro02hkoJqF7N7wT+qu8ZayuamPH7pJ/3Gzqh6qZNSKiiBvZz
m+O/xOFO8HD0v+hxWw3zN46R6V7uhOYmTql0ZRWMtYhhkpi4C2pv6GpybCti
t8MPjOdYuqCD5mGf2SMFLMWW8KNJpAsKOv9FXw+WxkSYy8vDzLrggZ6F1vc0
fsx9JUXMxaULskmTMt9mE2GljeHpBi+7QMC98l9jOjOi7GX5njm/Cybo7/FJ
vZFEQvS1aXYbuyBVgj+QbeYq0iEo+WJ0rAvU/yMKAWclhPGIa79qowt4bz4V
9/ysiuT8elHWRdoNvy18aF2eayCdQ7tbNXTdcP/1JuHnuhayUf/gcgF7N6Q0
T4bk4HWQ0/kz91IFuoGUWLr+EU4PkY43/Rp9uRtc+NatiNf1EPOQdvwr+W6o
YCIXZyHoIc88lLgeq3VDRN19okeUekiiZYmZo0E33LvPyuOlpYPU6l6MNr/V
DfqnKqTv9Woic7LJXdr23XDuItmX641qCMU5ZmoFt26Y9wquY5BRRoQZXqtf
etYNJ69nd/H4KCC6f/8FcAd3Q+sy0Zj1gATisvQIPRXVDfV37fNdzM8h/w0s
7hIldEOsmlnQ8zebuMFvvQ9nC7qBjJAe90dTHNuL08juR7shqC3ZyX32KsYZ
VDXf2NINgdvkwluxyhjifoW/tK8bupZmDFTJNTAri693Mia7wfrtgFEznw72
UvtMXNxSN7CJ6o7EjOhjX6Uj+19vdwMdYyYpN811rJWfnP7ZUTfcDYgV0Xpm
iC3TPdF5QNUDRDnOqTWNRhjdwWqQBXMPMGvUBK3jjbErCzZ113h74Byl5G/V
NhPMuG/4r+LFHniZZkt7wfsG5lWtJycu3QP3e9ZWqAk3sLjsOo+zSj1wQ/VR
8Q0qU6zqg0z+ad0eCC0ID/TC38AmX+T8IjftAceekUdDNjcwYlc+oT9WPSB2
Yzed8NoEE7gdY714vweMd17haA2MMXVN6sSRxz2g4MBrVJFjiDlJ+o+0BfbA
7zt2J8w/GmDhvL9PV0X0AMJL2MgS0MVyae4ZfIvtgWv2P8JlONWxnt3JsMTU
HuA7qNHzfI1gLD0tJAHlPVA17Be7abmNyqE4xL2hBzqqJM2HKC4itzMLfGy6
eoBquybHbuoq4vdeqNh4tAd0GaUv0BapIp8D4tfVCMf9CryJnBnTRhoeMIjI
rPfA9funbc9zGCDz5kEO5w+O9YrMNsurGSIn1Q9S2Cl6j+8jk1HpgBEiIu46
ScXQC98kyQkiBcaIPjeB/fDMMbbuHBWrNUbcqG6arAj2gv2WOFngJWMkeqcz
cvJKL7guTw6elTZCSmZU2rsUekFy1ydHZ+E6MqgZsBGh0QthFaSxKiYGyE4u
xqJr2AsXxXx8fGj0EBbmw6tUd3rhQtsCdyi1FiLzVM6qxaEXzv/aONmDqSJm
eK+gIPdeOKMgLXAfp4h4axRlq/r2gmD719yfCjJIGdPlnZqoXgi88MFjhY8J
Gfa5f+Z5Qi80JTp331Onx3anMhVxGb1gVPRe5oGxMMamvmB3UNALEqK0Ql6n
pDDZHIGwcrQXtrmHxlXpcJgZo3X+45ZeMGZ9mtUop4x5eycNSPX1Arr2iYk9
SA2LnRzf35roBfrRot+RhppYuSoHb8FiLxzF5MR/fqWNjWaZqrlu9ULMgpNx
Nbkutk///p7ov17Ah/c5WpTrYhyPe98uU/aBkGb3ua0gXUx+4lRxFlMfBIyq
D20Y62A3VfRGHbn7gJycu7XzpBb2JPP1kaBwH0jNdBWMtKthH0+1CBAk+oBB
NGvO84QyVuFJrp2K9AGvsPASaelVbHRM+aGVVh9QtsXSXekXx/aV/KN5jPug
qOYqxfXrZzGODLR8wqIPCLl1NHPpE+hVuoPJT059YCR2k9jpiBe57SFLdtOj
D0oXTthz74ohz0Y9hdme98GzeutBx3xZJF6xUH8wtA/6aFRCLOwBqfq6/ig6
ug+YGFnZCc7KyDiNaJxhUh9sFhmrXbVSRQ7dnTH6rD4I+sWvavhZDeEcyZjt
LOoDgcQiOe9n6ggO5ikjqo/xb0IA4291xOLLWVGdtj44KLod9ZdKA/GjtjI6
OXCsLwWbZsbUkUS3RO/mqT44FfB9RoZOHcGGxhJe/ewDaZYxWsUDVWQSx16v
8rsPKATxQ1SvVJB/qTcWiYn6Yc3DqcQjWwnhpoqmraHqh+o3EkjROIIgrj3i
fsz9EFN/+dTlT3KIxSCdmQJvP7ylZ/rBGCWB+Cno+u5f6AdvLdOnm7PCSDVl
c7OXYj+Y5A0IjSzlo9MuZCuSOv1wxHRKpvsuG0Y0oMS4ZdIPDbS+M4fCQhjv
1ecy3y37wY9PsLfqjhim+Lnq9kPnfrj5kfJoRkMSszyxH3DJqx9+7zxqEhCW
wfwfyKT/8u+HVYWdHakhWSy5z6M9M6wfHN247rYJyWE1cgUbDjH98PEFjqdF
TxabTlpjEfzcDz+oHw92UMhgRBSXFOay+6Fx+71eqqMUxnv/nlVKST+8dCiI
TAmUwJR604Msa4/54XPZ52yvYNayhGzu9uN8Z0Jv0MqJYoGJ/D3jg/2QLDQg
BV7CWN29hDPmy/1wQ+PLyqvPPFjhkrOzxU4/WG+01tFusWBpjvKVNkQDYPmI
5+YDPVoseoGS2olqAO7wO2eFDeyjr+yHbrqcHoCRwvMkVxuacV6EL1mPuAdg
249BWAD3D2dv67HvfX4AUpfipSklqBHTWWVtP/EBcPF8/kS1jBHRtGb4+EJh
AKquC304aGJB5PBTSyHqA9C2+36a4zM7csEyV+6NwQDo3zzTxMR/Bjkz9Sz0
3c0B+Gd3otT03JnjN5XOSKztcf3o84/Oh7Ijf8fZhRNdBmDmsdGj7SMWZPXW
oneq9wAMd+IdmFhPI5OjJS0ZgQPAMq4+rrlAj3SZv2LLDR+AK7W/SvMZqZGa
YSPHwpgBmFNomKMSIUPyTfnLypIHYN/iIFs/dh/3eXD9BJY1AIbO+6GSUT9x
USbVpvVFA2Dz21JnOD8T96I/Ir0FG4ADPYXblatzqIfR7T8dLQPwR+/z5Ev+
bdSu94JGX+8A4F3tRS32D9Ab1/dihscHgPUV/0vGu8SYRnfz/MT8ADj/4lRd
ATJM9lqM9Oz6ANhbB+/g3lFg5zttgxb3B6Bvqkn+hS4lxq4nMbhCNgiONxXz
r949iVG1Ewtu0Q3C1RazHQJ2EtvX7vbcZRuE7zyeOUTH579aExv/8g8Cuem+
G5UEJTau+YCZ9NIgBPE+fl8oQ4F1NF+1o5QZBD4Ll5juaVIMU6cqplUahD0L
5M5Ze2Ist3GYjElnEP6dNDXfqfyLJqmmG7OZDEKE9fYbfXQXjaz3TOO6OwiB
YRPTK4dbx25bdZvfaRDkoqQzCfprqFsto+r5R4Nwq/z+1J/eBdRaEf/uku8g
nGF++PDaFB41qs6bFQ8ehAvB1V2k4WOoKuInIfvfIEhtpAtKeA2gkqjuC9yn
QaD2zfsb7tONnlM406f8ZRCuhdFPOp1vRVkql/g18waBtrtFOCGkHqWQL3PX
Kx+E0KNfjAenatA/ZUF1hvWDMJha9em9J4ouypgwmnUMAv7oBHc6VTU6UnLW
+s7QIHQq1b4ed65D26Q2v1vjB8FlkqnV414zWlFUQ+z4axCIs3iukWV0oNkS
b68/+D0INzUZl9hYe9H4gjuf3Y8GIa+HynzXaAANvyKy8fjkELTuuQtxWA6j
vvn7ir5MQ+CtrUq2Sz+GulxujQzkGoKnut5J1AoT6N3cD9PBQkPQHUKZ2Vky
iRpcsheLuDIEv0JWuytuTKFKOZL+UVeHoGDgbLPWxiQqfpG0+4PaEDgkVj0c
2Z5Az2b18CRcG4L8YofDzgsT6Gnh5Icp5kNwKfmswzPvcZQsw6U63WYIWHZP
iEXXjKG/BXGnvj04zmcqMtRCGEWRGeXm195DcC4oKeZU3ggalKD53PHFENCc
6c5+fmIY7TTTl1F/MwR+SiJPqloHUJbTxmtn44ZAWoDfzqm7F7XoMk8nThuC
02OQbLTcgX59fffuVO4QaEcJ4ZQvNqCranasaPkQbL7K62o7l49KEzt3fWwY
goBtXZv1hCycX5VrsHfXELhw/PX9pN+Ca3rsBTdGh6ABtSWKixnE0Uk8+yNB
GAJO0g/SfjZ4nOlqQB7D+hBkc+8Y/HRZxCVnBjus7Q+BvH77Gx7FddyibQRP
B/kwXCmw8WQe2MaJ8b4byqIfhmvf7Uhzj/Zw3mOxb0PODIO0cWDOQOYRriYm
UcNecBj0EN7vHLUkCKVh2pHKlWHgXeUy9MPIkbiWvIdH6sMgnGqw4TxBjVQU
N13zch8Ght9au4M8pxESt/YTxr7DoCIhmZaWxoxoi/RWXwkZhkDFk8gHflZk
LGXi8krCMDiG4mvESDgQAYvZhbaMYfD78un+/t0zyH32paSMwmHgvp4bJprH
iRy+3T5l2zoMvmw6mWc4eBBVnf1mpf5hMKZSLz5g40XCKYj8eaaGITpfK6o2
jhfpryWX/bs0DPwyFpyOdHwIly/1+uj2MESwyPWSPeZD7GUZMsqOhiHzz+Wy
yT4+JHeLxTKGagQK2fYljs7yH/s3TjYP5hF4zHKB66E9P4Lc4+++zjsCORGG
OjIf+ZGgc+dDLl8cgRNnKGIsMX6kc/qSIq30CMjdGurf6uFHWOIldn8qjsDB
T7OpvT5+xMJULr9FZwRIHLgintbzI18ZwfHrjRGguF9aHJDEj6x2qPK+tBqB
iphyMWYHfkQ6VHvY6v4IDL4oGUDY+ZHnqgaR8HgE9roUn50o5kNajkw0uQJH
YJP118FjOT6EvvIW0UH4CATsaojEfeFFzLysyoY/jEAsZ3/rwjoPknzFwbUk
ZQRWfjXv81lzI4vL989HfxsBNDby42Y8JyKW4T7tVjYCOreNzJyTOBBvG+/Y
a/UjwJx68/JJRzakhtvP4FLnCOSOf3ZsoGBBKEdfUFKPjACh+QGtWggTYvA+
tGZxdgS4jvJiEjfoETz1e7G0vRFQeVzpYcx7AiHZy6Y/c24UBhBn9mSzWtyZ
DuUtuDwKY+l75aofplDJzyMDtnKj0B3DlvAK20DttE58ytUbhffcYhupyiSY
H1eib5/pKFD8Gm45l0mBxWxIWu5ajcIgSQLrq14qLK/xhzLX/VEIcfli9LyE
DmuJsz6n7DUKnz5G7DkKMmD4B3snHPxHQTaPSTqhifHYL0b+DHs9CvPePhyV
MqcxJhahjvzoUXj4tM/qsyczJvITzRtIHIWlPrFU6gAWTA0zjtrPGAWJS2dM
3B1YMYuoXx48haMQSG3GG3WeDfOyDzRVRY/70z/BNVHHhr2VZ5d3ah4Frn5N
m0ZJdiyDLp/zTc8obDxToEafsWM1M+pHBWOjgAmRXJKOY8dGSibwQ4RRaC4s
n04JYcc2X3s0HK6NggrRC8RTix2jvkudzrc/Cm7LvhY8o2yYgERKqDrZGISb
tpkxybFhuBNy953pxqCbN0St3pYVuzHWpR/JNgbPhIYUPt9iwR7m2V8p5h+D
Du2hGzyczFjIi79MoyJjQHQvIzsvjQlLNo3e+Sc9Bq9s7xk1bDFg5RcvjpxV
GgNZdpx91wl6rPeotlJTZwxIu/x3X2HU2M8+s8QHJmMwcOf8Lf4NCow0Y80/
6u4YaMXnC5ilEWOcz4JsSp3GoDiqgIo16w8qZcClPv5oDPy2uT9W/iWg+gJF
54n9xmBvqTWtfrsR97wdv6IdNQanKbQTv0YRIbHJ3t0P48fgOdupx0a9lEi+
x6nC6K9jUBVWPG9eTo/McOK8JyvGYPr3qVMDA+zIwXrfTdLGMaCxoRr6+oEb
Od14D3e+awy8BEv2HlbwIeoPYkncZ8fAUj9gSrtEEMlEt8LJacbB3eRy7qeH
Ykjdf68fXmAZh8jtjjfSBVeQUTs+w2u841DoaXxKfEMcoaG7xhonOQ5XeP1N
6O5KIedmCHsoMg5CbcMdBmHSCFLybHxGcxySTf11SnNlEFeLrM8id8YBx3O2
qnBADgkVV3p53WEcjkZ6rLIH5ZEUimF7L7dxmPKRdn/dehWpGHXR+vR0HM5X
ZzURf1NA+nLJRWpejcO9eyGydc9xyHJgPB3h7Tj8vCr8+ZkigpCZSmyc/DgO
FNvzI/gVBOG62NYnmjYO9EZnqlKCAJE+siwxyh2HBppI+jIyRURXryZQrWwc
7A6qncPlFBGbTzzXZOrGwfOza0y1rSLyZMnvjHD7OMjK9wu4hSgikTKTCxyD
48B3NmTGJlUR+foKV0QzPQ75VgstRkWKSFVfvP+/pXEwPdDtOSxXRHr5DnXX
t8bh3W+m3xyFisjSw1vsM3/HYczkw6V7iYoIEVZB6DsxAV/4xD2+PlFEWGg4
ChoZJuCBBdSFqSsiIjd9/ErPTEASAwfDIJEiopwxrJ15bgLeBcgXBRoAYrYj
w/rp8gQUzGhcYnqMIA9VP8yGy02A5nVG/wF3HBIUtZPnpzIB0cPXkpSUFJD4
aZNnrnrH+V6U+HZNySMFosWa1qYTIHHnkPaPjhzS8uw0s7HVBNC4DimLvZBB
Jtse4dWcJ+BJ81+6rUAp5Ddb3zcZzwkgczlnV6opgdA4iD8Rfj4BPi5ksr97
xBD+4v/Uz4ROgGPm521NWRFElnSDkfbdBIjdCMA90RJE9K8bTP2Ln4DedSHL
8TQexDYpL3v96wR06YfZCMczIE9X6Lxn8idgzEvIf9RzFhd11UW1v2ICdEkF
eTjHqLGM0A76poYJoDa1Xe8N5MGwIZGJ0s5j/W4/6uMuCWP958IzM4eP9SRF
k0gmX8GI67SVI5YnwIS61ulUqQLGRp9F93xnAkxxToRWWyVM1OLkmCvRJLgR
/flWH6+K3dxvfmR8ehJqb1oqLofrYEXial/OKEzCuWBCBqu/Cdbmn+ZGqz4J
MYydkSpRpth0JylydG0SbDyD09LyzTFa57rBGZtJ+KnOqNBPa4HZpwJlVtgk
vLtzwlAtxgZ7tpHY/+n9JKQbBn73r7XF3sG/5IikSQiXDXuXtmqH1YxVybkV
TkJ7bNxAuK4jxn5a3ll2bBJ2D37RilE+wMSs42QuECYho5kdIZJ0wdTzd0k5
1yaBQPl0IujOQ8xdtzT+iGQKzpgyi3X1uWLtLyU7my5MgdGvmthUskeY/Kkf
JP9JTcFEhHgjvH+EZcRZydxSnIKmpo/GZPweGIvArvM5nSn45CsU8inLA3uR
+yZ5zWQK/lsQD2IT8cTWZc8NlFtOwYt5zgD6j56YRX3lyZfOx/yKCQbtRU+s
Xc8Q0feaggucl42+UXlh8sOL7mwBU/Chvu0u/29PLMP6efpM2BQgTvcM//vk
ibGsMI/nxBznb2xWm9nwwF4+zqF//HkKFPZenxZefoRtEKuoKeVMAZdxU9xi
tDtmET7iQ116HE9vXhl80g1rZ3HNHaidAurejpbDBhdM/jPFbFL7FFhICBGF
ujpjGRcTWO8NTUFOJflWqrojxlIioSs5MwUcM/mPcd522EvFNv9/y1Owyulq
qyZtg222WRa3/JkCEVcfkcavVlh+1oGHFvE0/Dotf0Lk2NEsrKm/zaWYhrwT
VnFtTXcxbqmoTCaaaXgw+WbTe90CM34yUe/NcIwZ+xj3n1lgYdXnJydYpqHn
BOnWHFhgdWQeu8qc03DAvx3WTWOB7WpVM2bwTYNBy9NBo9I72OW3VJdohaZh
JEHy+RW4g9n3m2i4i0zDF34uE6aR21gC+2eroSvT8OZnWpiOy22s32L5qYLM
NCT/GLpPOX8Lo06TifmsMA07n2qVvYVuYcpLgfkUysf9XHExbWW/ifmIdrY5
a0wDq/XStnCaGZb/iJ3QrTsNkZ+GNgVyb2ALZbZHUobT4CSocLQPxhj3vzz2
T6bTcF5oJUc89DpmonIgQXRnGgrPRd/FXPWw8BB1fTvraZCttH0stKuB1XX8
59jmMA1Le1Qnm8lVsD3GicDLD6ZBIipsN2gFh4mZnU+Idp8GSaEMtyADWcw+
4VHp3uNp6LdnMt0vlMISZrAeC99paJj7YnPIJIX1C1Et1wdOgz7x3bOvxqQw
6gcmFMIh05Cdn+L7KFEGUy5I5n0TMQ3FC/3mX9flMJ8/v+S3oqah/KN50qGd
ApavIGNiFjsNf9BoKZMoBFsICHyIJkzD5bO/A5rJFDHu5o5Q/tRpuO6T7tAZ
oIiZ0LCnBWcczyPMJHmWQwkLv26LLX+bBrls/ctXspWw+pi84euF08AvvVqF
p1bG9sf2N0vKpkHm9dsNHhZl7AqfOi0nNg225G88WVKVMEf7/4QC6qchmFxt
Yy1MEUvKHleab5mGOnaHxuxcHDa4LnRbp3ManskbkEuPy2G00o+88vuO+dFq
Hh6zUpjqUyySeWQaZvy/Sdw6uoI9rTmZ/WRyGtq+j7dWDYhgBeQmjVOz0xCz
NG44VyuILWonT6kuTUPB7fNqzHL8GE/kr73M1WlYrPK3ienkxjCr55kFW9NA
j8nODkucwSwkmMwrd6fh/u3eOP5hNuwvWTplw99p+I9UtvEokBWLH5QvayfB
gzK3cerhAQt2NaPTYeAEHh6zMrh/oWLFRn2sWSdp8KB90/xhkBcr5qOz0zTP
gIfzabzfE0+wYWxcr73WWPBQdD908GUfG1a6yiW4ewYPZKonGWfG2bEbNd8H
iPjwYCTHtza2woHt/Kf26qQgHhxuG+596D6DvbcZkWS8iAfDKq6qq9c4MUmp
B3McYnjIdiSrX5bgxPopiKPPSuEh3DU4rlvzDPZoOFpFRB4PXxZ9HLWc2THG
rPNbkoAHXfsTVyNoWLHvT6tScKp4EPrJ/nfz3mnMQM/AUF0LD2YUzdok+QzY
Ovcc8TV9PIh90vR/RUWHvV1//N3UCA+k6W82H58/iYnWUVtZmuEBbxQm8IuG
HOt8l0TvdAcP75qd9FepSLAHdhI1btZ4WFjJbfkv7wilkWl++MQBD/HjxHsr
lw7QbMpbPC/u48FkTWzldfMOqj262hnmhgf+1FCHV1Wb6FJ2oF+0Fx485wuM
t+NW0RBfFtGEp3hYLhtbo3ZfQoWuZU188ccDWnT+XFjAPNrEi0TkvsJDRa+k
T7bmPGq/2aNQ+hoPn6g/uX7VWELJG+yWq9/iQeKmahhPwRqa9n7vU0s0Hsok
/051BW2hqg4ROj1xeNhlNK3Kwf1BZ2X5DkYSj/dzyoMpYXwfDaQqzppJxYOU
B1viB+V/KN+45s1fGcf11V6+1konwmq+jZ/c/nas79pLtvo1Yuzuc9fywwI8
qD5zGZD4SYL9MyBzIi/DA7aexsUaRIol8Mey0aF4mOkJ1VssIMUUti+2sNTh
4cGa7EZIGCk23lj9mKcZDz1VD7R+IqTY0w9GQufb8XBrGv/PrYsE43BaGBTr
wQO7/c7CQyDBKuSfBskN4kH8Js2YxH/EmDnNKWnlMTxwtL7MpW0mwnYnUgja
03gI9Q1w+9h0hH7Ik35vRMDDlbfKyS+7/6LSAW2qt3/igWeKLsYn/wD1FNhM
fbCNhwAVYu+i83/Q0zuvjLz28BCSJdbd8msbLWpmJ33+Dw+1221bdXWbqFHc
t4Jg0hnwLsjSUCpbRzfvKVlHUs7AnXljq4ZvK+h/CgMMcbQzQBGuJRRi+BMV
o3Oq/cw4Aw2ei1lUHgto19ShaxbrDFDWzReHCBFQl++RvIWcM3ANG91eD5hF
aV8IdFfyzcDA/p9xAm4GzTEue94gOAP3cVNubhx4VFdQ93LHxRn49Cqy8B3r
NPrrz9TkgNgMCGSwqsbdm0RLHN7WaUvPgF360rnM1nHUfwj5Wn11BramLv7W
8xxDdTRWQyWVZiD5+uT34AejKEtpwoNM9Rm4d0h0+0bBCIoX1LvOrTsDqtPv
tspVRtCcmEPJd9dnoKiW/YQd6wj6mCKHjdJ0BtZw/B6f54ZRZa9bh89uz0BO
x7vrugnDKO081fSG1QzMurok2SkNo8MmFfX2DjPwRKjgzkr3EJra6JQ+dn8G
UjYswmd1hlAXKfYwA/cZ4OnyuKhZMIjKfWlxaXw8A5I1W/JnyAZRMmZvQ3nf
GYhpGKu4rTSAftweZBcImQH/tS++HeF9qJ1t0N/YiBkIblgrXM/rRcX6pfC0
72Yg+9PZnua+HrSpMDrjT8IMvLumVfMfVze64W4o86PwOF8C++z5R61o1Qzx
GcXyGfj+wL+suaYZDTL8/q8ImwFaA5TlNGUTyilO35TYeoyJ5sVJourQhc/V
mUxdMxBVTWo3P1aDFjA8jAjpP56nx0Jq/y0M1dzoMHafmgGzkNuhORulKJOV
r+zC3Axkhpr4Em8WoZPdIpy3f87AmZaK0iSeAjRTcfyoe20GTjs+M39Hmod6
5IfNqv2eAWb/s59fQBYKvFebK/ZngLuiU/Q98VeUKvJn1mWiWQjaxf/UNUtB
+4/i3qSRz0KrYuDTu2mJaNJDLXd26lnwEEjmeXUQh96b2jV5Qz8LXnaEqNN9
MajktQw5UpZZKGxh/8qq+R49wky5vM/MguRp8guxj9+jbaIniFd4ZyGJ7uFa
kt8H9H1iyZyV4CwI+fI0yz75hFrS2bcMXpwFSqY1xZL6ZPSiH3OOzpVZyHCU
807Bp6E7Kw1va6RnQT5VNi10KxOtvePxSEphFiaQO/G3H+eh4R1nTbOUZoE1
mMar+3sByv8tkDtadxb8fST01qXL0RVOcZKThrMg8M0fo2ioQsvC8QRf01l4
s9CdV69Yg+rdV/zmYD0LX1iKbh6qNqBs42uR4w6z8KuVkiXAqQmd0UnyuP5g
FoITdLKN0lpQ74v/rl71ngXDrqRzBzc70LSflW10b2Yhp6bLyH+qD3X5cO3s
vXez8Kjd/agIN4DKqM4+bYydhXd8N5P70wbRtgSqS89SZyFVjV15NXwE3TAw
f7tUNgtRNa2adblTaMXf5QVVbBb+XQ72rfkwjb7M8ldMrj+ub9VPjDfEo2xk
GRs3OmdhS9Io07tkBp3Jv6pd0DcL+1XSt3zuzKLZd7pSaEdmQWEzw0T/cBZF
SneMGmZn4eWVBKUQbgJKafs6h2dpFgL4emq9kgloLz03+dPVWfjz+k+6Lus8
Go9+vzO4NQs9lk6V+oHzqN09tZIre8f7inleXzs9j4qyjtBF/JuFJa53wT+v
LKC79fcdFknnQPPXYSet5wJa50pUo3JyDjg2mK1cMxfQcK5otiS6ObjNL0Nu
2rmA3mgTcttnmgN29/JAitkFlOdxZasJ+xzo9v1Orp9fQBfPXuP/zj0He7Jq
Qn3DC2hB98wTGoE54I4hmvApW0Cf+Xr1OQjPQd6Ef+jhywVU/QKVSL3oHOSS
8Gwn4RZQ+qGEl9ySc9CtOGNeOTePjry4MuEjNwdU+rzP65/PoylijVIDyBzw
Gen/GqebR+9PmL0RU52Dms6P9VRRBFT69fJ8mNYcCCpKXjI4SUCJZPxhQX8O
GAS19PI95tC2WaZYZeM5iDo6oSXaP4u+i0xfTzCfg186SWodQrOo4M/Oz8a2
czAtwzD4JBuPrsdY7+c5zYHVgGbR27FptEJlx5D64Rz8rDtnkHY0heolcJHV
+czBjr9Y27DWOMqi/f021/M5CDlrtRGtM4pO76gWe7+cAyzuwoNGqWHUw+C+
/eW3c1B9cBAWX9+HIn+PsNfRc+Ayi9Zfc+hBT2S9Y52Pm4NEUfYt3oUO9CNp
ZUt82hx8LwlhSA+rR2tLTl6kqpiDJSb/tHGXT7jXNgkv7KrngMnTUIHPuBBn
TH9lvKZhDoKd5Ir8mWpwi05mEY+75qA898fuOcsOHB1X+trc3BzYR4eqhlSP
4xRvvJiYXZoDXgNR9vsM0zj3t3d/zKzOQbJ0yupiEx43SMyWPr07B+8/5T5+
I0/AJc6HWIzTEMCLmKi/UWwZ181jpzvGQIC15pnI6ysrOBJzJflRFgJEjt38
TpOxhrP/scc8zEsADbGWy0mvN3Ci+fc6+iQJkPjmFp/9xDbOckm9sleOAM9V
f+8EZ/3GRfGfzexBCICwTtWsPtrB7USPvezSJIB/J6GXb/8P7nxnqXunHgGi
6dOc5Up2cTdPRFt2GBIg98LvOJEHezjMR1fhx20CMKdEmSm07ePWC85faLMi
wJ/b/nJpDw9w/MtkbK32BCDNVrnuR3eIC7JAt5pcCVBTGdHEI/MXV/YhDt/o
eXw+XuwhXvMX97Pbs6vhCQFitXf29ZT+4fRURLPrXhKgVML1ZfyFI5zfM6q4
2lACzIqamKREHeHyi+eDat4QgFMc1bPaOMLNrNZ5VL871nfSK4XyLBFy+nyS
NRZLgC99jCd/axAh6lZPDdAEApjO3GhicCBCvD+aIlUpx/PlnWvcf06EZPVJ
iFSmE2DR+/aWThQRMk5Dz1GRczyPQSv5zwlECJ368ony7wTgFogJivlMhCg+
b/ldWkKAz7qf6puPz93L0mZLKglAkGea6P6PCEnb8O8priFAy0gSpudLhAxe
uFNd1EiAc6dnjUbvEiGUtnLfCtsIMNrvF8IoR4TIJzB/KugiQDMFs2YUJRFy
f3Aj5Hs/Ad4Ivz38+ekIl3iq0yt/hABufa6X8hmOcN2aWbZ5kwRYn2bcz3b7
hyMJDDLMnT2OFyqXY6n8i5OstFb8tni8L9/0esGVQ5z9NiKas0IA+zK+h8wn
DnGxl85wZm8SIO2bMxMH5QGuzf7Pyaw/BDgr0Rp8f20Pd5jU9yfjkABL3H6p
qlW7ONGRPEI68TwIqnfiRh/8wVkyhvd9pZiHfr+/l+xId3BROo61X6jn4Xvi
NR2uZ9u4hpeqeWn08+DxlPKB/NAmbgflTUhlnoexn873tpk2cOf/HL5O4ZgH
3KunUhQ2q7hwp2L7ZIF5MCfznjlgncf9VPwWQn1hHno+3/E0EsbjNNi+ZHld
nocLSgxf0vqGcCTN0au68vNw4vrHh6WM4TjLxHD6MpiHw+bK5VnpZhTzfCl+
Vm0exp+9uczXOoz6CHh47V2bh6bNReGStJ/o4IFzrK3JPGQk/SqdENxAJfts
KrpuzsPaKkOC/9nf6HqA0b8vdvNwe0nyfuT7v6j9lHiQ4dN5kBHSaZSVoMQa
Si5koP7z8N7WhSazlgrjf8Pfdj5oHkZl/obdtaPFJhQY6Y4i5+GvMINFuhcD
Zvxx433213mIK/TUIT5+7xW4LZWy5MwDi9B8dhkvO3ZKCz8S8H0efp+5nl/X
xoG1/enmMquah3DCrqOgEjemZJL/hax3HjblLZ+0jvNjiSIZzQ+HjvnlHIsp
o2exQ9LkpdHxeSAfKHL2nRTAygreXvq+MA/3aH1irHYFMVH6h8V3/s6DdcNI
OrvXRYzzx6XGkvMLcCPsDetctzj2JOXcAp/oAmjTuFz/7i+BDflwnYyQOMbu
SY2+4pJY1HlaPRtkAbZc2ieefpLCTgYt958yXgCZEm4jvJ8stqOYPef4fAEC
enn9fzshWFXar0+PXy6Aob1qoMQZwAIpRYyCQhfgx1nB71ztgNF159SmvlsA
/yRVbVyMIiZ4NzdxMn0BKnZapPc2lLDlulWTlZwFaLAuXozRUMYKBC/THn5f
gGUK+/w38coYspr3lL3quH5ok7++qgp2w/e7mXH3Ahi52Z+9E6qKceI3TtkM
LEBz3I0A9mFVbEZVvNltdAFSuFy3C8+pYS40hVJv5xbgcmsPuxqqhkm6bi0n
LC1AkdzWD84T6th+n0RazuoCqHxYj4q+po4FfSpibNtdgEQOEibGcXVM92i7
dfjvApxozGPJ5tHAGG2kAhZIFqGtf/eRkpUGlnihZI2MdhFenyx92zuhgdm+
2fnKxLgI7Hzm3i/YNLELm9IW/KyLcPHFOl2igSZWXF7aDnyLsE1t/vFZmSb2
hGv3hb7gIiieMy3fWdDEFANkr965uAjKLmmj6qe1MAqC96az2CLIWpoyaeK0
sHbN8swnUovg4hHkPWCthUXl7FmGyi+CiIAmT9tLLcyMXp4tFhYBXSzgJE7V
wrg9nnR9VV0E56sTr0xQLWxuqCKoWGsRnr+feJjSp4VlXT3ANegvgqpr21od
QQtzTbr6u9doEcjVKjiitrQwadJnOXizRTgZUU/+61ALO7Svslm/swiJtYeN
GcTaWF3bIceR9SJQ3X7m+vUYh4jiemkdFyF2wIyj+pivH+UbyvlgEaLTM4Y7
NrWw0zuo4kX3RdDQCaz5NquFjZr/+yP3eBH25Q7n5bq0sGQUydN8tgh7yyJW
esVamD3fc3vTgEUIn7igWv9eCxN5Vc1lH7QIRy9pvni5amGbi0f9HmGL8PH2
YqyymhZWpqsY/iJyETIm+iVJjufnl++vEvV+ETwCFiMixzUx1dO1+8kfF0G9
Vq68JVETo/ImLshLWoR7LFM/Xt3UxLrHlJywtEUQ3l8dTTmlicVAIG9H5iK0
E54f7KMa2O3UuqGx3EVIMsxQdrLTwPhPkL79WbgIy+V+jS3kGtjiPRX1vbJF
OIhmj9tOVMc8xBuKWOoXISxsJ4irUg2zl+RN/q9lEcRqq9+RSqhhZtLPwmg6
F8Hk4sGlf59VsavyktYkI4uw2lW752SrgokoROr5Ti6CXGHawJ1SZYwbWZbd
nT3un5G1+RmRMkainHZqdXUR3kebg5KHIratQnTguL0IdbUk+F4FwAhqt+dn
9xbh1XYX68unOKxF6zQ6QrYEf9uUcphK5LAKHdcMY6oleFTz3uJPvgyWo9f+
ruvUEthsNr5Rj5bC3l5/+T8KzjSeqq+L48qQeZY5hSQpc6XcvcyEEKIyZkrp
L4mQTJEiSUJSGpBKSkpCnROFpAxJyhAyDxd3HjL03Ofl+Zy99lq/7/qtc85+
c040K8yA4gt5SX1JPTzJdeSg6cYZKFToO/PIYzsecdDE7O3mGXDIpUn89NDE
3Q/TZKt0OftJ5MptOquI23o6c2vvnIE3zs1qdrvFcWPvioWyvTOgGhzR3KdH
wZSOBjbfsZ4B0G1NW1aSRqIBDS9kHWYgMH7MxOLaRsQVpHQn58AMDN2KMCfb
bUFjIT0Rl71m4Jt78rXYt/qoPNxyY2TEDCR6VO5EOmboTsR9ocXoGQgKCDBR
crBAVyOXGcfjZ6Cg7t3Ak1grFB5T3e57eQZ6aJU5Hevs0K4k9Tj7uzMg9ybY
NnPpANK8kBTcUjIDa+zDBbY4uyKF1MEDZk9mwMigyFz6uRtavZSruat6Brbd
cCBop3mgpms8vaptM5CqmGrzoNQb1Vz3ayzqnIHHUn3/XbLwRY9vvKuQ+zED
jhFuQdQoP3TlZmSK6MgMNJP3nKrS9kcu98Z1/9JnQDububOlJwgNP2+68m3T
LFQF9+aYy4Whrnkeov6WWfDPuGG7qn8KNWhbOeRqz0KPvJZ85NZwdL+8Wdhj
1yy0d6uW7TxwGvmXtVwddJiFfJrHg4cNZ5DLBN8CwWUWzoo+vm8REIks1G0c
73nMglesb+A9/iikXvxJ1N9/Fh7y78oq8TyLJotar01Fz0JCAvF9kFos6h3k
J9nGz4JLdv/O2MFY9Elxn3P5hVnQTM5TOl1wDj2+9Vn8v6uzsKelNH2T/HlU
8EvgdEfOLNDic96O/T6P0mXtvukUzMLFgcSqoofx6Jx7ht71olm4yeQlvg5J
QCfy2q5Timeh4HhQXr1cIjrSI0hxfTwLwedD1hY/S0T2UvYur5/NgsGFl+xX
YknIxOXKy/WvZmHkxCFpHoMkpH39i2RM7Sz4jjrrvTdJQkpdQmf6sFkY7W7R
HdNMQsJiDt/3fJyFTfvbJgYmE9Hy/kyDO62zcODas8p63UQ0n/n1xkr7LMiZ
Xk302ZKAhr4I03y+z4LxsOcP+Y/nUYfgfreGX7PwAdyXMMU4hO+7Wr1paBZ4
9t27SrSPRc8vt0unjM1C6dmbGVq+0ejuJ5Go8elZMLe8R1r2i0LX+Bx/WC3M
gvR2WXza6wwKT+3I42fPguCFlxJmo2HI76Mo4/jqLCxxnh7zpqHowFon9y/c
c3BX+eNb6uIxZG52rUZbYA4kk/11ffmCkH5S5/os0TlYd+MUz9Wb/kj1vVj0
otQc/E36mXwj1g9JrTr9dJafg+nvI2uDjbwRDyF718sNc6D/1kAilXkY0eK6
bkqpz8Hun8HGO/Z6oPF6cVbk1jk4YWmcJrH2IPrBdj7Uu2MOwjedWDuw3xW1
7L5eu8twDjSv1tbu2uiCaqK/yd0ynoOVh2Oves4dQGU1ErF/0Rww08tXfXwP
oJv0A32elnNww+NrSUrnAXTZMMcY2zcHFV+PCn5pdUExZ7pvbXCaAxcFCf/r
m91QyEvJv4luczARu3Xy0ceD6DDZ5cifw3PABxZf4lM9kJ3ujXpz3znofMew
urDvMNpz6rtCaeAceFgPZqjTjiCt51JxvCfmIEkns+N7kBdSmHcdCD41B1++
3LX6l+iNBLVz97ZGzsGbsAr19eo+aOlEz+2t5zjXofvvXzLwQW47va/vSJyD
C54Hstn3vVHFmsk0g9Q5CLt9kac21Avxtoed350+B7GiGmjxzxHkU8A8Tcia
g64bQe718ofRm4CkY+Y35oA/JSj/5gYPJK4j4G1TMAeX9W1seJfdUGOzgu2B
4jmI2m608UqYM1K4XkJwfzQHPxz4X4ORA4rw0jbwrJiDlLORbucLbdCXLa81
/armwD+F/KJVzQKpUwkbgmrmwMQ8tc68i4Di8RapE2/nwGf1QA/vihHqTXcS
ONUwB3Gbo/MORW5HOw7+Wj3TPAeMYNPqkGQVdGnjUVpM2xxc+xdBijJnE0bm
ZmbiOzn+ePqm8+56cXz3m4jhCz1zIMx+a1qUvQm/fmGp51LfHCTerKRLbNiK
z+5PbcscmoMS455K9RM7cAt5kYbrY3Nw7JWaQ1meLn5nPO91/vQcbDwodZIr
UxenVW54ent+DvoybQJkBXfg++Me3b9PmQMr/eKxnsdb8TJr3fyHzDlY4L07
zlOpjq9K1F0pX56DwdXvZ+0eb8A9fpslV64hgtyWE+eO3ZPCXzxuO1vNRwTa
RO1ybeAaXCDS9WSdEBFU7kXoPFvpJ/jD4FFcnAj+l4LuXtTlQ/WCQR4fZYig
foL1ZVhWCkn1zju0KhChzGB2Qw3Io5MPzpq3qxBBH7OccilSRk0n/+3qVieC
yZvjcw+LNyLl3Ze3/9xKhNsRywWHlVXRWW4JtcEdRBjeXLxkuksNdXbckvtj
QARGUHHOr2k1pFmoKjq5mwi5rZa/72ipo6Sgp9xzBCJsGes6IkhXQ326huxF
cyLI22dlFJmqIf3ldws0GyL8zGua6+ZVRRmfrMbZDkRozg77U0vYiMZyOvpW
DxDBOz7ja7KzEjLx8ejk9iCCneVV35p/sihv60gTvxcRzgt9j3v3WAot0ELq
RY4Sgb87x/xCryiybiBXSgb/n9fbe6PtfOjelXMPZUOJ8GWFpTw9v0pguXPf
VgrnrM/x3bhJlUJwVs3M3hRFBJ7MS/LXB4cIT+al0zTOEeFK+KaBT90XCWvr
iuK2JRJh84WeHaRj3zDPVI3TuqlE2OHwrqNmdQirdqoMNkongrE5/dJM6zgm
rLjba08WEc7m6cQWZ09jQZMNB+AGETpURPam9c5ieNU+G8sCIpj9udqeWziH
rY/vNtlXRASN/irdjsFZ7JStp75jMRFiBGID9YumsVap8S2uj4hACB8LaRwY
xzYNn1Q+VMHJpzQax9Adxs6V0yW9q4iwdP6h3xb6N6w7KoHfv4YI8ZfuJ++5
WI1tM1u3GvyWCA5/jWgOs3WEF+VPt/xqIIKSyMZRkxffCIbSzgf2tRDh+Nkh
HZ3oAUJtPO1c/RdOvI+61OupPwSTqYLSbd+IcCy8cvSs1wShwZnQcaeXCNTw
bL7f8tMEq/o/TJFBTr1+nxKmVGYJbWppmxL/EMEVudnnh80RHK9q2ZMmiXDZ
pixBQpdI6GZ0RB4lEkFZezjtXxmR4OF35m43mQiyL31mDXuIhMHPsq0WTE6+
PvUnVW+IBD+Dd+TqZSIoFOt9jDpAJIzf8VPUWDsPOsIXdyc/mCMc5+O1urlu
Hk7Kqgj0PJolLJx6EsYvMg8LH/8ZhgXOECL69hfESs6DhOSWd04/pwgMc0rj
rOw8LPoyl7u4JglxFflznsrzELnbM8RraozAtX6vTLvqPBCKGu9cyf9DSE0c
RkhzHry4+N9YGQ4R+GdSQiq3z4NHCfPL16VfhKsumjkbDebBnJd3yfD2d0L+
5tMTa9E8VKinB+YlNhIUrsmIRVrMg7zo+Oq++08J91h1uyds52Hjf+r9zoqF
mLq/j7+74zxcy5HquPuoDnv8ZW3mJ9d5GJrS9REubMa0jR693n14Hmw13ZbE
jrVjL+7aDz/xmYfM0bQ747zdmCE/iV8xcB74VpYu36jowepO5+pnHp+Hz8nu
psLZvRga2O21EjYPZVfHoKXgJ/bB8vfFsMh54AYSj3HlT8z6eXLlcOw8WL/6
LDz4thdrk9Xoc06ch3P8WI/Gox7MMblt7YfUeYj3ku3PPvwN+z4bpm2QMQ9j
t+wN1aI/Y4fcpNxLr82DZd8P2wu99dgg9iZRJm8e/CezRQ6x0wl+W7yepBXO
g8aGyYbTvz4SJrK5vjPvzUMN73Vn/Tc9hBN/S5dDHs4D8eG7zyqlI4SFgH0a
/eXzsNdvMS9yYIoQ0T7vZP9iHqQllaee8ZEIzJ05se9ez4Of/lLf12Ia4fz9
nSXb385DfyuyZH9iE7gEB77ebZiHT5m51jLn/xFSzyQyxFrm4fftnqTk0bVI
4LfaxuQv8/CnUdrexY0PZVm37qN0zYOi9FHJsPWCSPLFyTMBvfNAmRebat4m
ivLlJYp6BuZhZ+/bkw/tJZBiyusWqz/zEOrOXGY8k0Lq7qvymsR5OEbSS9m6
Kocevy+2uEWeh0Oie9YxFhTR9q02/wky52F4Pn9OSVIF7Vy+1kBcswB+pcfJ
T/6qovogw1nvdQvAIOw/vHVQHaHOX1KdwgvwM3SnUlOfBrIp3nSsSnYBNpms
Cd+jvQ0ZFohqtCgtgNrRh0XTh7ejjVlL4/2bFsBrsqWlsFgH/Y394c+jvQBu
k1oCbyz00dSpD5vk9RZAOHW9l1+OAeoJqhzZvnMB3jzT0sUWDdGzA+k+HqYL
EJK0c/jDz12o0Oas8kmrBZCXHYvjCTBGaYSAwSS7BdCQUVXetroH+W0lHCl3
W4CXqo2kQ0EISa0hH1wJWYAhM8P61n/miIv5W1oybAESyls4FVgiIrHtu8aZ
BVjcJCxfpWiFWn6VHnCOX4CT2kHOH7xs0KuO6+JBFxagx8i15tYVW3S/KaEz
9tICWJg8GdvetA/Fvji0v+T6Aphpm7tvdnVAwWVWwrX5C5By1Xe558l+5HJH
/8vX2wtQ+OvWtn5BJ6R9WXgf4yGHr+hVKmI4o2HfBst99QugQ1QW05Z3Q18P
PuP2eb8A3mm3KkiLbqjWvvBDRNMCRKUc6or5ehDl7Io0vdOxAFJH7wfL3fRA
VmKaJoujCzBooHLjbKQn0ueVWeKe5vTroNiMWZwX2rC0pl5ufgEk1tVpHL3s
jViTA7vMmQvwaCg0bfK1L3qKXzPIE1oE65C+dBFdf1RQfZ7yRHwRXobNkD+3
+6PU8uNVuMwiBHILxC2FBSCffAudaZVFcDURvzT2NhBJhDG19houwv3i8NKO
pGMoWtlX9Y/XIljwrJvc9/4/5O+s6z54dBE6S08NhueGIceUNRk/gxfBoJY1
cO6/U0hjpoTcHr4IYy4FL57lhaOe6umG+tRFWOv+ZVdJaARqmKqjvU5fhGtM
3XY0GYGeKlzRrMpahEmzuQOL/mfQhaTt2Y8KFqFaoGHovn8k0nWI8M2tWASp
XnnJqrizSCnR4sa1qkV4JVLw2XddNFr3UvpTRs0iqHvqi5nlRaMh2Tc7khsW
4W1Aj1jFmxiUOba08l/PIuQfToi8JRuHps9dvGOzvAgaj6KU3qsloVn3bSEP
uEjgtJzVqXE+CfmRpNaqcJNA7tW07+cfSchebcJIgZ8EL/tn4j9lJiPV9EtF
4pIkuKa1FDUqkIK63L6eXNlMguhLClePm6ch64VqvjhNEpgmvPp7rjINvbtU
dJ+lRQLF7e8HppUvoUf1YT1UHRLcs33rPbp6CSm5eYSd1ifBxL/TehGnL6Oc
eeBfNCTBNl7NoeCJyyhho4TJrDEJdmZt0Lz0LR3R6tg/jpmQgMt7M6tmXwY6
4Tp6agKRwMGGMyRvM9AIsU0gwIwEEhfbRkeUr6CDaa9KRixIcOiib/Ot01dQ
m8odgo81CWJtpfJP1FxBpnWpPwdsSXCiY8LNlXgF1bj8d/qwPQk2yv5c4yaV
ibSJB4V+7idBhurUnZPbMlGtm8P7DGdOvvKPG18bZiILzPwMciXBY662hAjt
TNSx2XgL5SAJHm3+W1MqmYmOZOkMPDxEAkN5t8/2U1fQJGPztcOeJHAf+Pn6
WPkVFOGrZCHiQwLRkxfPszyvoNVPkswGPxIc+eKlvLqUgdJ1BZ5GBnDWs70L
YjIykPStfz6awSQQYlyeP7YuA91fw5AcDCGBauNvpa8R6Uj7BLHlWigJOo54
aTz8ehnVdo+eswgjQYHfxlWi3GVkubdvBzOcBCLiNfu/+V5CnSWdo+VnSLAg
Mixy/UEamox8ZycZSwJr6uxwscxFFPH75WpzHAnq+tvJNJtUtGL15GVsAgkc
xS0jVaNSkLRsvsKfFBL4BM22iTUkI4u6U7OVWSRgnCQkHNPlnGc3Bd8NuE4C
PqXdTz+Yn0NHMrxcZHNJYBR8uK7HLgZFeO6rT7jF8V+HWKyySSS6v6Kasb+U
BAnPjtW7nQxB2sHyaM0jTv3XRcccmwLRmw4xSvUTjt9IQ56fzI+ijnvLh5Uq
SYB2s+KCgw+iI/xUka4qEqg/UCsqzHVEk+EzjSnVnHrqli8cZZijFbPerXN1
JMjt+HtuS6MUfrn86++770jgIbD12nj2blxa6uN1l/ckuP9FzbclwQq/H1dn
xfeBBP9piezcpOiIa49XsuuaSJDurBncKOqK1zqUPfvvEwk+yzKz6R/ccYvX
d45uauPwm41Q3K51BO9QviHz4ytHf+sL4yrkjR9JS/98uZME+y6+GeI8LPHJ
hcR4k24SjIpbd+zhPoqf9jirR+rh6HW8WafVfxRffn9youQnCebinPRORfrj
lzUDbnn0k2DrrTAj/m5/XPr64f1Cv0nAU0ZrplP88XtspzXvh0mQX/xndNdP
f1zL3/p1xCgJRrKMMjsS/PGaNpPjGhMkqD9BaqybOYqbGxgo90+R4M61IxX3
5I7i7be3frs6SwLvqpknh/T98PGT643pixx/WRck+PzwwqXESPxNf0mgkmJR
9vv3Qbwby7i0b4UE/7a/GLO1csNzTm7m6/xHglteB49cqXTBXRQbUt3WkoFb
3EDwodIBXLLtCHc/DxlmHTR2G2x0wrtj6Mm+68iAnafkxex0wHO2ZHNNCJDh
9zvmvtakfbhLr1biCWEyXBDd6ab6zxqXvNi8sihKhszwZ9VpVZZ4t4Hf+SgJ
MvCMe4fSb5rjOaN///6VIgPzmE1M2EtT3OV6XmzSek783+81Y2sQLmGqy+KV
J8M5mytb//HtxbsW2s5eUSSDUE21rU7kbjy7KIguvoEMjVbO0pH7duLODlyR
+RvJ8PhWEjglGeLiS4UURTUy2HscE/gzpY93PTE6/WAzGRxNf80onNXDsw91
LWpokuHQwe8jy1q6uPO60LAKLTI82lY1KCKyAxer4Z3X206GI7xd6hES2nhH
4P3QNzpk+GLEXagRoIVnSe2dNdHn8HlnZ7Jt7Vbc8cOPkA+GHD63y4SSFrbg
oqfDp2x2kaH123r+zZpb8A4VoeB2YzIE+d7WU6jUwLM6Ho67mJDBx9Lwsm+K
Bu4YbxrwC5GhJemPEL1UAxfRHvjjbUaGEOmSd/1SW/Cv/VF+YxZksPgXUyje
tQXPTBcfDrEmw22zgIf5fZq4w+6n3gu2ZPhPteHyd14tXHjKavCMPRmWtkq3
JG/Yhn/NGznC3k+GH1y6w6fUtPFMy7i+BGcO7zKpniLp7bgDVeYQjysZTiu+
LxWibMeFil/0ph8kw6SP/oG6tzvwNmf7g2KHyFB6+r++stM6eMa/ie+5R8gw
urV2w6yALm73PMlFwZsMwReK8I0HdHFBb8Vv93zJkPQh2CE6SxdvE6px2uxP
BqlZqdb5Rl08o965ozyQDLvYpXqpc5z443MOusfI0Lcon75HSA8XkEv78vo4
Gbg6IjrEN+nhrS0b7faeJMOrG5Vr1m3Xwy9HvW1tCCPDQnnGJI+OHm6r7m5j
fZoMAVOZRVYaejj/d1LzlzNkoIunUIokOfHJVywPnCXD3S3/TYjQdPHLuhof
e2PIcHyb/dm8Nl3cdrjBzCuODNZKyg8N83XxdVmeDX/iyXDi7+jpOXddvMWE
gY4lcfQ33xmsE9bF0+ayMeIFMrxYym2DUzq4deE2k4iLZDhr/Ut2b+UOnG9f
Sz3zEme/UO4HQX3b8Ramn3F8BhkST6wPfj+vjaeVLb1Ze5UMNRYSx2yJ23Dr
g/k7L18jgx+TWsL1Qwvn5dF7LZLDmZ+LuNL0o61408svBjdyybAyH/5tNVAT
Tz0a/FLuJhm+1vl5/hDcgvO8v12pdocMDScuPVURVMf7TSxth++SIW1iJsAH
qeKV9cSRwgecedqJPe103YgfqSFISj4iA+vU1rjPZnK4ruFkefsTMtzZIT72
tFIK53uZZZFeQYbOx1pqLvUieNWz4Uiul2RoDx56/LCLjKVtuyzyrpoM7qUd
59P3dhO8nuiWRb8hw9Otfc80l5YI/A+Tfy68I0P90F9f62Qp5HNHbc/vT2TI
lf72Km9iCzJU+Npd0EYGyR0uugKt25BAQWSoWztn3pjT7UMdOqj6RvOdL91k
qLxr8jVjsyHKkAgzuvSDMy8tjc9y/XYiv2vrO8x/keFt/qjRhee7kdCVY//q
fpPh5lr+rvoUAhrhFy+IGiFDXEpGfiWvKapJq9XVGyPDuPmxMQdXM+R/QcD/
8TSH58g2NXNhS1Qb+7Qpn0qGjZFKtpeZ+1AW09XbhcGpp+7aWfVMexQQtUwX
YXP0Cp04jLbtR6Kn92+5uMrht/G5RbGlMwoKWUw/I0CBM9O1rRfHXNGeyZuq
OsIUqA2biFfsc0PigaZvZ0U59/Wf5jb8OIje+V4nHpWmQIOQgDn/pAeS9DBw
clahwOP88vc6wV5oumdgSkiVArc75T5OFHojzCU16ZM6BYxvr0qo/fJBIY4/
qpAWBb4lHTH2qvFDuFW09HYjCkR+rdZjJQWg3I8qz6Z3USA4Qe6MGQSi42at
VqV7KBAg+m6P69ogJE2Qj1Y0pcDpHp52yZvBKNTwbZ+APQWeolCx78vHUUPX
j4ra/Zz4A1O9pKETSOY/UuIxZwp4pFy9q9USit4/3KzRfJACqdfWCOuV/oek
ZLMjkvwo4PUg983GrnAU8qrcSieAAmcffSmJcz+NMKdmuaEgChzga/yvZPg0
Onb5L743lAJrIt4KxP6NQG/ZgULMKAq4JL4/LucahcTzE4cexlDgfGudfQ0p
CgXpF1a5xVFg7qXijO/1s6i+ozqVO4EC4ccKlZWNopFYaKfHyyQKPBeba6IP
RKPAdbNaR1M4/Fp/1ytfiEF1JTyrYmkU2Jm028paOhaJmqp8wy9TYCZlbr1p
ZiwKGDQu/e8KBaS9IwIWJmJRbYxbtFIWBWJzbX0Mlc8hEZlTdl+yKSDxamYP
ffs55F+VrnzuBgWmzb5pS0ufQ284H0Oa+RSY/HzuWOSXWCQ8i3/8WUCBdT1H
N7CdYtHRtL78tNsUuDOz5uLFohhUo0o7bnSXAvw3ejuWK6OR0HtRwvh9Cphv
EWF8Tj+L/Dy3it8o4fATNiZ2749Cr5kWY2ZlFFDR7ngTzRuJfHVj0+89pUAG
S9+31O80qv56w8vxOQWyJddyVwuHI4Hjz3VWXlDgWFqE3NC5/9CrB2M/jtRQ
gH4Zw+bjQhA/Wn0sUEeBLp5bI/nawci7X+587VsK6AWZL7zmD0Qvzxo4HcM5
PE91l+6R8UfrpBxV1zdSoK2hRJvPzA95VYbQmz5y/Oc7UCy83htV2ae0nmnh
9MP4VuJJ4mHEN110W/UzBZgddbaqQh7IM7U27NsXCjj9jvJQj3FDLzZ+N0vq
oMDGzXy8x41dEC82L63zjQJJwSXlk27O6Mhh/unf3yngiwtbbHmwH1XSVd9m
9lLg193Oi18D7RFPDiFrbx8FtOa5up5w2aHDOw4dnR2gQJBob0pgxD70vC3C
8NYQBQpsT6Wn2u1D3MeurrP9w/Ff7Xfbcv996BD3437GGAWqGMEWb5/uQ8/u
fXj2cJICZkWZf++st0NrTX4nuc1weFg9XjTMtUMev5iu3EQK3LikXBoiY48q
IiW3vFyggOqq0y3lK/ZojcT2v35kCsyblTgbT9oj92c27WI0CuwmnrN/IOuA
nu7zv48zKOCTv0dor7gDMtTehIBNAe+cgZrCL/YIFx0ZeL9EAakshdvbg+yR
DflurOkqBUKDrpwJmLRDXd+9ZRu5qECS3WFq4sTRW6P02oybCtpla9fU3tuH
RgsGXD7wUiFRTKCm96ctCo0rJJnzU+Gem5lvAdMG0bwPZ30UpMKuqKfLy6vW
KN5UTttShApN4TZZPAtWiE/t5+cmMSqY2spIVzZZIvlpN94WaSqs8UP8FyzM
UXGbVIm1LBX6btYrO0maIe1n3aaf5Klw7vqL/34NA0IRzudbN1Ahz4g0pV25
F31yE1PYt4kKlEiajs1HY+S8q+PNZzUqOD7Zm7iGvgv1yV89aKdBhXXfmn94
Wu5E/sv21DZNKpTM5xi4VxmiuSHB6/bbqFCzUlxA2muAIhs/7/i6nQpV648d
aR3RQ5fSbE6063PWuz3Vkvy9A4kf5+N3NKJCoHriwNhzbVRo3/ywYxcVriuY
6a5/roXUdqRaOO2hgsFusuaTfk1UIW7xp9OECqvx15rvGG5BRtQ1ic5AhYhZ
RT7y280I/9Gg9M2MChMJ+bMPw9WRTW1i/QFLKhTv+Rfx1kUNdRWiQ93WVOAP
/7y89rAqOhy/QnfZRwXP179YcHoTGvV9d+O7PRUeM8m9lMKNKNQ8Ts/NkQp+
p7R27KpQQTT1PZ09zlTYMJsaEWm1AcWvY5886EoFLl/quaI1yohv9o1g70Eq
bOuMsnk5ooiyv5597H6Ic20s/OvlqAKSrzSy/nmECt13a7TvrVNAxddpYx7e
VNj8L9Iq2kkeaUe+Sv7ly+F12EZ1b70ceu0eoXLYnwoXKrd/nLWRQ8hYD+sL
pMJaLk3NNJYs+qRIOnLkGCfefucBka+yyHn1Oav/OBUkrx9CSR9kUd/If/me
J6nw8VvW4tCALPL/qG04GEYFFZG+wK1ycmju4dw3r9Mcf8gvHrt7Vg5FXi4/
9fsMFWxnVE/ZDsih1RPHRXzOUqG0S3Ajz255dGm/5tOhGCq87yw79y1THonr
Ttn6xlHh7CQj4UWfPCqULJscjqeCuMyS9oMNCkiNHpjql0SFY56vUks8FVDF
TzXVPxeoEFynkvYmWwEZ1Y++P3qRCiY6pnq/MQWE33ngPXqJCo3vpNOkxxSQ
TaLfkn8GFQT9i1K9uRRR11GVW2OZVNik0q9dK6OIDlsO7Qy8xvErtS1BXU0R
jWoU9Yxfp8KlkVPnijUV0UkBr4igXCr0j7eq6GsoIvqcgvhkPhWoXL1h3xUV
UW7R1Kc7t6igoRjQVLROERk4VSe63qFCarLuYelZBdTNlbxL8B4V4uNncnQ/
KKDTL/cvNjyggoAq0oy9qsD5PlB4FF1KBSuXIPVuewVUKTPls+MRFaxFfS/t
XZFHjp9erZ94QgUh920HXj+QR/MxSR23K6jQvLUtGYzlUabW/jSXSirIpe+V
7/8oh7YNyiOBl1TQi0yUvWgmh9quTtLfV1NBZC7vvOlLWXQcXj07+4ZT/3yC
rfB6WcRPTgzaXk8F7/N74qZPrkePih2Ux99RITO/VfpHjQya4J3MPPCBCtlh
XueH1aRR6puXlvzNnP5o+9utWEshteOJy/gnKhyM2pO4zVsSfVBwqI5q48yv
ieG/J4ES6OhXuZPa7VR4cLnY/4eLOOJKmFAb66SCQsKKUKGdKLqn83LgVjcV
jC+7Rr2rEUK/c+zt1/2iwuyN4T28w7zovKUcN95PhSXVW4N+BWuRImO8PvI3
FXT7FzyqNVYJ9Y+qIraNUKH8bMxN2SIG4fDhBK3RUSqwbR6eM1OdJ7AE7UcL
Jjj6OrlNpLl+EW6+ky10mqbC7oOtp/RaW7EfKlUC2Dxnvl/9JKxfYGCR3+Ib
z5CosKW43/zXTy5cKsUuVotKBeXI9SX6F/jwA5Nj0zdZHP2Cb6xzvCRw0s0X
9x2XOPVpcR+3KJXGr+2LP8S7SoVRM8rYRSk5vL1ifWsENw3WNBrdTQ9VwU/6
jCVu5aNBtV6g8q/yTbiQ+ItdI/w0+G8nIUr+tRq+78y+R/tFaaCaM3j3iqAm
3mx8Pk1Tngb5EuavYv/o4oFztmhYkQaHHP9Z3zXSx7mLZBh5G2hwtuiDyfs8
A9yMqzKIW50Gx7L+Lj8+txMfqYpTrtegwTKOb/jybxeeGGD7I3wrDQw2aB64
c90Yx1r+WA7toIFaanr+6oAJ7hXzfDlXjwY18t+4ZnIRvrQ1rtrekAZy8Tvy
Creb4sZXpdXrjGlQ50mqduE3x1+72nDnWtIgihGjOy5hjV+2r72oZEMD9SeU
oGopG9zLYiv/w300kFU4dpuqaIuvNRASqXGkgVBc4ct1pna4o2Tn+l+HaGCm
VGKb8ssR3yRoesvPkwbDzkYK4+uccdqaKsUZbxrEvQl/x/fIGb9Nztn4158G
djcUB0mLB/CwGe6SC0EcvbcepLbdcsHN/0RuFgqhgWAB9fgmU1dcpm/i0Y0T
NCgvv18Z2u+KT3e5ayn9R4Ol5o3K48Fu+NvWTxWlp2gwokvKax5zw7Maduts
j6CBhsGVFTung/jR2idVryNp8FUqbFflo4O44QsFQxRNgwQFmS3b5w7i6x5f
qWmJpYFf1nLlP1l3vP/e8m6n8zRg1tx/fVTbHX9+87+3PxNocHkgXjFLwx1P
vjZE8EumwUUL8eb3PO642yWnhukUGuzY2ZOn13wQ10xsMD+dRoPZv1anNwQf
xJfO6jWzL9NApu/PnsYJN7wjrNjmwhUa+Mqp97qZu+EPgqXaBLNoUARn91Hj
XfFIn1SHG9kcXk0xb5bKXXAFx+ADpXk0mFYbe2Aw6YzPW/38rl1AA+czdR3R
C054A8HW/XUhDZQiVTSucTviwdu1PFvu0WDXeIaPkaQd/kp4IXD6CQ3MZzqp
MhLmeBqP71R4BQ0CDexGJBVN8SPLncfZz2mg7Jbxsc7bBOciVoUJVtNg/rLt
4MlVQ/z7mCo5p4YGnLlVc0vUw8sGbpxRrKOBQyPlsYOtNu7wJSpGG6dBxdBD
29zXKrjKx8m/1Q0cPrKuDewwaZxS7xFP+EgDo4r6plFRHrzlZeu/5mYalJ06
L1x45AN2q9z4gmMrJ9/YlJPAyX+Ek8XlPD/bOP3j29Md6SWKTAsVL/m204BK
CWpnu8ggqZxMgelOGrSmGg0HGymgyfSVK+HdHF5niMuPGpVRXXKYKLuHBuEJ
c6ljYyooM3Y4O/knDVYrP8+qWG5EvqedpQT7afDqh+X+sUIVpH+8MS9nkFP/
AXxHWLsy4j2qL6c4TIP+0Fcra08ro1+HSgpL/tDgn9Mus+6cDajCWVpZe5xT
/zT9x4X0jSjR9uK96kkauB81jhkLUUXdPiFeujM06NF/wJRqU0fqUfbyFXM0
+Hw7r1+gbAuKvrKjd8sCDa4tjfO3zGuhtgcSN0pINHjwzPvE///fqlRLc1Kh
0iCE79gZO3M9dKrjp/BtOmeeTda+6jligKSXitJy/tLA8MzqRbmvu1CwRLKF
6AoNxLq2r/kuswfVbQnkyvjH6f+8VzvVzwT5uGmdS+ahw4+sbdKvw0zRixMi
u1b46DBiHeM0kmiGuJNJ1BgBOmB7pW6/v2CO3G9+f0ETooMSD0n3xhkL9PhZ
zX/honT4vHOt/W1HS/T34y0tojgdQkIJanLiVmh///mpY1J0CDPOo+6rtkL3
Sb6lYzJ0eLxrhR6+yxpR+CyO+srRQW0lJLA9zxpZKmtsGFCgg9OmrzH3vlij
mwYCA+7KdPDcq/Dflh/WaHYf8Wa3Ch2cR63jHj63RiZ+nW6OqnTIfmb1+7Cb
Nco6+1KiTZ0OloaC7akfrNCfzLwOqy10MBS5nBpMt0SGJTFXGrdy6j3Z2PGX
aIHS6jxtCdp0iK62Nz4wZ45+dSLeuh104P7k/CGG3xxtm9z0wVCPDok/rxNz
zM1QwjJP4gsDOryX79rTeNMUdUlO79XeSYfgxq86m/lMkerWL6xHu+kgzJ1z
p0EWUBQ8f622lw51CsL6mo4ItR68HnGPwOGnl7G56SkBKZyM1FE0pcO2Z1nn
f2oT0MkLHsR8czoE0W+bPGw3Qe8L9jyRtKJDcrhhaHiGCZKsVA7OsqFDzMV+
kfO+JiiwmUtN0I4OyrfFtYT2maCagbHhiw50UJU73OxnYYIEKC131jjRwS9g
58R7OxPkxV9+OP4AHUrHtK6Fepqg5xuurme70uH5v9rWstMmiMso/HukOx1c
NgTcrE43Qa72rtmkQ5x+lj3l+nXPBJUd3bn/pCcdXqxKC7q9MEGsaHnBaW86
kK5uqgt9Y4LsspZbAvzowPPWVcq/ygQVlQ6nDPvT4Qlx+4ZzhSaIVP/B1DOI
DuXp+sOMMBNk/u3hSu8xOtBYY56K20xQ7tTlepcTdLB90HRL68teNLUSGt1x
kg76M+53j9nvRXuknQztTtGheJfyKZnHezjfR/rk5tN0aKHekoj+bYyGTGWe
m0XSYUeq05XOqd1Iz4N1AjtLBymnhj9HP+5CvSn4eHUcHR7olv05ts8IbS18
8EA3gdOfm3Fc5SqG6PyLVJ+KJDoc8K1YGFprgDb9tvtVcpEO70SeeY0s6KKM
D3srD16mA6HR2H1Nsw6iPNJOW3eFE3/Qbd+7T9vRhwhRw9BsOnz/mLX/PyUt
pHXon6DyDTqk9h06+fmkJrpBIP3pyKND/MGXy6E/NFAgf/c1/dt0aPp77Koz
UQ19nf8QPF7E0eMXdptVoIqMvr8i5N/n+PHhoZ2vjmxCd2tLpW1L6KA3tRT4
Sncj4rubN8d+SIfrGUe8DhluQGEpaR+ePqbDeG2K3gNtJfQzJPqW91M6xOUr
ezyyVUCPDQ7bNL6gA5+zQ1vKxHokLm+34cwrOkyWGhloBMig2NU9dPUaOqwU
7FbbsCqFRse2fe2tpUNeyL9H36olkd1npZLLbzn+PGDYWXZRAr18LnJuD06H
qKzkMu5T4kghd9WZ2MDx/xvV6DtDouhC7OKWux/psHNOcXefgAia8xlZdWqh
Q6/g6iLPISG0I+NYzdAAHdzUv6VHLi0Q8k8dupo9RIcvk+95XCzHCP/c9gWa
/6HDOSfpZtVf7YQulW2cEwQdsgKl+ug8I9huXqUZjxk6nBTl+aqRMIfdnxVu
ECBy1ut/WPvWlYqdfr3w339kOtQKbfd/9W0F6y8ctlShcfr3IHzNA+c1uHlS
l+I3Bofn1pjGZxnceHlQI+UCmw5rkytDrmXz4pL2Lz8bLnPyCd4K++G5Dj+n
W3J/cpUO5ze/sROb5MfHZHKjC9YwADPMjPyqKYg7LKU62vEwoPxmYcAdZSG8
eiRq8zIfA75XBl4TxYVwpZbg5WcCDBgbOnnqJbcwfvGpx3dfYQY8u2gUJzst
hC9k25ZLiDHAjddMqz1QCHc/a5z8UYIBq7gEzf+MII57ah2KkmZArHruMK+0
AK5hpqizRZYBYjH+HWP4OjxLQ5ivT54BafVTn2fv8+FMoZXBDCUGrItfQ7j+
hhf3I8+/MlFhwHrnqzn7uXjx1t6hjIVNDDBtCjHKj+HBdd91Hr2vzgD9E6ez
/yjz4AUPGna7bGGAeneqaNk8N851qUqMR4sB7ZlJCkcmuPHjJ4snX2sz4J2W
uUrkWh68+8AN7JgOA26aPLp0wpwH37MrNVdenwGFLlfxV8U8eK+//M4iQw6v
S7YKZ2R58TNZz39u3MUAA32Nj+KlvLh4vUVsqTEDBF+Xb4y35sMrJn4paJow
QO3MkcLHy3y4rUTYu6eIc7+r7mZK0zp8woTbR8eMAYd19iet3ubHN+Ruf7DT
mgH1SZuq8k4L4vXvP5jX2zJgj3Foa06oEO4x5zFOsGeAbvLfEPJJYTzb/MIW
K2fO/vZLY7nxovhacu8z1yMMCHLmEvRzlMDvKp10+unF4dvLChD8KoHvtV1D
PuLLgOAXDzdusZLEf53Jzxk6yoAu8c9nntdK4pH3thn6B3J4aG6+XrBZChf/
0vBjIpgB/7aer/idIYU/YxyMPn6cAb7W2eyoKSncTnVObj6UAXaVahWH90jj
k/uT6sPDGGCRz2ImXZDGL8TKeNHCGSC6/Zv4OC6NqzwsX4k+w4l/eEorbkEa
f9cF95aiGPBaNz8Gicvgh5Z7TBNjGPCEa52OhpoMTt9yYnRtHANmrFOTtTRk
8BzXfylp8QwQMOoqsZCTwXck5m4WTOLwWq74fJwljX8p3/rp6gUGnO8c1Mhr
lsZDevEQiYsM+Du0aRFLkMZ51roJ5l1iQIcXch9UlcYfbJ95KpfBgIJztGvT
L6RwdDhh/51MDu8TfF39W6Tw/lSpRZVrDOj12mn3NE0Sj37xOLvkOkdfqrW+
C4en9CBBf0suA5Ql2W8/McXxF+u+fy/PZ0AT3lm0JCaOOxiERO24xcknUiC8
7CeKz/isrH95mwHcXQGBPG+EcdWaLUfq7jNgnvtwI+ueAI7/ebdkUsKAoSSa
yzc9ftxTxKWo4SEDkqxtUtN6+fDcwPMjn8o589TEGPJ15/g9W+KC/TMGyKc3
54brcuPtb8vUOisZ8LBCh3uX4lr8xNTeZpeXDOg2Cgvfun4Nzif1Lbi3msNb
q14V38iFF6Ng/iNvGEDbeKuhN3IVgxNLT37XMaD/17shx+ZlLKZx8/w4zgBF
9NnIro6NSc/XZ4U0MiBwTf6lsiMsrErOWZf4kaN/eOvzbmkm5mg58e1UCwNy
RxlGbyfp2Oypc2eorQy4LnvqqUMnDUu7LSYT/YUBPy/z3D7TTsXUPpXW/G1n
gJPZ1utKIxSsgWJ8KKGLw8/BScGQj4J5behkr/nOgL6a6Q9liIyJyke8fvuD
ATdyTZ91xpKwRimZ01G/GMD7byan69oiFilaq60zwIC1js1H1JwWMA0Bz+np
3wzojPj6u2/HPPaLe7WkeIQzb59rbXZqE7GM1fu+XmMM8Ki0aDpnOYeZsC0U
108yYCpJI3EmchZbpE72dk4zYN9thdKm+hmseCE9J32OAd6efT6OUjOY24y2
o8UCA1aUlQZa46YxvvFOgRUS53lkesfyLHkKqx2KaK6hMiBrg9SngtNT2Ik+
meRwBgP01u/JimBPYso9tSZabAaUpLQ1W6VNYhc+r74qWmUAj6GI0Z+SCcyw
6cEpjzVMqNDVb9quM4FN4ZbbJHiY8Hl9WcT56nGssG5qso2PCcYWqifF9MYx
h+qM4lQBJvRJ+g1qFo9hq8+3+yBhJnwZlVsU5B3DXjzpkmeJMiFEjK+L6T6K
+Zee+VElwYRNjJFyvbw/mMy99ddDpZlgQPV/+vfdCNZ6q85hsywTAuu4leJu
DmPncr34h+WZIOp4b2P0xd/YUHpxoosKE1BdwE3LsV9YdqrVXmFVJih8jt62
/3AvZpE4zWhWZ8LJyX0S1599xx5H7ggz1mLC09iVbRF/v2BHTn3bStVmgu3R
W88erzRjIiciJyp0mHD42rvqwIr3WIRvvddGIyZcISdO/+a6he21s7ZfZ8qE
s/f0S6r2fCIsWM7wNZoz4URQrmT/UDvhPmR+OGfFhOHndWpLhG4Cj1G38YId
E6JXV96tb/pF6FDx0fxxkAmz/6l8L8kaJSQprBnPOsSEqRcpmVKrYwQDmdJ7
tp5MuNkRTj3gO0GYFLPxXOvDhB5GKHx7MUkoEJxd/86PCZ2efx9xk6cIdrxX
u6MCmPB8x4NAzw0zhJV/Olk6wUwQLJ6osNs1S3jxt3vfTAiH35RDrcWeOYI/
PYq3JJQJGjpeeO1mIkGaJNfoFcYElYoChiKLSPg0+/b8+tNMSLt2qWC4cp5w
bsJnd9cZJrAFnw9E2S8QtEfW0NLPMjnvv+tM588LhKH+0kqLWCYcyq5RG9uy
SMj+YRO6Esfxy0rxzbtBiwTzrlmNNwlMOP95IIOetEigt10dDU9mQvzmScMj
MYuEQaEfIcspTAjNpFvEOy4SPjgoLV5KY8LvHdd7n6xdJDy5GhAllc6E8et0
kTs3FgjZHeVLd68w4doeXyFxrgXCWTFKslYWE+yfC5IarecJ3s7G/DXZTLh4
2vD3f8FEguX1pCyzG0zIF5CndXrPEbS6P0m35zFBdZl2sHTbLEFcSuz2oQIm
pOezrMe6pglMV/dN44VMWLIJL90QP0UYyi16dKqICcKtX5+BxSSh6cf49qV7
TDB98KLDU3WCUL5euzqtmAnS3njEZflxwnWPM3skHzJhx8UC3oEtY4SYgvqG
okdMkCr9QwlxGCX49K2x2VrOhA4LkzKbtD8ES4V97dUVTKhbsLuS2TNC2OaZ
7WpayQTY8UJk/84RguSdn31fqphwTl5Zn3BwmMAa3ODnUc2EGU0J/e1HhwhD
ysGTozVM8LybTMnN+k1o9nl2MqyOCUVXX9ndGxgkVNyjUdhvmWAkRJSIth4k
5Izsjb2IM8F/W7iKTfsAIWZTyj/xRibQ1ly02xM2QPD1b7t45yMT5otPnYjb
MkCwLpEQ1mzh+EE1yt2I2U/QHj+U86qVCf9y+ydyBvoJkpvvy8EXJpiJTizi
3f0EdtDU3bZ2Jpwq7rMf7+8njJTt2OzexYSHQStd2yn9hJapqKd/ujn9DM1z
b1k/QKjQxPT++8EE18+Tr35ZDxBuHOepZf1kglrOzoZrSQOEc+X2KLWfCQf7
P7us/zBA8JvLaRL7zYSx1xPmNwUGCdba/Xa3hznrjTuPEQ4OErb/t+mbxigT
hGK+FBiUDBL+LlT+JkwxQTJW/Pxb9JswosMM+DzDhICAscHiy78Jn8LRrBuR
CQOHf5ddbP9NeF51MXxkgQnh4RZVWUJDhFzKV0YombP/2yPfp02HCHEG0vFM
KhP2OoaM46FDBP9IT+4UBhNeE6re7s0YIti+Lk4XZTOhuOicbkbhEEGHMSNW
uMQE7QsCCj841+t36eVvXmWC179iJ5v0IcJydIxSFRcLvLdmPhYKHCKM1b4v
NuFmgYC04LLD1iFCG5tvaysvC6q/H9208+dvwos9jpWu/CwoOP9rkRz6m3Az
Ls9oWJAFJ1RfoacTg4SEd4NvT4iw4GTfzolM80FC4IqaOUOMBZI1j+sbOTzt
UGhrsiQLDL7uz4+820/QS3zpKCLDgv90Qp26bvUR5BrYPQWyLNCjWWH/wn8R
VrnMPNUVWHBGnUt1nfpPwrjZ5T+VSiwIPUv9ldLwg/DlQuexvSosWBfy7rGp
XQ+hgMcn0kWdBTEeqR3tmt8IqwGyRt80WEC8pXX3ilgnIfBjF91pKyc/l27f
18ovBN0LFtH7d7Bgn+e87aWiJkLrP81ztrtZMJnx9Op08EMC8y81ETmw4Fnz
51tM+6+Y15FnppgjC/a+xC/HundhH+qC15gcYEFnfr6YdXo3lhXTd8HYnQVS
2SaHnlB6MQ0GftHQjwUY0/LLE3wYcyenX9GKZMG17JdUYetp7J2zhcOTsyww
OeW62Gg2g6m+WBbWjGVBvVkoz5Hds9hC2KmszQkseFq/cqxYmoi5dWg6lSax
4JUPUzuDTcTqt4+KqaWwgJcUxPr4cx67SHS7vvEyC8J77127k7CIzdqLutzL
YIGmND3EWI2EOT/9JLnhKgsUq75z86aQsBrB5O93rrEgNVmIkTBEwpRO7MlV
zGFBkqWJcpQRmfM+proV5rLAsI7X4/UlMjat+UxG/iYLjO6tSxb5Qcaqp1Ru
rr/DgrdvDZQIfhRMwabPI+8uC6jhRbYviihYUlmOnPQDFhzNxQciflCwSV6H
vpwSFlyc2PnKZR0VcwjiLZQoY8FVtbIKZQMq9rIJP5L9mKNPpOLhg0NUTE49
RlHsKQsCA6bjKqKpWEKK3uDVZyz4NfZXWDibio2Pzt4RfsECF8eUnVkPqJid
ean3lZcs2O6/qZergoq9eOC9QfA1Cx4PRX7Wq6Ri69fIDl9+w/FjivLCQjkV
O+/XdW9dPQuqRN9u4rtHxUbfp/ulveP003TezOoKFbNVsdjE+54Fzb9ctc+d
omLPE5b/pDSyoCkvC4+wp2JSQ6+L1zaxYPcuQu/yBiqWJRwf/6aFBbNPe7Zw
TVAwwb2Wh05+5uRrMZi8c5+CpR0XMtj0lQVm859kbhygYGsLukV6O1jAvrxa
X8wkYwktt6YzvrGglsuq/0oOGftL8/sIPSz4+5Y/RlSVjJ1V07xL62WBheqb
gtmHJIxyYDHmSR8LRG9jpiPKJCwsqcbVZ5AFbxSlZnykOP1/Hr9DapjDp0n8
tG73PPZHSHj8/DgLNt9+zPsf9xzmtec7rjfFggua+1pW4mawXyGFtyZnOPe3
++3slpzG3G4ejbxNZIFn7dPJpK5JrKtZ08l5kQWLFxzmJl5NYA60xa28FBa8
tgo49PvtONaq+oannsaCoDpxc4upMczyQMJwGJMF3/Oj3lENx7D3iVb1an9Z
sJz/cqCtZBTb81w479cyxx8R069K9UexmsHvp67+Y0HZn12HvUf+YPpCt+3M
17Lhe1HjcNfTP9hzY//NTB42YL5lngM3/mBaIVu5KtaxQXKE78+hm3+wsnxS
v58gG2p/cqdufv0HU21+81pGhA0h/7BDysQ/WBE1IbtNjA0/xdzPKO0dxeRU
rUMTJdnwu5E4tXp/FMt1FrE2lGHDyY7itvtKY5h4Ys/GGVk2mC0U6AxVjGGZ
z24vFSmwYXP/otYN53GMf9C/10WZDV/tWrtu801gqYJaVes2skGWbW7U0z6B
xR2rDT69mQ1AfpBheWUKY+QlmmlosuF5xacSw8RpLKLJWmlAiw0oXfJrU+IM
dmLTj2+WumwgXyosNCqewyad7lSw9dlQqCh/vKORiPknBFx6bsQGw1dwM3pm
Hjs8QDaR28uG6OmUKiMNEmabJ/p4zooNEf+EzkZx/Nb08ceF+7ZsUIl8HZVp
SsVMKXe8D9qzYbH9NV1xhIrtctom9d6ZDQ7Fy3e9FOnYy3jK/BlXNpT9CBic
eU3HdlTUtWq6s4HlG/Dh0X4G5zxhm5DjyQbv2ZMv/otgYsW7xA7b+LBhT8nN
rwdWmdiG4F6DZT82BKnfqdtwkYUV5haJVgWwwbQtI9mcj42t/xg4ExTMhp3k
Mzu2JbOxHPK2JoXjbHhCP9ZmTWdjohupdztD2bBsEO3L7f8Xy3Csj00NY0MB
/0tmR8tfjDc+2c34NBvedWoWyaotYdVkIvv9GTbcbcmUEzy9hAUGH7pnfZYN
PL/ut9ypWcKkBz5atsewYV5GbPUQdQlrctKZdY3j1JeTLNOqsYxFNhVe64//
v5+KA844L2PqxnxGR5PYwJWtCOOnlrGeZ6f7py6wwcbo5mpJ6jKWqvo7Mewi
Gz4ffc/am7WMGd603Uy/xIbbW1CqUeYyNi5U3RaXwYbpAowpn7CM5SaphK+9
yobWT1NPIgKWMUt6hkz6NTb4tgSTW/cuY7TjjHqxHDYQy8bVy/iWsdKho375
uWw4Gid0+8bHJczNtZ1X+SYbqAcvlitELGE8rbufltzi7Ge7/KRJgqPfpNRZ
6w6HZ7ACSaH4LxZYJcZ4cZcNf9+nfy9T/YtJa8Td3vWADcEhtHJyDhtrKpw0
xUvYMHOapz2VwsIixVwmLcvYILMQkD1jysLUU7ErXx6zwXnxnf2TeCbWw9LU
c3nKhk2X6w7uf8zAUv7L7f31jA0ebdy8vg10TH/0X5zvCzZIt1q9ONZMw0bd
QzdNvmRDqvoimVxDxcxNzU9S37Ahb+f5+LL7ZIxS/UziXD3HnzcObJR7TMKK
t8q/4cLY8CVmt8726EVsrRRpjegHNnS6P7oaIETEXl7yfJTbxAZ/lY8NudGz
mP9yi4PiJzb8R9uv1smexiRP61MefGaDHG06P+v6FPZhouim5lc2jO41WnFE
k1jEEQFCZQcbPs58/1/F5R1P1f/HcdFUKiqZJbJCkVS+9emdktCiqexVkiKp
RCSS0qCyQjIzsnfxuTY3Ky5SdlZklUTuOfee3/n9eR6f9X693s/3+/M5u55S
g1j6s0u/RjOtV+yiQnnrAPYuPKJy8Ms88LqNZi35QPcblQLWp6/zIDAosXJV
TR/uj5F2Neich55ngcc4Db34pfBzyfbuefjpJVoUr9qDDzyZLzftm4eMDmGF
FXldeJqysRvsn4fOL7XnlC504liXJoErQ/PQl3lbgL2hA58c3ZPz+8c8+Maa
r3Di/YYXmCUauf6cB8aPyvW+fF9xJkuIyx2fh4GPo9Oqm9qxxWHPON+peRg+
u9ryyoUveHXxqO6KaVr/rJuscnobLlU9M/lyZh7yWq/wXRFvw04Jpa9E5+j8
KssyNsa0YikxZc3o+Xm4oTkqcmBfK256HtojR86Dpwb7y6ffLdiLj+9BGpfm
xTi8KP1jC1Z1vaa4YwEbOn8s9x8JbcF9498aP/KxYWTNi0WOj1pwoOUhF63F
bBAWd/it+aQF7/+SKcpcyobju3tXa71twb/0JUqOL2fDg3fK8ncrWnB0iZ9N
mwAb3kaHzPXPtmCDHX+Wmaxmw0VL80NXd7dinmSzjH4hNnBkPrUI+bXi6vH2
a2/XsYEv+LL+8GgrfqpquNVEhA0DxYtNQ8+34ZMutRMi4mwY9/iP2dbahtcX
Hkxrk2TD4Y9Ruoa0P11EscNLKTa4nm4I/zDyBcfCTuUTMmwQ22bhzvBsx1tr
FN4zFdhgs1Wsw6T4K57hj7X3VWJD6fqbzWcsv+GPx8W3HNjKhqzaCL2UpR34
0BeB5CJ1NhQJ56ZvPt+J+cX87Fx3suGAy7e1KVQnbjLlUdDQZMNS2e2TenFd
2GRo+l36Pjb0Lh0aD+3qxtKKDhevaLEhmufGkwTHHjziMCSroM2G4taIgKfs
HpyeaTY0qMMG/0vzeaR7L74x0x4fo8cG9QjZooTpXrx7t6GN2VE2yCp2p0Vs
7cNc91oZ8RNsiC9QSFE17cOVJQcH2g3ZsNW+PPPygz7sz4djg06zYVJt7m1U
XB82OLzTyvAcG1bzrD0r/7EPCz/J2LTyAq23yjbLmOa7q1Hhe60JG7a4aAa+
qu3DsUKx0X7mbHAjO5vkKvqw3VlxC20rNnSdCDe8mtmHt4YHbVxgy4a75mW/
GC/68Ey3QC++xAY/iainNy724Q+b/KLc7Nmg4OrBN6DShz1tecx2XWXDhRqj
S7WNvVg7+Y7kjCMblkVPzcZt7sX8E9Ndmc5smDY578xr0oObVB0ir96k+ejb
FhJ8oxuHuAwZb3Gl410hsFHAnva30Ez8hxu9X6X/J5F9nViabO+I82DD49ED
J+0mv+ERMAy38GIDpc9n1uD2Faf71J6X9GGDgH5uQR9PO3apOSja4cuGe+UN
M2rP2zB1fGfYqSc0T3VTnx8xWFjYTDxEJ4QNu79/Fqweq8VdMUFn+F6zIacj
ad7rChPHDgmsK42g/bql6BM7X4VVrvIEacawIeLn05GVWmVY++7QC+VUNhBm
YX99/2Vi/lIzw9F0Nly7rVMQV5SMm/i+rn6XRdfHzTM375fEYOMntQEbC2h+
ltqOyITewM7hGc+EytkQVG11rNc1GRWQ4X7llTQf6hVra2syEGn28L5zDR3P
v/mfI1PZyE/G9Carng3bW6/JZuYVonpfXUfvz2ywFn/h5eFYhIRG1C9vZ9E8
KckbTwgwUGQqv+nLdjaEib/Rtblbhr6vnD17oIP2/z53Niq2HMld/24w3cUG
g9fmwzuKKlCmRqH2yX42MN9ffHy3ogr9DY3bxzvEBsVnGUg9pxr9x36+O/sH
nZ9JtONEcA2qYtgqC02wIYZyGi1V/YT4NxnKlU+xQSikMEn85ydk4LNXynma
DVFuT94PBdei4CF5Mem/bPgmtcd504461HF4zVrWHBuMSBGP5so6tDGFK+DN
pnn0unX03+F6ZLPi55LtHDZobUqwCMP1KPla24J+ig2LTs5q5so2oMmmUuIF
LwGaD4uMjns1IHX11L9aiwgoVtNBlxsakGtw6NTvJQQM1vy4tESgETHmvEdj
+Al4XPzbSAkaEd+FawOGAgTMeecFtls3It3i890LVhPw5fmDgJXujej5hkPt
WUIENJ7KbGM9aEQtXqrNlusIMD/kPyB3vxGJDIjXCYoQINNurSng1IhMDy2p
KhMjIOPu83OPDBtRbOI047okAUnJxoxw2Ub0Y1lP4SYpAryaJSZ1xhuQssOn
7GZpAjovyVwKSGhA1xtzU+/LEuDUV5p8y7AB5atGv1NTICAgXWcnNVWPyJdP
or9vIWD00OJnSvfrkdbfW+EvVAj6fjPcyl1Yjx6eswrSUiUgMco1/I57Har/
cOz57+0EbD/caBg9WIsEJTQfxWgQoOsX1+qyvxad9dzsbbibjoelFzf//BOK
6Ft1d8EeAkojhfapNTFR3wHiZhYigDA6IbthIRPZL2FdFjxIAPeWfccm7WqU
cRlblx2i4ysZS0IGVWimLsn0ui4BCp/kqkROVKJ7gfcMm48RYL0y8PIj+XJU
OW1/5L4BAUckM72T15ch/jNnD6mdos/rlN9/Yl0pChJV0XxhRADDP8Np0rEY
fXMXUdcyJiBI8/ytssKPaEMPn8pvUzp+7uah/8Q+IOv9U3IxFgSEPNi2qPxV
AUqK7ZAytKbH3YI3MDbno4mF1WILLhKw4NmNOyH1uWj7pay1WXYEFNgNm2b7
5yCs9Gip4DUCdqpxBgwPZ6GdresbXjoRMPDZoNHqTCbKvJv4Yu0NAj4t2nPx
xWg6UpTddTbkJgHKeoMaq/TTUGxDtZiIKwG5okUSh+veI4lbZ3tfuxFQJN+t
pOWQgoI3DMeJe9B8ytu5LFJORitrbtq9uUfAWeadJZHLktAjx0UqG70J+FC0
bXbFwkS0QCT4d/QDArJzEw0txN4ht9LN+dJ+BFRbU1uijiSgGbtct/jHBMi6
nX7VGBKPrgpqg9xTAvKSKyPm2XFo+EMLX9JzAiTir56Rvx2HLKysmYovCLAX
u9pszh+HvvH/efr+FQHnGX1S73Ni0ckcb0OVEALuaA2fFnSORXXGQsIZYQRs
OhPhGa4di7QXxnaoRhBQliKZcXxLLGKkqr3NfkPA9B//OQ3pWLTrTJn1jmgC
lPp5LhspxaJMjoFCfizNp9ybtQx6/ZZ3feO7EghIvuGx3PFqLIo77pT1IZGA
pjslZjfiY5HEHHVzTwoBi8e8NraMxKKQtwH/4VRaj2uvWYhmHFqlu5Hal0H7
3fpPpSo4Dj36lV5RmkUAyvj55hIZh3hf73t0IJfOXxGrxNchHrlrNR6tzCfA
LLkxXn4oHs2MmgrqfCDAVok0PWObgH785xGuxyDgfpbVCxfXd8hiYIV5XSkB
a0TaVW4tS0QdTyJljlXQfH/90y8TlYjqu4pSDZi0PpU3nXGNSUjH98h1Vi0B
bptttR7aJaMSlU6N0w0E8O05ulCDNwVle7IZ51gEhD2bHFqv9h4pyfv7fGsl
IFJ5SM6k8j2K/yyqa9xOwNqs68uenUpFG1yTV3R/I4Csz4rK7k5FoVKazWZd
BLxUq5hrtUxDqz8xg/t6CBANrJAle9KQ/3WjC1bfCfAMb9JUPZ2O+MRGNgwO
0OfzLj10pzQd3S2/PWA7TAD7tp9Rr3QG+mu/JOnHCH1euoOvvVsGurYm1OHy
GAFjZ9q6pKsz0EiRnNrYBM1H4NSuR7yZyNIm/6/DLwLE+loSJcUzUccKnY+T
0wR0Ob+rPqOciU7ntXk6/SXAYtNsZK5GJmowtT04PUf7W2moztiZiXQW/13i
wibg/Q7dl7NbM1Fp+oP6vyQBE/p25d8lM5HmubUvblME/OvdX8/Hl4myqbgz
8wtI4H9d5lRWlIGUk9TF3BeScICVtmHeOAMlGFT0kItJqJC0yckfSkcb5k/G
eS4jASvz7uc1SkdhMf2XeFaQIJCZ0DaQlYYE9Z2VvVeSYHLBwdd6OhVFl61a
/p8gCWold3OnFqYiVc200d9rSHCvWpahPZeCSjL1mcnCJLwKnbGSYyaj4woj
7yxFSWgz38AwupWEut/6+opKkCDBLxP+fmkiclgvY9O8gQT1u3lttY8TkP9i
s01am0k4FeSrqGgci0Q9CeqfHAmpgj+uZqVGo6S/YT2ZiiRc3FJYfqT3DaoZ
bImQ2kZCAQ40rgsLQQsr9IR5/iPB8wx3B3+4O3r134+Zgr0kSAft+JYvfRFJ
Zz9ocQQSpi7XuqktP4f3x5QE9mqTEJo8KOkm8QB73NNYXnKChMWrVzkp/InA
s3s28XjaktBw4GjoOsNM7JvD6NGwIyF82aMLDz2z8FolEzxhTwIv14rz+H02
VhcLdTN1IqE1lJXHw5eHnf6t+LvXnYT6xDfF76M+YMoxpWXGgwSnmfbDOSUf
8fMfh7NTvUiYYVy+UNRdhFO/eDtKPCRB56/jqM8qBh7N/TdKBJJwbsFi5C5V
hl2VQ5g5r0iweu+z6H50GV4ar554JYSEkb2Ph7BkOZZ7dc2mM4LWoyB2dveq
CpzHv+LgqygSVJ9FRsj4VGBt7+RNR2JIGB0Psor5U4Gtrg/2fHxHQmxWW0/G
p0r8e+Q+dk6m45dapze5tQp7WWyM3JJKwqq3hVFigVX47YkL58OzSIjqFr0V
dqia/h+Y23UylwS/xMbU0NfVmLEvWJi/gNYT1La7b6Qad6k0tdwpJgEmaj4m
udbgt2OCHnwlND+xAS44twZbJZ+Se1ZGgspnbQvF8Rosdyn4s3AlCW/k/Xjr
NjDx6OZ21+hqWo/ZbK/XUSZO7ReR3vKJ3k9+u4fiTSZ2ir5Ql1NHwsSODrO4
MCZWN4t0QY003/89X9aQz8Sz4j2SNU0k/BybWOD7mYk/fttYY9BCQhoRVp/c
z8QeoZZOHW0kbJfcNin6i4n3n4kTtflKwns+g7GcOSZeuGaofKKDhNNWEbpn
55m4pknO4XY3Cabjmf69M0zs/9xu3YI+EjinVXdu/cnEx4+mMPz7STA68eGz
1DcmFuQfv7R2iISS52OdwWVM3FqjIhj1g4Tz1Rd7r8QxcZiv40f5nyTsSq41
u+/JxMYHs6yzxklo/pnfk3uSiTcs+LNizxQJmvvqBgY3MnE/Y0d+5W8SHM8m
Tk8N1eCEu7fMj8/Q9frjZ0BufA22+69w6ddZEtbHaewXNKnByv/msyznSbiN
5B8NLq/BU3l7jMeI//NvPr4itxpn3/BYeJNLwrVOj992p6ux5hTPuUd8HJg6
P/5Lw6MKk6kHeIQWc6CwwX3GelEVLrV/kByxlAMDJ53eg28l1hleQqYLcOC7
ym0R3ScVeFm8XsLu1RzQyjbcuVe0AtdbPjleLsQBYW621cn0chy4sWHuyDoO
lOclqTvol+NT3Stj2tZzIMNzP1yZKMPCEQb65mIc0OT4iauFluEOo5d/RiQ4
0NL21Ozt4TL8Rrg10nkjByrTTKJCuaXYonWdDrmJA7cVF10nikrx5pfnpnw3
c+DGxCuH1Hul+MeJ12Gr5DnQESUs/1SvFKcIdGq9VuSAcn/4zruipfhancSY
tDIHOAUmVsU9JVjtsVlQ6lYOxFnh8/IhJXhGJxrRbxlwELhxjzQqwYUL+4dL
1DnwZsFriitXgt3LZQL1dnJg0WP9xdMUA+/zstVs2c2BvvHYkrABBubdl9hv
socDT2/hc/nNDFxFjDwZRhyIdMxjC9Qy8KMPWzSc9nPg+qZ3rVb1DHz0tkPP
/AEO3G1LEXT9ysCrNNL9fA5xYFNbT/fqSQZmTU+pCujS/l82tf21ogSHZKp1
hOhzQL5bq/XbjhJ8/toNH6ljHNBzTTwbaFuCJZTzlFNOcKD/QbJIe1QJ7hud
bVM/yQH9o9Y61/tKcFzi7nv4NAdGl/9bJLiuFF+0dVM4fI4DwWF5+l9QKd4i
U9zcdJ4DTb9uL7G3L8WZUbB50IwDH0O0tHwaS/Eftz9LLC05sCX2h1nawjK8
81ziWLc1B1IjjVKX7yvDRatW5bTb0f4fKNg1/aEMc8fKQ05f4cCJvu1yWmQZ
3s+85dZ8lQPmBsEJhlrluNqrR6vOmQPuT7cUareU46WmL2V1b3KAX3+MmNhY
gY9o6iyrus0BPka62vC1Ctz0O62JcZcD6qnnWw3WVOJOKw/z7IccYHfwRo07
V+ENoHZw22MOVPhEio41VmEL8SG51CccqEp20julXI2HW45OJgTS+gwH5SZ/
VuNf2hIer8M5sEev2EvJhYkXyxeFe6XT/L3Rncx6U4f1+Bw9OZkcOF7TuLKb
tx4/7ZW2csvhgCXJvZR4qR4LhvkruhRyIN3hjmzitgYssexC4aVyDsS8fe2i
mt+IzYcEIgcrOfDETJ1Xfd1nHFtWds+yhgMnf6X7Tzl/xvJuioeN62n/CnJm
Bdc14e1j/9qOf+GAl39Tk1J5E75Zk/qh7itdX4aL2/nGmnBhnMUb3U46f4PM
PdVCzRiZMG0O9HEg2sa7ucmsGXvtvqtb0s+BIL3SC6R3My5fq6q8d4gDOhMi
f74mNGPdhtA/Gj85cNkqaYHDj2bsn3ykPXucAwxluaZFi1m4wZf6uG2K5iHx
qNl6GRZebZUTlfqbjvcEGL3cx8In913yVpzhwPnoTfZ2RiwcLCZ+8d0sB3au
X7//iRMLf51t1JOZ5wC3JbV4+iELi7V4q0QTdD30fV+eFcHCphk7BSW5HJBO
U4usTWfh/Av/VjbxcOGB/+mNKWUsvHLxxxU+fFxQNH0a/JbFwpey3Pl3LuYC
x/Z8Xtp3Fi41QUtHl3KhYmiPRvskC4sspRZFLufCKcncug1sFr6eU8p3YiUX
nh07sM2PrwXXmnkv4BXkgm7BReE1y1uwNL82lbuGC8cjYnZVrW7BLRY1bDFR
LmS3GfMmCrfgBwX6s14buODId+PggXUtuMtqxYz6Ji4kr4/d3SXYgjVWNv4e
luHCbqXR9NQVLfj5h4Cp13JcYHsyTfIXteBhG8OJo4pcqD5V+o8gWXjf6jVj
lBIXrv800PSaZuHQotaR7K30uA+79dAwC/+6GDJsq8aFFAvkfeIrC+sKGQ2K
7ODC37LXc2+ZLByNRfvrdnLBeSRgTLOAheftOns9NblAro1eKxXPwiklZp2D
+7gQ5bOqr9OVhXmvSH0L1eLC+cOOU/kWLGws3P9FX5sLHmt/CozqsPCKq7as
TD0unGlUO2m6koVtROSbrI9yoXIvNRg/1YxxxUiD8AkujBSMWBz/3IyviTl8
unuaC6z21ZPNj5txdZVKzbZztN/cEw5ZNs144/Wpyv7zXOjbkZrGQc24qca5
VNecC+/bik/9oHlVuLGDQVhyIbHsuqx/aRO+v2G2KN2GC0vLtIPiX9G837xT
sNaeC76cQzJHNJqwv9SevBoHLlgXu2R28TXhgToy282RC00yvpe/x3zGQdJe
6X0utP5ld+bPNDTiuc8PE1LvcWH/QUueywsasIG7bpy5N+2vCcP1iF89TpLj
jxHy5cLpLNPDZvz1+ILHs0hXfy6AkG3ElqV1uHhL0CvtYC6498fzz9LvAy/f
mPtdKVxo337h4nqxSixwe4m+ZRoX+uXGld96VeBwu6tCwxlc8PvtHEYNluOc
I5pxU7lcyJ2P4jFJLMPDgs2VvCW0/6kW/BxZBj4SxbNUsYULj2LsPj5Zk4O/
BlxsSmvjQpyyzETz2yxsc78+bPtXLkh8qXY/q5CJPW3CFPd207x9eNnvbpKC
M7eoHjnxg87/nuxv7/dEYiQRsqZ1lAuPjWr83kmF4FoBstNonAs+qx6ullAJ
xAO/ahysfnNhl51a080ZZyxcYP78JsGFXkPHrVytQBSXVHWWzeHC25UfTOIl
gpFquNLGezwUuIpoKT9ofI30POYyHi2iIILX61aCcQz6cs3UVWApBYPXwzyn
bsUhK4uK/S/5KUjg0b/l45GA7h4MaI5YRUG+m/OpnUeT0TKNv6+lhCj4Z3mR
qbT2PQqRM7ZKWEvBceuJIyI1qShjmfyfdFH6Oy39jc9EBtpLPC1Sl6Cgaj7b
wyEzEzHHp30KN1BwT+7MwcvmWaj/M2NtuQwFu8XtY7e9yUaOZZu7deQoOGUZ
4TOolIPIbP+EOgUKeLauXl6ekYMexf+6aqBEwVhpYhdWyEXrQs7ubFOhYMBI
K7IhJBfF+hVzz6tS4K1RPDE8n4u23pGu6dlO6wmec6EM81CR/aMAaw0K2gpZ
bSve5iFdk8lzI7sokOpRzl34PQ+1HjstdfU/ChK1h3K61ucjS/g48nsvPV+p
09X/YD6aVJXKugW0HtbEOz6bfOQm/fAOoUVBiiv5Hd3JR0vWjmt5aVPQYDLc
sNUnHwUtOsm/6DAFxgz/lfX385HUXAHrsR4FwV3Mw8tv5qO0EcmIlUcpSJq9
J9lvko8evfG16DlO0ZfyoWPWO/KRzckJ2XRDCvrutnNfcPLQ/iVnxjxOU3DT
YJZpXpiHJIqLM4+do8Bk0voAwyYP/XPafEvyAgXOw98XvOXNQy2yT/dMmFBg
w1SL+vMiF6V3/OHB5hTckFmXniaUi/wDjKufWlFg63eMyXiQgy5qVzwxsaXg
hU+kj8hINjowv8VQ2Y6CNUkVt1L3ZqN5K3Zn3VUKmhKjzfU+ZKLW9VYxEU4U
7DyUs+hKeQbKrP908coNCp7reXP0Z9KQ3c7Xv/nvUKBiMHPOzzkFaY/xFHS4
U+AeMVBh+jUJbYy2u5viScGO+CMi7LOJiH26ScvtPgXazUrxQRMJ6Muy3Uv0
H1Ag/tQn3zYiHmUz3taL+lHwEJ2MSjCPQ89vLHk5+pjO/7HQlKeasehQ9xeJ
xwEUEKreDmpK0Ujq5b5+o5cUXEo55lXiHYVInXeJCsEUGM55jii3RqKvhMDV
f6EUeIiFZojrRaDczJvbmeEU1A0H3SB7X6NA2+650DcUZCrfZkFoGLoidghf
iqZAt2Sv/dmroUjnc6r3rjgKsq8Nfs20CEHSD9bqLnlHgYDA1eISx2DE3X1X
oD2Jgr9X2rL/hAWhbxMDrHfvKVhmKnEBd7xCubFHwm6lUyCTvd/gmforFHgu
x1QniwK5vVrqrTEvkcMKcRnhXArsGyRieDe/RLpl3iND+RSc3MXa9bjwBdp8
62da3gcKzh2xCP5q+gJRW07e8C2mwK2z6pyl0AvU0fth95kSCmYLF0gGtQai
/KBN3M3lFPjnCfl8jw1EL/UeV8xUUtAaOyf/0T0QXeP+elRZQ8HFkxnJz00D
kX6O0fGgWnp98O53n3UCkaxd6RqbBpoHeFk0oRGIeCQVvqk3UWCxscjvvGIg
6moOiOJrocBpaXaSz8ZAVPhwzrqlje4vdTeLu4QDUdAec8W4r/T8PYss2wQC
kdOv6knnTtp/BfMdPbyB6EjC1twDPRTkfFqY/HkkAMldCLkj9J3uDw86GVVl
AYh3FXdf/wAFT2T2D997FoB6KmwXZg/T/h1RNe7VDUAfXRs+3R+l6ycq+XzV
r+coREUjwHCcgvCSZMk13s/R9f7I05umKDh9autA8vwzdDR0odjv3zQvxI5h
+9PPkMJRh97SGQrmTYqsdgU8RQsXtMYHzlEgK1oS9OvdE9SXt8fegk2BSysq
vB3mj4rt47apciioV9NYlm7xGIVuXP6XomjeWmMrXEg/9D+kLaOA
          "]]}, Annotation[#, "Charting`Private`Tag$18685#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.2684253866666667, 0.19376290666666665`, 0.7384449866666666]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$18685#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.24700512, 0.30146535999999996`, 0.79543392]], 
         LineBox[CompressedData["
1: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
sUin0+HMq1B8noWA/wPaYMDD
          "]]}, Annotation[#, "Charting`Private`Tag$18685#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.2531906933333333, 0.4130830933333333, 0.8104812666666668]], 
         LineBox[CompressedData["
1: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
ahA=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.27673453333333337`, 0.5130402666666667, 0.7857655333333334]], 
         LineBox[CompressedData["
1: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
7Q8HVHI6uz6RDpehznA4HJiZvkvtJP0/oXXHPA==
          "]]}, Annotation[#, "Charting`Private`Tag$18685#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.31246631999999996`, 0.59399708, 0.7283891200000001]], 
         LineBox[CompressedData["
1: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
u98=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.35902504, 0.6538874266666665, 0.6481979733333334]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$18685#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.4178192533333333, 0.6938600666666666, 0.5585853066666667]], 
         LineBox[CompressedData["
1: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
dt44TdNYfmj8WQ/f/wNfoh7B
          "]]}, Annotation[#, "Charting`Private`Tag$18685#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.48667299999999997`, 0.72093728, 0.47256648000000007`]], 
         LineBox[CompressedData["
1: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
E2km/Xd8OJAd77WJFFDWRA/3JWzyDqaCclNGjfvSNoRMdImfQ6nwXfvEQ9bs
NvRyPcnH5wAVxnrd8ujrNJHL6gPWSCQVVrNJao5xmujzWEyZbzS7Hi/v4uVl
TRTcoWkwGksFIceCDo7/tqO5W3Pv/OKpUPlRj2p3RQslnak59DWRCoevxHB4
nNZGq1GRawMOU8EzdKz3k54OOr1b7f63o1SI1i7zvn1FB4npTNkFplHBRctL
U+GPDroicXvyezoVfPerWhq56yJlemhOUBYVAns4rjFv6aLaIWWl8WwqoJAp
U3+SLjJs+/Fs/0kqGOuNbIrQ10P4apX/j9NUkDL8bCN7SA/ZZgb9Cc6jwuLB
icaYG3poYP+myz/PUmF08E9QxIAe8rb6tiO0kArNyZvc+Rl66IdqxceJYipc
stuTv1tKH0UL+CWElbLx7MnnNd6mj+hz8mKTZVSwy/vQ9XKnPiqtmHp59TJ7
v043p5elPtLf05zpdpUKN0FZ0oIdv+c4biR4nQphErq0Dyb6KL5p91J7FRUs
MjLdg7bos/8H8neO3KRCVrW/2UcefVS/bipA6w4Vtma+fqT9RQ85v/xP+tc9
KhhIvWpLuKWHFo5m9ZXXUuHl/n32FaF66KzG7lOu9VS4eyAxpF5WD20blUMC
TVQgb1EUuPdcF/Wem6Q/a2b356rfzrxAXRQJ/9UdfsT282s1pitFB/GTM8O2
t7H19F8OcKXqoDvVThsmnlKh9vaY6o4FbfSLZ/Ls3hdsv6QsPFlTsR3lPGqy
4u+iQqmQ8r3rbppIOTJzBb+kQp3I0TohmgZ6Ie/UnNxLBb777n0qaepo/xvZ
aM23VGDprejPftqKODJ+Kf/spwLJhSmnx6GKrms3fbn8ngp3UuNMP7GUERrP
OO/yiQp5qiWetXgz+lri6Mg3TIXfhWv3KFZtRMesZLnwCJufGvJAk48cWs+Y
aEv6SoWNp7bUPb8jidruNCZsG2PrR2nl0YqQEPL2ztD48YMKMy/MPCPf/CGw
BB1/XPpFhYoQLdEF4/PEi09lruyZpsJ/JzXfbSWsEj9tahQgLrD1sO5k7Hey
DE56l/48kUSFi9XRR7NiFbHkCYcUDSpbj9rrt51T3oL3Tv6cvsiigvmAb9Ij
F21MuthQ6fyHCv/SnV4Vh+nhQvt0L55VKrwKGfb6aGWI39ZK9yRw0cBG/2fW
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

          "]]}, Annotation[#, "Charting`Private`Tag$18685#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.5636751333333334, 0.7372789333333334, 0.39689853333333336`]], 
         LineBox[CompressedData["
1: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
pIMH/wOMURVt
          "]]}, Annotation[#, "Charting`Private`Tag$18685#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.6453073066666667, 0.7432822266666667, 0.33561188000000003`]], 
         LineBox[CompressedData["
1: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
5QzYM+pssj3Px1PJJyyc7WagXuPsS8+2Yny48Ahvw4sZmI/0+d6kWIFv+cbT
rYTOQOTmc58nCtU4md6Nz1Tv//EnVptn2dXhwn+NK7QKZ4DyMWn37ZRGXFml
wVemagY6x3bTfj9pxk3jzqqJNM3Awdljj+yVW/Ewkbk11rEZYPnPe85dtBPf
sLnLsvh7Bj4k+ERTjQ/g8Qs6HrYqsyASsGbzaHUSL+UrlzfRm4Ucz9DkM9TT
eIcH40ntB7NwWJLgTMk7g39nHi4QcZqFojTZ7QnLOVxVQ33+T/wscFUlPffV
JeBmSUV5u5mzQE/Vnn0wTsDdt+lcF4tnQU/p4O+2ziKe/aqXvq1lFoRDKlO3
ZZbw+nHe2cq+WfAkHkvXrFzCR84H5+RMzIKfOp/EwrllnLhJUTJkaxYMHlaX
c28v48z0uXReP2ZhLMNX+obCCs5nRDVtSzQHnlmlUyxJK7h0/sMsE+o5+Drv
sNGxs4Lf+dXuoM04ByQjvvM5N1dxW/kL4rJn5kD7+JLMfY9V/GV0AO3Ni3Ng
ofvh0fPqVTxxeWXi0vU5iHrAFBv/aRX/cF0m47TYHGh+vnhG7cwa3uWdbndU
dg5Ot9AoXJFZwxf6SLG/anOgEztn3ma6hv9gM6X+bDAHbryNjeVua/jRx01j
i6ZzsIcN57wJWMO5qznTRqznAHsj+Hj11RouSuFj0+YyB/UTZFqafmu4us7C
7SqfOdiaMS20tF/DLdKAMjdoDm4Y2HXV6q7hHp8TR+Ki5oCWVuXb0rU1PAL+
JIckzcF8GZOb0+9VPDfknrVXzhywH9vJOPJxFW+YrrtlVzYHaOZL+yXHVXzs
Ehu5KT4HlZPSvC5sq/iWi/uQdvscfG8l5fCrXMFJ2qYSZQfnwOC+2u6i9ArO
wij6+Ob0HBibyW1eaVnG+U3eiVxemYNnETR3vwou47LFP0nZPs0Ba15taF/0
Em74R2/g6P4cND9yGdXcWMTtlSvj/5LMw1iIkdtJ3kU88D3To8+085A/GtaR
Z0TAk9adhJaY5qHr71X6PO8FvMdfsK/t8jx4bag9c+CaxUWPdZO8FZqHopvv
xN73TuHZ7x6I3BWfh2WZQlSkMoH7Fb5J/qQzD6M/V0a+9A7huzfPj1Ybz8MX
6psVgTP9uFFzLZX/43mYVZS6FyTehfeoaGKqzvPw9241/QhJKy46sW7P7DMP
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
ECa+xOYA1lRFpFd+vWIifAHU1d2L7tcdRt07ZUZNohagwHp3oEChEvr4x19e
OWEBzCcu+rSkK6MxXBslmLkAXefW3QOPKiOnfXZP4vMWwL7wxrHnYUroZwrL
R3rBAmTTBS4kmx1GPisla16lC7DL8OXZwSuH0KLrKZmvTxfg3ASVj939AArq
WzhrVLkARicNXO2tZBD9aFp44+sFSPu9EndBUwJdKzxafPDNAkgRWsKKD/Mj
Fq5vvQ9aFqDqpb/w7elRtdjgKBpv5wI8l56SZjXjw5zfpSSu9ywAl+DG9A32
UjhJr+sUaXABGm/kXtK3OYT5K/2CXUcW4NSjixG7rI/iLGG++5++LcDl0FZ/
oVcIi9x43an7YwFGg7mPzU5p4cL584SamQXYZCvzYuWMPpa2WheWnV8Aeo8w
p5jIafy4uUg7l7gAW5x5LPQfmeCD+/UvcNEXIPHaw/Bnoea4Km0u6+raAiye
tVV1uWKFj64lt8yzLsI5/vAEwdrzuMFd5Y89+yLcWTnudvGgPVYf+CIwwL0I
SQXz43cvOmH9oj2eL3cugtfY6MyNCDeskrNVplN0EVrI06qvEj2wRNLq9Nc9
i1BzIVAnu8ELr4QPu2yUXwT14+FTShcu4F8X2/YIH16E8bEn+3UpF/En94r/
Dh5dhGf6rm+dzgTiF6a3Haw1FuGzazaLtXQIztO/JOanuwgWH3a6NT4OxfHI
dSzacBF689rjD6tfxk77kc1Ti0V4mWX2pvT+FSzASrT867UIUu0PHYREr2MW
+vft/P6LECXAdVV/Xwyen+/+KBO8CE89sOx5tRu480uJqUnEIvi1TqR8iI3D
r/pTt7nHLEKPWCM9qS4eF3ZEDoTfXAQO2SaDMdpNHF557kxx6iLQFnk2fEpP
wB5lutx1WYvQzfp+xzDpDja7p9TTm78Iu/1i/QXsE7H8Le5TtNJFMLsyV7Cy
PwVPOLbonGpYBCVM8t3klY57LV+wOTQvwodV4/pRvQxcZ5TXFtSxCFx8m1lX
DmTitGMhGvf6F5nv+8dVTzmzsS6vrNrS5CKsXxh9cH9HPlbaJLjKNrsIGyYa
/N0P3MO7V1kbhBaY+n2vO+6sfx8vz3w7pkVfBLJc7wfzzAL8rClZOXPLEuzv
6rOd0C3COdXXSE+2LYFI5Miq42IRjn3q/bJJcAnWJSoqRvOKsUOW9qFZ8SWQ
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
UVDlRQcvsGSoPlyB/Cm7rhpWDqRz7Weq/PMVgJ4UXFhAUeNqcTD9Xb4C46Zi
CvcU5tUG2b5sK3vJrIc7hSeieVzN9k53snjtCiTFq40rzA81BuVVJPK3rcAx
4bkU6eXVxtq1vJttHStwc5v075xnLHjNIf560LsVmJPU2LTFkA3flLIPHepd
gRYDq/Ed5hy4N87gYszACtxhyVdyxVyYf1bZW2loBURyJxVZdvDge8+57NM+
M+sbZX/R1bUN/9hKs9L6ugKBi+JbRb/yYZnAHyakMaZfd8XaGk7y48ojdTpm
kyvw0eGq2Z+R7ZiaXay+4ecKtHe/0j/SLohPrCQdr/q1AnnUmBaesh34bZO7
PP/CCvgqKH4SPiuEufaYyrQtrYBCyqsGGUFhbHJDTSKItAKc54Qagz8I48yf
+3ZJUldg8tDhyIUbu/BXfYHtQ3Smf1sHy6LlRbAb9x92pb/M/mhYbCt1FMWL
gy2rqRtW4XcKOxj4iGE2G/8pU55VyNoRxZfHJo6FpkR6+IRWwbLnR1oBWRzL
+72v+iC5CtbbF0Rad0lgTeqlvNSDq7D4iD/Ut0Mc99afSSIqrcKeE2rXQV8c
W0VKx5geXwWNtiPNsfm78X9aq6Ev0SqUJ2fYF7aIYR/2IW8+7VUIIi7832CV
R2O1R1Eic/TJEL4oqYeoJKLur6NC5qJeKrMopSQlUqaKDBWZiegZ8pQhNOle
CaHRUCJJ4mXIlJnu9Px51jpnrX323medHTX7iEsUHyeOvDQiIXZnvXSkIpeY
epvvcMaEhCe6bb5jAQpEcGywdbMlCbdlklRKl8oTtRMnzEP3kjD8+eR7OCxH
iPx9wEhrHwk1usz9xoLlRIKcpv6tgyTMciBUzVmWUOzi0xx3ICGQqxO3doMM
kf9Px0rrIySUvsHfacpIE8S6CCGOFwlHf074zqxZRpRcundL6iwJy6vTMjIP
SRL/vK+TX+5PgkjiG1E8nUMkKvZlKwSSkOYvUsqOLCUiTi/WVLpMglpET6ii
xVIioErlsfI1EgQrH31J8ZQgTnEMYe11Eg5umG0I2CdO2JRdttZMIkFjS2Gw
9wExYsvfL49sziLhVLuHgcN1EYI7y/puKyAhveb+6pBuIaJ/a2CaaSUJ4ts+
lLnFLiY6otNXW9aQICn6eFdLET/xrvP5g70NJCSrPryVU81HvND8qrP/PQkd
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
A+QPfdw=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#12"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.7265206399999999, 0.73744708, 0.28996588000000006`]], 
         LineBox[CompressedData["
1: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
WjH2B3QCXoluX2axWDA34anX/0TA/wDCYrkc
          "]]}, Annotation[#, "Charting`Private`Tag$18685#13"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.8009855466666665, 0.7164552133333334, 0.25856426666666665`]], 
         LineBox[CompressedData["
1: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
/ddKQCg/6zydToehi9SVw+v8PwKT0gE=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#14"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.8598339733333332, 0.6734583066666667, 0.23785813333333336`]], 
         LineBox[CompressedData["
1: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
rAd+k8lkJDjpjw85E/A/eOt1kg==
          "]]}, Annotation[#, "Charting`Private`Tag$18685#15"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.8935135999999999, 0.600415, 0.22054640000000003`]], 
         LineBox[CompressedData["
1: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
Mhvn55P5av4lIlZq/RybzcYhsVL1axz/D+wudto=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#16"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.90221548, 0.4986361600000001, 0.20051704000000004`]], 
         LineBox[CompressedData["
1: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
r1u3/vP/AYcXkVY=
          "]]}, Annotation[#, "Charting`Private`Tag$18685#17"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[
          0.8903150266666667, 0.37251429333333347`, 0.17603728000000002`]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$18685#18"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 0.7692307692307692, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Concentration (nM)\"", TraditionalForm], None}, {
        FormBox["\"Time (hours)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> Directive[
       GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"An example polymer reaction\"", 16, StripOnInput -> False],
        TraditionalForm], PlotRange -> {{All, 1}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a", "ab", "ac", "aba", "abab", "abac", "ababa", "ababab", "ababac", 
       "b", "ba", "bab", "bac", "baba", "babab", "babac", "bababa", "c"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\"", {
                 Directive[
                  GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
                 FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.33457829333333333`, 0.11628728, 0.6443092266666667]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.2684253866666667, 0.19376290666666665`, 
                    0.7384449866666666]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.24700512, 0.30146535999999996`, 0.79543392]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.2531906933333333, 0.4130830933333333, 
                    0.8104812666666668]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.27673453333333337`, 0.5130402666666667, 
                    0.7857655333333334]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.31246631999999996`, 0.59399708, 0.7283891200000001]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.35902504, 0.6538874266666665, 0.6481979733333334]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.4178192533333333, 0.6938600666666666, 
                    0.5585853066666667]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.48667299999999997`, 0.72093728, 0.47256648000000007`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5636751333333334, 0.7372789333333334, 
                    0.39689853333333336`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.6453073066666667, 0.7432822266666667, 
                    0.33561188000000003`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.7265206399999999, 0.73744708, 0.28996588000000006`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.8009855466666665, 0.7164552133333334, 
                    0.25856426666666665`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.8598339733333332, 0.6734583066666667, 
                    0.23785813333333336`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.8935135999999999, 0.600415, 0.22054640000000003`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.90221548, 0.4986361600000001, 0.20051704000000004`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #17}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.8903150266666667, 0.37251429333333347`, 
                    0.17603728000000002`]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #18}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.471412, 0.108766, 0.527016], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3142746666666667, 0.07251066666666667, 
                    0.35134400000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.471412`", ",", "0.108766`", ",", "0.527016`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.471412, 0.108766, 0.527016]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.471412, 0.108766, 0.527016], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33457829333333333`, 0.11628728, 0.6443092266666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22305219555555555`, 0.07752485333333334, 
                    0.42953948444444445`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33457829333333333`", ",", "0.11628728`", ",", 
                    "0.6443092266666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33457829333333333`, 0.11628728, 0.6443092266666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33457829333333333`, 0.11628728, 0.6443092266666667], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2684253866666667, 0.19376290666666665`, 
                    0.7384449866666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17895025777777782`, 0.1291752711111111, 
                    0.49229665777777776`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2684253866666667`", ",", "0.19376290666666665`", ",", 
                    "0.7384449866666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2684253866666667, 0.19376290666666665`, 
                    0.7384449866666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2684253866666667, 0.19376290666666665`, 
                    0.7384449866666666], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24700512, 0.30146535999999996`, 0.79543392], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16467008, 0.20097690666666665`, 0.5302892800000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.24700512`", ",", "0.30146535999999996`", ",", 
                    "0.79543392`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24700512, 0.30146535999999996`, 0.79543392]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24700512, 0.30146535999999996`, 0.79543392], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2531906933333333, 0.4130830933333333, 
                    0.8104812666666668], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16879379555555557`, 0.2753887288888889, 
                    0.5403208444444445], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2531906933333333`", ",", "0.4130830933333333`", ",", 
                    "0.8104812666666668`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2531906933333333, 0.4130830933333333, 
                    0.8104812666666668]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2531906933333333, 0.4130830933333333, 
                    0.8104812666666668], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27673453333333337`, 0.5130402666666667, 
                    0.7857655333333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18448968888888892`, 0.3420268444444445, 
                    0.523843688888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27673453333333337`", ",", "0.5130402666666667`", ",", 
                    "0.7857655333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27673453333333337`, 0.5130402666666667, 
                    0.7857655333333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27673453333333337`, 0.5130402666666667, 
                    0.7857655333333334], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.31246631999999996`, 0.59399708, 0.7283891200000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20831087999999998`, 0.3959980533333333, 
                    0.48559274666666674`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.31246631999999996`", ",", "0.59399708`", ",", 
                    "0.7283891200000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.31246631999999996`, 0.59399708, 0.7283891200000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.31246631999999996`, 0.59399708, 0.7283891200000001], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.35902504, 0.6538874266666665, 0.6481979733333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2393500266666667, 0.43592495111111107`, 
                    0.43213198222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.35902504`", ",", "0.6538874266666665`", ",", 
                    "0.6481979733333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.35902504, 0.6538874266666665, 0.6481979733333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.35902504, 0.6538874266666665, 0.6481979733333334], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4178192533333333, 0.6938600666666666, 
                    0.5585853066666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2785461688888889, 0.46257337777777774`, 
                    0.3723902044444445], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4178192533333333`", ",", "0.6938600666666666`", ",", 
                    "0.5585853066666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4178192533333333, 0.6938600666666666, 
                    0.5585853066666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4178192533333333, 0.6938600666666666, 
                    0.5585853066666667], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48667299999999997`, 0.72093728, 0.47256648000000007`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.32444866666666666`, 0.4806248533333334, 
                    0.31504432000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48667299999999997`", ",", "0.72093728`", ",", 
                    "0.47256648000000007`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48667299999999997`, 0.72093728, 0.47256648000000007`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48667299999999997`, 0.72093728, 0.47256648000000007`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5636751333333334, 0.7372789333333334, 
                    0.39689853333333336`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3757834222222223, 0.49151928888888896`, 
                    0.26459902222222226`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5636751333333334`", ",", "0.7372789333333334`", ",", 
                    "0.39689853333333336`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5636751333333334, 0.7372789333333334, 
                    0.39689853333333336`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5636751333333334, 0.7372789333333334, 
                    0.39689853333333336`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6453073066666667, 0.7432822266666667, 
                    0.33561188000000003`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.43020487111111116`, 0.49552148444444444`, 
                    0.22374125333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6453073066666667`", ",", "0.7432822266666667`", ",", 
                    "0.33561188000000003`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6453073066666667, 0.7432822266666667, 
                    0.33561188000000003`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6453073066666667, 0.7432822266666667, 
                    0.33561188000000003`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7265206399999999, 0.73744708, 0.28996588000000006`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4843470933333333, 0.4916313866666667, 
                    0.19331058666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7265206399999999`", ",", "0.73744708`", ",", 
                    "0.28996588000000006`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7265206399999999, 0.73744708, 0.28996588000000006`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7265206399999999, 0.73744708, 0.28996588000000006`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8009855466666665, 0.7164552133333334, 
                    0.25856426666666665`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5339903644444444, 0.47763680888888893`, 
                    0.17237617777777778`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8009855466666665`", ",", "0.7164552133333334`", ",", 
                    "0.25856426666666665`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8009855466666665, 0.7164552133333334, 
                    0.25856426666666665`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8009855466666665, 0.7164552133333334, 
                    0.25856426666666665`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8598339733333332, 0.6734583066666667, 
                    0.23785813333333336`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5732226488888889, 0.4489722044444445, 
                    0.1585720888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8598339733333332`", ",", "0.6734583066666667`", ",", 
                    "0.23785813333333336`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8598339733333332, 0.6734583066666667, 
                    0.23785813333333336`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8598339733333332, 0.6734583066666667, 
                    0.23785813333333336`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8935135999999999, 0.600415, 0.22054640000000003`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5956757333333333, 0.4002766666666667, 
                    0.14703093333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8935135999999999`", ",", "0.600415`", ",", 
                    "0.22054640000000003`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8935135999999999, 0.600415, 0.22054640000000003`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8935135999999999, 0.600415, 0.22054640000000003`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.90221548, 0.4986361600000001, 0.20051704000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6014769866666667, 0.3324241066666668, 
                    0.1336780266666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.90221548`", ",", "0.4986361600000001`", ",", 
                    "0.20051704000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.90221548, 0.4986361600000001, 0.20051704000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.90221548, 0.4986361600000001, 0.20051704000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8903150266666667, 0.37251429333333347`, 
                    0.17603728000000002`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5935433511111112, 0.24834286222222232`, 
                    0.11735818666666668`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8903150266666667`", ",", "0.37251429333333347`", ",", 
                    "0.17603728000000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8903150266666667, 0.37251429333333347`, 
                    0.17603728000000002`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8903150266666667, 0.37251429333333347`, 
                    0.17603728000000002`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12.`"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.82293567730754*^9, {3.8229357261648617`*^9, 3.8229358121651716`*^9}, {
   3.8229361411061735`*^9, 3.8229361462552166`*^9}, 3.822936187776675*^9, 
   3.822936319508197*^9, 3.822936361735381*^9, 3.822936516456932*^9, {
   3.822936548388516*^9, 3.8229365783368125`*^9}, 3.8229366666405416`*^9, {
   3.822936713022138*^9, 3.822936730238699*^9}, 3.822936898683544*^9, 
   3.822938048448306*^9, 3.8229381456728477`*^9, 3.8229397303142357`*^9, {
   3.822940567161381*^9, 3.8229406038229775`*^9}, 3.822940645114199*^9, 
   3.822943081243764*^9, {3.822946016842657*^9, 3.8229460274031944`*^9}, 
   3.822946066967661*^9, 3.822946115754162*^9, 3.822947300473236*^9, 
   3.82294809240186*^9, 3.822948220219081*^9, 3.823024889331113*^9, 
   3.823283719543602*^9, {3.823284062890663*^9, 3.8232840887804565`*^9}, {
   3.823284124703451*^9, 3.8232841759993315`*^9}, 3.8232842426359873`*^9, {
   3.823284303421974*^9, 3.823284335255805*^9}, 3.8232843722472506`*^9, {
   3.823284404730591*^9, 3.823284453973364*^9}, {3.824325226323126*^9, 
   3.8243252752544365`*^9}, 3.824325316259082*^9, 3.8243254563258057`*^9, 
   3.8243255247967377`*^9, {3.824325644101838*^9, 3.8243256702346425`*^9}, 
   3.824326054670573*^9, {3.8243275071735907`*^9, 3.824327527952016*^9}, {
   3.8243286587102375`*^9, 3.824328700768689*^9}},
 CellLabel->
  "Out[597]=",ExpressionUUID->"49be18ab-f0f8-4874-b774-2b69e8ad3f79"]
}, Open  ]],

Cell["\<\
Display final concentrations of polymers above a set threshold. \
\>", "Item",
 CellChangeTimes->{{3.8229462826757607`*^9, 3.8229464156362715`*^9}, {
  3.8229464689040995`*^9, 3.8229465154459076`*^9}, {3.8229465979757524`*^9, 
  3.822946615970695*^9}},ExpressionUUID->"eafcc37a-a719-4cd9-af4b-\
374f542d4cb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SIMpolymerFinal", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"polymers", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"SIMtime", "*", "60", "*", "60"}], "]"}], "/", 
       RowBox[{"10", "^", 
        RowBox[{"-", "9"}]}]}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "polymers", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"threshold", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"threshold", " ", "concentration"}], ",", " ", 
    RowBox[{"unit", ":", " ", "nM"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polymerThresholded", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"SIMpolymerFinal", ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", ">=", "threshold"}]}]}], "]"}], "//", "Flatten"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.822938214585759*^9, 3.82293821703751*^9}, {
   3.8229383672045126`*^9, 3.8229384561067147`*^9}, {3.8229386004686236`*^9, 
   3.8229386118579698`*^9}, {3.822938680331357*^9, 3.822938692560629*^9}, {
   3.8229389410060916`*^9, 3.822938955636023*^9}, {3.822939786106824*^9, 
   3.822939858583187*^9}, 3.822946642272341*^9, {3.822946684454899*^9, 
   3.8229467298964357`*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"6b454788-0c5d-47a0-8b36-42cd396f62d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"SIMpolymerFinal", "[", 
    RowBox[{"[", "polymerThresholded", "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"polymers", "[", 
       RowBox[{"[", "polymerThresholded", "]"}], "]"}], ",", "Axis", ",", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Pi", "/", "4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Concentration (nM)\>\"", ",", "16"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8229372842686253`*^9, 3.822937288531866*^9}, {
  3.8229373304514294`*^9, 3.8229374367081957`*^9}, {3.822938976091715*^9, 
  3.822938980135948*^9}, {3.822939854063506*^9, 3.822939863045803*^9}, {
  3.822939926599964*^9, 3.822939933322158*^9}, {3.8229400925977745`*^9, 
  3.822940158472206*^9}, {3.822946739075487*^9, 3.8229467436197824`*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"95c4c32c-b8a2-4f3f-8352-e2279d257e06"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             8.655169519078306}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{47.30941176470588, 
            103.8544361033672}, {-109.25330023197044`, 81.18399536059094}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8.655169519078306]& ,
         TagBoxNote->"8.655169519078306"],
        StyleBox["8.655169519078306`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8.655169519078306, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             3.877855387181268}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{109.41580273886407`, 
            165.96082707752538`}, {-4.415362117815874, 81.18399536059094}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.877855387181268]& ,
         TagBoxNote->"3.877855387181268"],
        StyleBox["3.877855387181268`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.877855387181268, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.16452896771307945`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{171.52219371302226`, 228.0672180516836}, {
            77.07341475842314, 81.18399536059094}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.16452896771307945`]& ,
         TagBoxNote->"0.16452896771307945"],
        StyleBox["0.16452896771307945`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.16452896771307945`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             2.32123313173946}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{233.62858468718048`, 290.1736090258418}, {
            29.744641427590757`, 81.18399536059094}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.32123313173946]& ,
         TagBoxNote->"2.32123313173946"],
        StyleBox["2.32123313173946`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.32123313173946, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             0.17053971832207693`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{295.7349756613387, 352.28000000000003`}, {
            76.94150911375174, 81.18399536059094}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.17053971832207693`]& ,
         TagBoxNote->"0.17053971832207693"],
        StyleBox["0.17053971832207693`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.17053971832207693`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.45075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
      StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox[
        RotationBox["ac", BoxRotation -> 0.7853981633974483], 
        TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        RotationBox["abac", BoxRotation -> 0.7853981633974483], 
        TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        RotationBox["ababab", BoxRotation -> 0.7853981633974483], 
        TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        RotationBox["ababac", BoxRotation -> 0.7853981633974483], 
        TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        RotationBox["bababa", BoxRotation -> 0.7853981633974483], 
        TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.822940119480737*^9, 3.822940159052929*^9}, 
   3.8229406119515905`*^9, 3.822940649578617*^9, 3.8229430815289693`*^9, 
   3.822947300890051*^9, 3.8229480925867147`*^9, 3.8229482204039373`*^9, 
   3.8230248896319385`*^9, 3.8232837200043135`*^9, {3.8232840632788353`*^9, 
   3.8232840889975653`*^9}, {3.8232841270488043`*^9, 3.823284176289907*^9}, 
   3.823284242834103*^9, {3.8232843036058407`*^9, 3.823284335623282*^9}, 
   3.823284372645008*^9, {3.8232844051382*^9, 3.82328445423246*^9}, 
   3.8243252268543463`*^9, 3.824325316525241*^9, 3.8243254565260344`*^9, 
   3.824325525019173*^9, {3.824325644353168*^9, 3.8243256705649815`*^9}, 
   3.824326054966958*^9, {3.8243275074722214`*^9, 3.824327528324895*^9}, {
   3.8243286591154795`*^9, 3.8243287010079*^9}},
 CellLabel->
  "Out[601]=",ExpressionUUID->"4ac5253b-2271-4cd7-9bda-5761108b5dd8"]
}, Open  ]],

Cell["\<\
Display kinetics trajectories of polymers whose final concentrations are \
above a set threshold. \
\>", "Item",
 CellChangeTimes->{{3.8229462826757607`*^9, 3.8229464156362715`*^9}, {
  3.8229464689040995`*^9, 3.8229465154459076`*^9}, {3.8229465979757524`*^9, 
  3.822946615970695*^9}, {3.822947998039164*^9, 
  3.822948022270401*^9}},ExpressionUUID->"a95e8c67-2a12-4c1d-a90b-\
33d2dbbba922"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["trajectories", "Input"], 
   StyleBox["=", "Input"], 
   RowBox[{"polymers", "[", 
    RowBox[{"[", "polymerThresholded", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["TrajectoryLabel", "Input"], 
   StyleBox["=", "Input"], "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["OutputLabel", "Input"], 
    StyleBox["=", "Input"], "\"\<Concentration (nM)\>\""}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["CircuitLabel", "Input"], 
    StyleBox["=", "Input"], "\"\<An example polymer reaction\>\""}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["TimeRange", "Input"], 
   StyleBox["=", "Input"], 
   RowBox[{"{", 
    RowBox[{"All", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSim", "[", 
  RowBox[{
   RowBox[{"SIMpolymer", "[", 
    RowBox[{"[", "polymerThresholded", "]"}], "]"}], ",", "SIMtime", ",", 
   StyleBox["trajectories", "Input"], ",", 
   StyleBox["TrajectoryLabel", "Input"], ",", 
   StyleBox["OutputLabel", "Input"], 
   StyleBox[",", "Input"], 
   StyleBox["CircuitLabel", "Input"], 
   StyleBox[",", "Input"], 
   StyleBox["TimeRange", "Input"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8229356551705513`*^9, 3.8229356764815645`*^9}, {
   3.8229357236954365`*^9, 3.822935725533046*^9}, {3.822935769416608*^9, 
   3.822935808110729*^9}, {3.822936140606247*^9, 3.8229361535272913`*^9}, 
   3.8229361873068275`*^9, {3.822936502708453*^9, 3.822936510618645*^9}, {
   3.8229365720493507`*^9, 3.822936577617923*^9}, {3.8229366902638464`*^9, 
   3.8229367297055073`*^9}, {3.822945879195392*^9, 3.8229459365605288`*^9}, {
   3.8229459691085205`*^9, 3.822946064256652*^9}, {3.8229461109691277`*^9, 
   3.8229461152534895`*^9}, {3.8229477593544874`*^9, 3.8229477685565987`*^9}, 
   3.8229478511850224`*^9, {3.8229479280053864`*^9, 3.8229479556240635`*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"58b15931-e032-44db-969e-634ac36f194c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.25555456, 0.21676151999999999`, 0.76077736]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$18946#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.305600624, 0.5847837119999999, 0.740168904]], 
         LineBox[CompressedData["
1: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
7Q8HVHI6uz6RDpehznA4HJiZvkvtJP0/oXXHPA==
          "]]}, Annotation[#, "Charting`Private`Tag$18946#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.519447976, 0.730803072, 0.435427984]], 
         LineBox[CompressedData["
1:eJwV1Xc81V8YB3BKJUqpJFKS0ZKWUaJPkSI0rB8NCREyKqQoyWggyo2Ikt2Q
vdd177mUmZVkJoTIKFvu79tf5/X+57w+55zneY6Yqb3OxXkcHBxcnBwc/9Zj
F3tr6H0XD+Qxkj8Nynrv51IVdmgXOgxbqyU5vJG/Dux5+Sw8TUgP3/xy04O6
d6FLRMLjupQxVPfPmHqm60GzsjE1Qsgc/Bxt1vcCbCDhty6WLWoFi/mSnzWs
XDF7zCzkgpQdDA+68qd88UG/Vz25EHwFecfvnpkeCcR/5hMFT4QckT/kUsW1
LQREVTiLGe4Mj9daazY2RWCnuHLyH9EbyPZRde8xjQJ3590oA6nbuOR1ZVLS
6DVyO2ormXp3IDrap1mV+w4OJ82PnQ32gFtRujTnXBJad9xT9Rfywmi0oJf5
4jTQXq6hS57xxmFtWr+2fTqOLXujVBjuA9tHut+yizLA4b4/x6DtHnjm5Y3W
T2ci81eF3JDoAwRNRjltE8vGZWPj1HsXHsJH/NNmzz052Fg1JLMh2hduNooJ
Zbtz8ShxxeZTUo+Q6MeRqj2bB7V1MTF9lgEoEiCtSR/ycbskbHmxXiD2bwgf
hk8BjG5/P+4/FojNR6p0F8kXQlZe2t8o+DHEBPwTuZoKseyXY7mkwhPIBnIt
2OpQhP7YgsWjjU/gvG0q+8xsESIFTvg8FKKBz6j6dIgrHa6VIcQgl4ZSKdHf
CWl0GHh3zBM/8xRLaa6LmT/o2KW85dDQzFPQbNUfyK0pxpKxK+554cFY1zTI
1lArxo93uQX3lENQXTptcNi+GAzz+bO6bSGQ8baVNwsuhks9zWVANBTNoTLl
Qy3F0PVrzcymh+LHceFZxmwxZA5LjXldCMOGIh0BH2EGFs/a7Tk17zmMJXQl
TeUZ6ErLurIu+jm4o+XeuJ1koMiGI7lPNRz1b57wTV5iIExc41dGVzjiLO0W
/HFn4FTQV+vjUi9wX6uCs/01A9Ka4q+FS1/Aatv8xZwFDHDPv/yjx/IlZjbw
iPFUM3A+Zy6lSC8Sg3d4C8SGGdASEK+RjI0En3VJoB6bAcUrR4d9xyLhQPtt
kLWUCYEtgTKGwa9Q0C0VqraZiXne6dqFPa/w8cRDOV9ZJoY7vlyWUIiCeE5E
jOxBJsqfib0dbozCdF1rbos+E9l/1MoMNkdjYVov76/zTMSdtO7Ld4nGNntm
yX0rJjy40zY9EIqBvS5noIsrE1uPPr6f6hADuYVvbvt6MVHrbd/XXBqD4w7d
FXv8mZCYL/1WxjkWHZ9Ves9HMFFxiGeJYWUspi8sPzgcw4TTnd7LHhJxMJ10
GpJ5x0TJ3xiZ+to4lDlVOpfnMGGv5Bnwd0s81viUH9hNZ2KN64VhKY94KHHk
xhqVMGE1uS71xo4EqNhy3ZisYWLJ72A5Ub/XaEnZtLG6h4mMXU7B6t9f49uE
kRvtJxPGDroTVxTfoPsqjbZrmImkwWU5pPcNHn0U1JyZZEKn976Stdo7uPix
ts1xE8xIWUYEhb/DqcDVD9OXEMRcVJvL//0O8fpLvp1YTjDWyUlfFpUIq33R
hxUFCZ613lTNmHuPDeThsxlxgkMiRjFt+klgrOzgnZQi6D+tsIA7MQkbT/Cb
fttCsH7ghlni9mQ05k7l3dpBYG8lL8nRkox7FyamhvYRkPuxDbRFKUhOqUq2
UCJYk7DKZ8ueFNwMK9erPkBA7xnt0XmYghVJRN9FlWCFeVJC7N5U7GUdyZPT
IrDwXG+kaJ4K8aBDTurHCfKi/BdXB6Qi2lTc+eRJAvNvNtaTPak4euFF+CE9
ggzjzdKaT9Mwcm56Q8oZAkOjV0nDI+m4oSplzb5EMNSsxxMlnIFFZrSddtYE
PsbcF3VVM5CjcH9Vow1Bmpm9cCYtAyLneMtD7Aj47JS9XRUyERnNkfXlGgHr
btPphbeyQDTss67eIji7wD8jKzYLAUsXHHlym2D03sHlVlVZULLZTxLdCTb4
x7PKRbMhGD/3/YsHgVuI087HjGyMrxaa4fQh2P2Of6EIdy5k1Dirk/wJPsqw
TCp35iJ11M4y5BGBSYpL3m2jXBTqz/K5BRD4Z7Y7fHuTiz12b1lKjwl66YnN
cdp5ONK3WimCRvCiQSNlV1A+jhhz8HSHEcgZ/uX9npcPk0NWd6OfE1R8Tbag
deXjwFhS6flwgql2QZEJuQIkNGi21kQQ6PV3++R/KQCjpW5PRCQBL9vj7NH1
RUi5HjbaGEvVh9V/xtJHitDqsHKTYxyBRL20Cb9dEZ51LMnjiyc48LrRrLmg
CIJn6cJIIMh5HZyRJUNHbU6wpf8bgkHdgXzNKjqa08M3dr8nkF3cqHygkw4Z
WTNe6ySCm4XFhTvH6XjEU/x2kPKiLSF0gfXF2L9DVWokmUBs7hBpty1G0Ypj
Hn2pBPoJIeXXljKgJ3rSIjqTIPzcXS0LMQZiRWLKBbIIOlfYVhrKUZ5z2nKP
sv0tlWrlcww85rNqscgmeKAzWLsokYH1+7vdhXMJCmZVvj7XYmLq7Nx1/QIC
yVO/epm+BNaXPvhuZxIIux9VtHxF8LnCW8iP8vLESF8eat/uqujGPsrT3Loy
pzoJfix3GIoiBJ/oWdfa9rLQM6JTw1tCnW+nx9xkNwtJnocdcz9QeYy/ngif
YaHs9+vNSz9S9ey35xX4S7Bplfzu85RP9Har+iiVQN+MW5uzjLrvyGMPVgaV
YNH7jq/K5QRVy1atkjlYio/ffQdCKwmYyrYXa/RLoTl4ubGTcrZNSaajTSlu
FUbJbqsiiC51McoLLsWrBye1cim7uLe+UB+krL1JqLaaYONQ3BazsA9Qnd11
ua+G4HrVPjz78xEP6GxxegPVDzIZ3R+5y3DCVEBynHKM/06/GZEyrG8Trdr2
maBGa1OTsVoZWn47rQ2mvK181TXJ4DK8WuSWa9FI0F46FJeqUI73gxkpk18I
jhbH8lXerECZBN26q5mgbYNYxtyjCihkRHxe3kLgeCf8zM7oCnjyBnAoU36F
oISg8grQw5c8plGeKbijclqkErMXSlMPthIk5Z5x/lFQCe2zy2z82wgE0/nb
ODmrUffyybrZDqpf/Wb0ulZXQ/VG0TmJbwRR5t3lJdLVSJ0wMdWiLC2Qk+Nr
WA23z5vznlNWcTZ5KpBcDZ1pg2wF6l3lw/+Lo+34BOeFo0cvfie4YBx3LqHt
E364aNeFdhN4HVsbGtr3CX/3WnvmUY6TD6x/+OcTIiXLF7RSHuC7qWnLU4Mj
DYV3RXsInIu09+2Wr0FaiI9FFGW/DWOr8v1rMGgVtT7yB0Fmp2pFtVItCgsd
PG/1UXWn7jHif7QW8S8/0EIpj78vXK2lU4uUx1c8MygruO678MGyFpGKaVMD
lLNX7hinP6nF79DWk6f7qX48LLwhtbcWLvZ9bTI/CfLjhq/RaHVoeiE5RR8g
aFkiE6rzsg48unoSTZRnr9oULn9Th3KLxD0jlJXRw+1fVIeZ2Gj2hkGCwsbm
CO/+OhhGhp9yp1zEXVrqfLAeY/MuLVD4RcCwjlhrNFAP+xBGbdAQNV/7bGyM
x+vR/DbLLp5yzCXFPDOOBizgmRzPpext0XjablUDnlzNrfhGWd2UP8xTqQFB
fC6BMsME1Ubea977NYCjavYxodyibiswf/tneH1iyX0fof4zKeVlibaNCDJ/
Kj38m5pHnSqlD10a0Uul4fhDzfsIdfdLno0ob7/3kp/y6lV6Q+Khjbga+7hm
N2V5TpvqMNKIjlOFTo6UXZqfBdxf+wXpew/X/qE8G/BnmfnHL0hzKb7aP0Yw
b+rt8rWSX2HIu8k5cYJgbaXKb+z4ijZB9W85lGVfNTWY7/uKL4IaKiWUL2os
ev5e+yvSTNb2tFH+EGoqqeL8FXVr9TKXTRIEKAopWpV+hY5DjKc9ZRE3H7Ms
q2ascNcW3TxF5WObZOq+b0FOVMtT92kCLW36XbXsFjw7ZBr2gLLZc9ETCowW
ND0IDwmiHKjQ9kP4cwt8azXc4in32Z8R6vzbAnaX3lAV5fAOfTcH7VYYxIfd
FZkh4GQcU/EfaMUum1OPUylXeMlWlWxtx/7I/k/lswSigT+nXv/qQM1K8Xvf
5wh+TrS3NezshOLdk6v9OFiI6c8r43v0HerN4waC81jgWxc/1NXVhejNqU4W
81nws8qwiJTooeZOpa0LFwvjB992XXL/geNNn/NvL2DBcTdJX83shblC11rD
hSy0vye+NWL9eHne9uLWRSzMWNc/33LzJ6IeBAl/p7zt0KI5i7wB0BoWF93m
ZuFolJhliuAvPDo9USS4mIXr685v/HZ2CEsnfNJCKUsP6PM2ag/j/XUpFz4e
FlYuG+Ym08MYfXEn+S5lrqLnSeLhI3DdO3O2h7KNbF7TYs1RODk96dLgZeGt
hmlk4fgo9NXvjkdTHvspvLwn+DeW/4r4PEI5Q/fofNrhPzBKMFA5uIQFd3Xv
l+k9f2CvoWvoRVms9diXaO8x9AeU5jMoKyp40YR2j2NsxpjNuZSFs+urpzjr
xtGtvEduH+WxMv9OB48JGPC2q16h/IzL2FFHYhLhK7YaRlFe2ZYRNY9MItbV
Mraa8oJbHnr7rkwhq2Wk8y9ljtfGSZ0rpmEzdM1Hio+Fq2FJ/isY07AOiFp0
knLBtvvc/HYzeGASYOlMmf/YVem7fLNQ5Xqh9Ixyy/ZPdTfyKVtG/sqlnPwC
El3Gf2F6I/ppE+VzSfL86+b+ItpRbt045Tverzxa3szBSWH9zZXLWEjsXfec
T4uNNA7Hm9sp34/wNmk7zsaNmZc//9lcZ1Dy/Sk21CtSz8pQFsnPT9b+jw1H
Xv8DOyg/DDhT4mfKxnz6Ks5dlC/Jh47w3GDDeuV1D1nKG71WqS+KY0NkOs9+
P+W5vW5LGxPY+PnoU+s/Nw1+r417y4ZqS4WmEuXA/9LOHUlhIzPPbZMyZfZW
nWve+WykaOa2HqDcUhPwYn4dG1aRqWoqlLN9JszqGtjQHlBL/Wfa/vNbor+w
oXeueL0qZc1YmXSVNjZGPzpM/HOuS+VHjz42XH1T49UoB2+XCzg1wIZX4b2V
Ryhf6QzXExtiY05Lzf2fN2tdbqf/YcMy5IbBUcpcnPUxgRNUfpPh4n/uyNhv
bTLNBterE9vVKedbR+/Y+ZeN28Yhz/45RJR3jM1mY2Nk6XwNyv8DjJkwZw==

          "]]}, Annotation[#, "Charting`Private`Tag$18946#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.803927968, 0.7143053679999999, 0.25752896]], 
         LineBox[CompressedData["
1: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
dt44TdNYfmj8WQ/f/wNfoh7B
          "]]}, Annotation[#, "Charting`Private`Tag$18946#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0.897705832, 0.42052675199999995`, 0.185455136]], 
         LineBox[CompressedData["
1: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
r1u3/vP/AYcXkVY=
          "]]}, Annotation[#, "Charting`Private`Tag$18946#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 0.7692307692307692, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Concentration (nM)\"", TraditionalForm], None}, {
        FormBox["\"Time (hours)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, LabelStyle -> Directive[
       GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"An example polymer reaction\"", 16, StripOnInput -> False],
        TraditionalForm], PlotRange -> {{All, 1}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"ac", "abac", "ababab", "ababac", "bababa"}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\"", {
                 Directive[
                  GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
                 FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.25555456, 0.21676151999999999`, 0.76077736]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.305600624, 0.5847837119999999, 0.740168904]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.519447976, 0.730803072, 0.435427984]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.803927968, 0.7143053679999999, 0.25752896]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.897705832, 0.42052675199999995`, 0.185455136]], 
                    RectangleBox[{0, 0}, {12., 12.}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {12., 12.}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0.5], FontSize -> 16, FontFamily -> "Helvetica"], 
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.25555456, 0.21676151999999999`, 0.76077736], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17036970666666668`, 0.14450768, 0.5071849066666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.25555456`", ",", "0.21676151999999999`", ",", 
                    "0.76077736`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.25555456, 0.21676151999999999`, 0.76077736]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.25555456, 0.21676151999999999`, 0.76077736], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.305600624, 0.5847837119999999, 0.740168904], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20373374933333332`, 0.38985580799999997`, 
                    0.49344593600000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.305600624`", ",", "0.5847837119999999`", ",", 
                    "0.740168904`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.305600624, 0.5847837119999999, 0.740168904]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.305600624, 0.5847837119999999, 0.740168904], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.519447976, 0.730803072, 0.435427984], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3462986506666667, 0.48720204800000005`, 
                    0.2902853226666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.519447976`", ",", "0.730803072`", ",", 
                    "0.435427984`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.519447976, 0.730803072, 0.435427984]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.519447976, 0.730803072, 0.435427984], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.803927968, 0.7143053679999999, 0.25752896], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5359519786666667, 0.4762035786666666, 
                    0.17168597333333332`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.803927968`", ",", "0.7143053679999999`", ",", 
                    "0.25752896`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.803927968, 0.7143053679999999, 0.25752896]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.803927968, 0.7143053679999999, 0.25752896], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.897705832, 0.42052675199999995`, 0.185455136], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5984705546666667, 0.280351168, 0.12363675733333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.897705832`", ",", "0.42052675199999995`", ",", 
                    "0.185455136`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.897705832, 0.42052675199999995`, 0.185455136]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.897705832, 0.42052675199999995`, 0.185455136], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12.`"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822948092771626*^9, 3.8229482205887904`*^9, 3.8230248897165747`*^9, 
   3.8232837201324935`*^9, {3.823284063375716*^9, 3.8232840893063583`*^9}, {
   3.8232841368228455`*^9, 3.8232841765462275`*^9}, 3.823284243101886*^9, {
   3.8232843037877283`*^9, 3.8232843359081078`*^9}, 3.8232843729638786`*^9, {
   3.8232844053728848`*^9, 3.823284454482291*^9}, 3.824325226998889*^9, 
   3.824325316724276*^9, 3.824325525291975*^9, {3.8243256446207943`*^9, 
   3.8243256708319263`*^9}, 3.8243260552315016`*^9, {3.824327507858472*^9, 
   3.8243275286094856`*^9}, {3.8243286593656144`*^9, 3.824328701306294*^9}},
 CellLabel->
  "Out[607]=",ExpressionUUID->"2d3cfe5b-489b-4a04-a660-714ec2656011"]
}, Open  ]],

Cell["\<\
Display final concentrations of polymers based on their lengths. (Note: the \
code assumes that all monomer names have the same number of characters.)  \
\>", "Item",
 CellChangeTimes->{{3.8229462826757607`*^9, 3.8229464156362715`*^9}, {
  3.8229464689040995`*^9, 3.8229465154459076`*^9}, {3.8229465979757524`*^9, 
  3.822946615970695*^9}, {3.8229467848721*^9, 3.822946831504059*^9}, {
  3.8229471647379427`*^9, 
  3.8229472361617985`*^9}},ExpressionUUID->"3c555411-0e8e-4416-8672-\
f3b2d79410b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polymerBinned", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "maxlength"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "[", "polymers", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"polymerBinned", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"StringLength", "[", 
         RowBox[{"ToString", "[", 
          RowBox[{"polymers", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "/", 
        RowBox[{"StringLength", "[", 
         RowBox[{"ToString", "[", 
          RowBox[{"monomers", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"polymers", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"SIMtime", "*", "60", "*", "60"}], "]"}], "/", 
       RowBox[{"10", "^", 
        RowBox[{"-", "9"}]}]}], "/.", "sol"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.822937492764285*^9, 3.8229375338257484`*^9}, {
   3.822937673388638*^9, 3.822937770948389*^9}, {3.822939021174966*^9, 
   3.8229390212743425`*^9}, {3.8229402213502865`*^9, 3.8229402287341228`*^9}, 
   3.8229403405657897`*^9, 3.822946913031541*^9, {3.822947009032297*^9, 
   3.8229470139995084`*^9}, {3.822947050919723*^9, 3.822947067932946*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"7e86c903-2eb9-40f5-bd7a-243d4e4612bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"polymerBinned", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Range", "[", "maxlength", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Polymer length\>\"", ",", "16"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Concentration (nM)\>\"", ",", "16"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.82293778320483*^9, 3.8229377900809155`*^9}, {
   3.8229390494907913`*^9, 3.8229390495754166`*^9}, {3.8229402708723783`*^9, 
   3.8229402939391513`*^9}, 3.8229403492746773`*^9, 3.8229472596970053`*^9},
 CellLabel->
  "In[610]:=",ExpressionUUID->"24c28ea8-2831-4d52-af94-9bc31c192e74"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.022262193865058275`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{47.309411764705885`, 94.35914755240694}, {
            78.19546875198793, 79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.022262193865058275`]& ,
         TagBoxNote->"0.022262193865058275"],
        StyleBox["0.022262193865058275`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.022262193865058275`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             8.655456677739268}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{98.8935822542245, 
            145.94331804192555`}, {-111.25330023197047`, 79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8.655456677739268]& ,
         TagBoxNote->"8.655456677739268"],
        StyleBox["8.655456677739268`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8.655456677739268, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.07593969882508106}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{150.4777527437431, 197.52748853144416`}, {
            77.01755746366918, 79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.07593969882508106]& ,
         TagBoxNote->"0.07593969882508106"],
        StyleBox["0.07593969882508106`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07593969882508106, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             3.8813721343533483`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{202.0619232332617, 
            249.11165902096278`}, {-6.489711104075653, 79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.8813721343533483`]& ,
         TagBoxNote->"3.8813721343533483"],
        StyleBox["3.8813721343533483`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.8813721343533483`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             0.1951411820240092}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{253.6460937227803, 300.69582951048136`}, {
            74.40177320266585, 79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.1951411820240092]& ,
         TagBoxNote->"0.1951411820240092"],
        StyleBox["0.1951411820240092`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1951411820240092, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             2.656301817774617}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{305.2302642122989, 352.28}, {20.393508523159902`,
             79.18399536059097}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.656301817774617]& ,
         TagBoxNote->"2.656301817774617"],
        StyleBox["2.656301817774617`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.656301817774617, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
      StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Polymer length\"", 16, StripOnInput -> False], 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["1", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["2", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["3", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["4", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["5", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["6", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.8229377906991816`*^9, {3.822939025355544*^9, 3.822939050008308*^9}, 
   3.8229402332987723`*^9, {3.8229402859109087`*^9, 3.8229402944937916`*^9}, 
   3.8229403520342236`*^9, 3.8229406227390585`*^9, 3.822940653689848*^9, 
   3.822943081745063*^9, 3.8229473010059586`*^9, 3.8229480929499707`*^9, 
   3.8229482207736435`*^9, 3.8230248898793736`*^9, 3.823283720353472*^9, {
   3.8232840635502896`*^9, 3.8232840895311832`*^9}, {3.8232841410614767`*^9, 
   3.823284176838544*^9}, 3.8232842432960677`*^9, {3.8232843039968586`*^9, 
   3.8232843363404207`*^9}, 3.823284373251749*^9, {3.8232844240173984`*^9, 
   3.823284454889234*^9}, 3.824325227230928*^9, 3.824325317119646*^9, 
   3.8243255254789104`*^9, {3.8243256448221073`*^9, 3.824325671099883*^9}, 
   3.824326055485712*^9, {3.824327508147483*^9, 3.82432752894015*^9}, {
   3.8243286597052765`*^9, 3.824328701490079*^9}},
 CellLabel->"Out[610]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
qUXeI/foW5jZRu7LA5aG5rSRG/H1eCib1dIXz8K78PW009RJIB/qnm9DGmA9
Kuv1RrMTdDZN8NMCqmf9jBZkMq2+ouhDR862YZWB+gtoJ0mm9EsSnTOfMzgF
ZGl6sRY2+xUpRIcQN0nWUEI7W+mF+hi0d0mQ2lS9QvkzzQ3mz3eoyVn8avUR
ul1/Wm/WXHf/vthL1oNWd/+9mvd7fiNqeToYmNpslDM6Kys/jHW1vo143+QB
vVbvVRjded+wAvu9Uos29HX+CdEG1n/Qw9mvnSK8elHzlqcRAFh158iHt+Fp
BOirJ0XSsPy0Wr2e653WxhGongW2218YOi2EmNPuZ3bLQ23Xhw7fJNITsMkU
oNLZfww+0OfWG51R1udTG27oaAPGafhRdUxC2IFBBwYIGK3OPW8lwnmsPTVR
TF0toE0PgFwTKQET6vVaMJ/fVZPnt/Uu6TGVsX7ayJyk/CtJc0IVC8kWKsz0
7pZA82eENMMRLq/yV3+icmSmkeXG5nb1vqcUm9vV+d7R8ljvy9y6+ojQNcXR
1jlnNopbw+OzF7oGVLgZ1DwI8ocl+bL68FW6fOtoG/tuhmf/S4VQMMs3S9Xa
/wv3u/4=\
\>"],ExpressionUUID->"08219a80-1686-497d-b451-223da11eec1d"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              4.660727185298031}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.309411764705885`, 
             87.61515818483139}, {-109.25330023197043`, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 4.660727185298031]& ,
          TagBoxNote->"4.660727185298031"],
         StyleBox["4.660727185298031`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4.660727185298031, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              2.774861912326915}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{91.42021873390065, 
             131.72596515402614`}, {-32.399166625959666`, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.774861912326915]& ,
          TagBoxNote->"2.774861912326915"],
         StyleBox["2.774861912326915`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.774861912326915, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              0.2215531551483127}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{135.53102570309542`, 175.83677212322095`}, {
             71.65510234758388, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.2215531551483127]& ,
          TagBoxNote->"0.2215531551483127"],
         StyleBox["0.2215531551483127`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.2215531551483127, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              0.26233368421226627`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{179.6418326722902, 219.9475790924157}, {
             69.99318499106606, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.26233368421226627`]& ,
          TagBoxNote->"0.26233368421226627"],
         StyleBox["0.26233368421226627`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.26233368421226627`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              2.301045708551855}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{223.75263964148496`, 
             264.05838606161046`}, {-13.089869004581288`, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.301045708551855]& ,
          TagBoxNote->"2.301045708551855"],
         StyleBox["2.301045708551855`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.301045708551855, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              0.2110424948879148}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{267.8634466106797, 308.1691930308053}, {
             72.08344030974771, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.2110424948879148]& ,
          TagBoxNote->"0.2110424948879148"],
         StyleBox["0.2110424948879148`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.2110424948879148, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
              0.27249377439100025`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{311.9742535798745, 352.28000000000003`}, {
             69.57913371219854, 81.18399536059098}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.27249377439100025`]& ,
          TagBoxNote->"0.27249377439100025"],
         StyleBox["0.27249377439100025`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.27249377439100025`, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.4107501820830298, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox[
         RotationBox["ac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         RotationBox["abac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         RotationBox["ababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         RotationBox["ababab", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         RotationBox["ababac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         RotationBox["babac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         RotationBox["bababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]], "Output",
  CellChangeTimes->{{3.822940119480737*^9, 3.822940159052929*^9}, 
    3.8229406119515905`*^9, 3.822940649578617*^9, 3.8229430815289693`*^9, 
    3.822947300890051*^9, 3.8229480925867147`*^9, 3.8229482204039373`*^9, 
    3.8230248896319385`*^9, 3.8232837200043135`*^9, {3.8232840632788353`*^9, 
    3.8232840889975653`*^9}, {3.8232841270488043`*^9, 3.823284176289907*^9}, 
    3.823284242834103*^9, {3.8232843036058407`*^9, 3.823284335623282*^9}, 
    3.823284372645008*^9, {3.8232844051382*^9, 3.82328445423246*^9}, 
    3.8243252268543463`*^9, 3.824325316525241*^9},ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
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
pPpUpy+uWcO2oCZWDGfnciQWpy/VftZ0jB3mp2SEemAjXwVE2ouVaFyjXVlE
pRIC0G/+vc/l+NJX0gtwUcQwsHZP7KT4yGM9KwvodKZqXXGT9mWo22mzEe9D
FSsLJXgKs7Bbp2NxWJUOBaGqVljDHxHki/sL7O2U/hRM2alq3EoXrFG+1L6d
YItDT0cryCAYY9WYtpO/KkUmyEIID1uLNddTG8RIkE5X2XSBr6UKF8Iw+dxX
EwNwQ7HC2tTZzppOzfbeUAmlZ07hdH0i6ivoR/PhGPYSZZifRCqwtnxoU91D
Sk+3Vmv5WaW1tDDnn/lFPUX4pY/5uaCTM6j+1ODzi9KM5cX52M+UBXyqaW3o
/ZR/e6ozF4LLhWbTcTMtSLfX77/68uj//v0b/pcdsIuNh/uDfs94mN9YMf/g
ivkHtjjf79unT5/O44e52aEBzaK9k1nNNCszve3p1+4qdhhrdzDa7Y+DjbT7
6Qba2Wh8ZlU9nNhkr8m5Tu+a0vZnhNYbKecnY6nGUo1cKhPqWyVNq9zbHKqF
Zg3gVuSoYDvJjTI0jbJmds3LPt+8XUqYvj9yzLMwa62GfTWUTDEpZuyyayh/
vwG6P4y514b7IDLcRlxtvFEjmcfcx9zH3MdZ5k3W+Jj7mPs4zt98jY+Oe9tn
+6NiexTlQLjEJ8jZd0aKTiek3B+UzS8uh3thtfvRotPJV6pDYVlnxf2+Qrem
z2zQz/i2g9ZU6cbNuuneH7RmU7VC2whoAr6sV1je0a2Gts3q3pBRfsWltSpK
s3iv8Nc1UY5ep6bFqk7lAY6mbeOLS3XBXHitMHZW+IVruJWHR+kGuAZ4W3lK
WQFPpWdfIUMNNNwqeQV4KlnNNPzeSNG9zXtzt2QJ25YbYYMOX0D6e2W7Uaud
zstPoUMEpj1Z/iKQlgPfHanOyvWMoWsndMofh2qBLu4X7UKXngnqga6euqu3
320mVt/WPLZbZ8pqnirHmhmjEywSjjbZO7XxZvPeD0aKpnIKpAb4sBZoYpas
DxrLO6NFI7+JbjNqv4nVeHx60K5VjL2Nz7LqvQ/JX4o9e+VZo661Y52qs3rW
jkVeUq3YLKG1HaUG1Vk3obNPqiNH+wzxLc5RqTKrYY6aiNt9no4/dTlpeNxP
5gWwUitVKSPPBxFlet5cQVmXrLW+LuuS+dfyyKImncxj9i1FVDtpO/cfCoSn
0bubc1OUC7Je6y4/Fy99czIq/R5J2tM3I/ZE1J7xTwwZRfW7hKPSSXgoHHfQ
OlQbq52e9Qw7/dYkcK/Ladp/59hJuszjs/Z66DSest8RylSsxyCpB8rx6Xst
P/s2nb7fttqy5C8WSyP2l+LbS2XRnlso7csjfj6yUle7cd61Xwz8cRMohlch
/jdfef4aHvXdfgZd5V7aFVO2GkQ++E++1nP2YewXq2s0PqMZLrfheodXyL3i
hJRKZb8f9ClzFd/Ym2I9L/3yOJ0vhht5/Wevyq+fw9Fg2PHff05NnEeEojja
lVVRnOkHH8E6XybehfzpTbZd8MVSlhz2twgj2gGGUo9Uue12vbG+rMOuJzbD
fWd1hP068nmft2wmAu0ymZejzKVpl2LcGll3h75ul3078ud6Uhj091j9HDZ6
n0RvFqZYom+r7+n189zoDRunaM8tUsjq701s9YnA2pzX+vZof0Qizu6tm3mf
1i6GprVpGfXsT3ot3ukepiX3F7K7rDvX5kbeORntWCquNvO3QjbmXP3LEUZ0
5/rbebQO+pyzvo23877M2pjL77xsNrObDzdWlX47J6D19bmdU85a+tv+k6s1
LTKwdz+G4Zd1oBDeeVheWlyYn59Pv7CZm59fWFhc2vo7D/0cPAPsX2bX8Ogz
wguLi0v6LC5yNx9GjGGe29Px7Xm61zCtXKycmn9H0lq2Hr3DkR/YsTzhdwpA
X/K9KHxbtIw0fj9dA6u+KRlvsFXFcDLf9nx1nPG2R6H8KyETcGLgUuo3MrF4
MrpHBuM3lWp95/b2Kq9dPJWTjx/egkdWT4CeK6vf923rSV8/0vArqEDYaG71
tNtPc2/FSkZ0q29K9dPsVaxkOA8PyPJJqySNnVu+8isu39X0K6h0MhvAGWKj
OJsaHkedLeN3+PElkfLzGkfkp5pW+S2S7Z0IQ9VgRcP8wpLxE3YviTzLh0hL
ByYXegAnQ9fZdB5LIyojqymW0/+RhzetRPICyQsaRWkrHLwdyMDO/RI4VQvz
oR4L58W+3znvONLaJmCoA01s/R3T0il/5z5Vhx1rMBS2l9Prgn5MYbf9oFpt
1gX9mEJ9KNTJk2bDgul1Z9rlx7WdESd8sa6+NqZ+dMX9ZyvuTw74/nDN0VT/
irh1rP23zItWtuf/cFY6RQ==\
\>"],ExpressionUUID->"43ca2b8d-0a8b-4f53-aca6-bbd174bbafd8"],
 ",",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              0.0032592678548669287`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.30941176470588, 94.35914755240694}, {
             77.55118335525384, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.0032592678548669287`]& ,
          TagBoxNote->"0.0032592678548669287"],
         StyleBox["0.0032592678548669287`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0032592678548669287`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              4.661148820046658}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.89358225422447, 
             145.94331804192552`}, {-112.25330023197041`, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 4.661148820046658]& ,
          TagBoxNote->"4.661148820046658"],
         StyleBox["4.661148820046658`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4.661148820046658, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              0.09792711687749128}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{150.47775274374308`, 197.52748853144413`}, {
             73.69356028482328, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.09792711687749128]& ,
          TagBoxNote->"0.09792711687749128"],
         StyleBox["0.09792711687749128`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.09792711687749128, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              2.7917965685801103`}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{202.0619232332617, 
             249.11165902096272`}, {-36.079008257772585`, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.7917965685801103`]& ,
          TagBoxNote->"2.7917965685801103"],
         StyleBox["2.7917965685801103`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.7917965685801103`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              0.4396472928336349}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{253.64609372278028`, 300.6958295104813}, {
             59.768794400632004`, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.4396472928336349]& ,
          TagBoxNote->"0.4396472928336349"],
         StyleBox["0.4396472928336349`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4396472928336349, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              2.8358731671551216`}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{305.23026421229883`, 
             352.2799999999999}, {-37.87508691894969, 78.18399536059097}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.8358731671551216`]& ,
          TagBoxNote->"2.8358731671551216"],
         StyleBox["2.8358731671551216`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.8358731671551216`, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.43075018208302984`, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Polymer length\"", 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox["1", TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox["2", TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox["3", TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox["4", TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox["5", TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox["6", TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]],
  CellChangeTimes->{
   3.8229377906991816`*^9, {3.822939025355544*^9, 3.822939050008308*^9}, 
    3.8229402332987723`*^9, {3.8229402859109087`*^9, 3.8229402944937916`*^9}, 
    3.8229403520342236`*^9, 3.8229406227390585`*^9, 3.822940653689848*^9, 
    3.822943081745063*^9, 3.8229473010059586`*^9, 3.8229480929499707`*^9, 
    3.8229482207736435`*^9, 3.8230248898793736`*^9, 3.823283720353472*^9, {
    3.8232840635502896`*^9, 3.8232840895311832`*^9}, {3.8232841410614767`*^9, 
    3.823284176838544*^9}, 3.8232842432960677`*^9, {3.8232843039968586`*^9, 
    3.8232843363404207`*^9}, 3.823284373251749*^9, {3.8232844240173984`*^9, 
    3.823284454889234*^9}, 3.824325227230928*^9, 3.824325317119646*^9, 
    3.8243255254789104`*^9, {3.8243256448221073`*^9, 3.824325671099883*^9}, 
    3.824326055485712*^9, {3.824327508147483*^9, 3.82432752894015*^9}},
  ExpressionUUID->"da9ed1b4-6cd9-45b1-990f-56c5401bdbff"],
 ": a,b,c:2,1,1\n",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              2.7857697810581867`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{55.959999999999994`, 
             86.46441790067905}, {-62.131867860504755`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.7857697810581867`]& ,
          TagBoxNote->"2.7857697810581867"],
         StyleBox["2.7857697810581867`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.7857697810581867`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              2.706899713648784}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{89.20944776241512, 
             119.71386566309417`}, {-58.161041701201626`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.706899713648784]& ,
          TagBoxNote->"2.706899713648784"],
         StyleBox["2.706899713648784`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.706899713648784, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              0.90247127024891}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{122.45889552483024`, 152.96331342550928`}, {
             32.685484756675436`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.90247127024891]& ,
          TagBoxNote->"0.90247127024891"],
         StyleBox["0.90247127024891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.90247127024891, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              0.9433008175218293}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{155.70834328724538`, 186.21276118792443`}, {
             30.629862900258928`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.9433008175218293]& ,
          TagBoxNote->"0.9433008175218293"],
         StyleBox["0.9433008175218293`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.9433008175218293, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              3.6676505728405093`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{188.9577910496605, 
             219.46220895033954`}, {-106.5314155269079, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 3.6676505728405093`]& ,
          TagBoxNote->"3.6676505728405093"],
         StyleBox["3.6676505728405093`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3.6676505728405093`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              0.1583226726633216}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{222.20723881207562`, 252.71165671275466`}, {
             70.15070844366977, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.1583226726633216]& ,
          TagBoxNote->"0.1583226726633216"],
         StyleBox["0.1583226726633216`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1583226726633216, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
              0.12631749397288725`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{255.45668657449073`, 285.9611044751698}, {
             71.76205486381998, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.12631749397288725`]& ,
          TagBoxNote->"0.12631749397288725"],
         StyleBox["0.12631749397288725`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.12631749397288725`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
              0.7797149017744227}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{288.70613433690585`, 319.21055223758486`}, {
             38.865829406684405`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.7797149017744227]& ,
          TagBoxNote->"0.7797149017744227"],
         StyleBox["0.7797149017744227`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.7797149017744227, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 
              0.9814744974572287}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{321.95558209932096`, 352.46}, {
             28.707954477162055`, 78.62168946184188}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.9814744974572287]& ,
          TagBoxNote->"0.9814744974572287"],
         StyleBox["0.9814744974572287`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.9814744974572287, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.3707501820830299, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox[
         RotationBox["ac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         RotationBox["abac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         RotationBox["ababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         RotationBox["ababab", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         RotationBox["ababac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         RotationBox["baba", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         RotationBox["babab", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {8., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
        FormBox[
         RotationBox["babac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {9., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
        FormBox[
         RotationBox["bababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]], "Output",
  CellChangeTimes->{{3.822940119480737*^9, 3.822940159052929*^9}, 
    3.8229406119515905`*^9, 3.822940649578617*^9, 3.8229430815289693`*^9, 
    3.822947300890051*^9, 3.8229480925867147`*^9, 3.8229482204039373`*^9, 
    3.8230248896319385`*^9, 3.8232837200043135`*^9, {3.8232840632788353`*^9, 
    3.8232840889975653`*^9}, {3.8232841270488043`*^9, 3.823284176289907*^9}, 
    3.823284242834103*^9, {3.8232843036058407`*^9, 3.823284335623282*^9}, 
    3.823284372645008*^9, {3.8232844051382*^9, 3.82328445423246*^9}, 
    3.8243252268543463`*^9, 3.824325316525241*^9, 3.8243254565260344`*^9, 
    3.824325525019173*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
veJsjy4D7V5Zrh1/PmZaKlppLJzPnkx+x54nJDZ1uFb7ecLCeT18MtXT1Mir
67PNqtWl5q094fmon+iGkdOrQ+ep4xt1Z0ebd3e/qP0MqK6d2XJd+hl99wTz
eMQ5Xif2xHuIk2yxZ9nHWfYxKe2dMu3tbU8y9BH9evh9jZPJm3yx7hfZ1OFZ
nNrzSeYt+GRnBmUFn1w92+3vSfMB4iklD0UvPXsYCnf9J1NfK6ErcKO3I1pR
XaeHN7M98ZaywFPBm2lqUG/LYZNX6F8ZhXOM56h2VXfIMpvwHK8cjytQlNHf
LpNbL3XvOtCz1aBWRvIyLkZFxz3g100bV04MJ01mQaeV0l5mDZaYrYQULZSi
0+7VuW+ep9mnwa+k7EuWLVZihjKDFua6a55O+nlubBx0Egdz+f4hDob0sDCq
YzTuVHrwaOxvwG+kIxv/Gf0y3oxnGYei79GUL1YfG9W4c+r0L+4NpVn4osvU
e4mPzgAv43bH+ZG8jD6F6rCmt3Ae/lLqTHIyT3QkvVO+KTk/3XfKQ2daHUO/
tz+ZNOukTqdRcdMZBc3Z7CBluRcxVXeDvoM6i/Vq3CW6sLfhZqY431G2g+wt
5ili4xR4/1rmcW7gBIUM7qkGNWV8N4nfPFnd+KX3qHbpvQG7SydonaGdcrEm
O5wxq52Z77rxTZIL16/3KmIPV25103N0dlSdwtTpD4/KP+fPmmf1D8oSWxl9
5q/r1pPbcS/RYz8pC5zxRPrE7OEpb6ZmtsFeruNl8RX9GCLLVLIsshqewVus
lxUpWSvF8jLUVP1jqsViQe+mzM1J9dJBzslQ3TuqOlzM+yb3SROV/x6mP52y
Z++Q1FEJHmXLVQY4uhZc2Fshc3rewTOOUGBJuqPrxEW947HoKnH+NzJmpuhS
mfxrVf0t6h2K+1az1pWJj6pEm8oEzyrS5ahI74/d/a3M788nqURPc3aZ6d39
T916r25W5X9WhzKjuuU/LI/6KsJBuxxNR3MVYYN2eWRcauiktJETs1HxoU47
jCckdfuHRk7MVrO0O7kme9YJfuWtvI7rh5x45HdzNHKiv5b8VZl910eqOtYy
nab34Jbl/mT9UFWdl3VZVVe983bczdQUvyEwc3V3uJpOtA7QHWq8QF3I9Zfg
vi+nvypLc7HrXMO/O7CV6NWpxRLcCKq6TtRXsk9vdq4nC4+iVrOV+pu1/Px9
slFZaF90poP87YG3uJq8Qbx/p5PH50NneeqgPEblqc3T02y+Woddug/sZL7T
GkXv/6yKPO34FvxO4bynFffx/cBF3Z8u6m2/+aqkpr3QsslnEvupw46X7b2E
uv2JviV7qI7sHq4jl+Ke8JhTmH5m3wOVZMP3g8O3CQ8neavyGnUPWFulmN0y
PJrozCvC5m/9hv2ovmt7qPJr/I5v+M7iQpLeiCqvwZu/4buNh0Tn6Gqu8RvB
ZbwRqSMmnfYcNrx7d7C/55s2/tby9s7O7u7efv3v3rm1P3CAC5GtQ8bu3t6+
fvb2eAquZcfIK8snaqZPf7miFIFOg2NsH1iP3lcsNyezzVLfkvjcVPYYfosS
Uex7jArvshwgHX9+fBJ5ZNDH/d7IDNY5M/SF3O7MjH2Sdw3sd0S3Z+Ipf4PA
gP5zKq2Pew9gHLTpbvWngzburfFZoE0eZ6aDHqPGdNIftvrpcOa/92zM9BfK
kecB7ZgzGEz/uwznq3whXfhMdBM1gyW1c1whixnM9WlPeqY+HX6vGDtllhzZ
7vCMr5VuII69kbAs/O4YnIPZ+ohTd4d2vtoH1XdkTHCPMx3H7u/bEXmFt3qD
LN0fjbl/mQ7v2oCdGcCNpNHqSnHwm6sWqenVAUszPA8O2h5d439zahbrTpoG
YHz/aDr/0Qpwkm2U35+LrvvrURJ0WU+4n4x/Hi78Zdj5oNsbmDtkT/sH6d7Z
E1DfN5tzwXdZP1jGBJL80TKlg/Tn7bxpiaSnkZ7A+bnLzDFZhKdsZSfkpfNq
we29Y+SG3NeYOPQdBtNHvyZX1x15T/bqkyWtwe/eHJ11jDu3nA5j+o69ozKN
MaeN02G77LOrnCJVC0O/M/CPMVAHcwmd9A/nDONP+qajXTX8UIYw9pxuRm2M
ygaOOWWbwcoOx/yxp2P3Z/cNvqvetL8YufrF6lsT/n7sCvt4ZqQUbOTpYzkd
vbaeGZNROHwqcnno+cqY8XHP066/cCyny0/t4N/4so7rE7SKc/8DuaRChQ==
\
\>"],ExpressionUUID->"230025d6-3064-46c6-b277-98180a3954df"],
 ",",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              1.7032646237099663`*^-8}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.30941176470588, 94.35914755240694}, {
             77.68399478210587, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 1.7032646237099663`*^-8]& ,
          TagBoxNote->"1.7032646237099663*^-8"],
         StyleBox["1.7032646237099663`*^-8", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.7032646237099663`*^-8, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              2.7857816371936313`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.89358225422448, 
             145.94331804192555`}, {-16.930370729162775`, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.7857816371936313`]& ,
          TagBoxNote->"2.7857816371936313"],
         StyleBox["2.7857816371936313`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.7857816371936313`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              0.12349116879766667`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{150.4777527437431, 197.52748853144416`}, {
             73.48982647905417, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.12349116879766667`]& ,
          TagBoxNote->"0.12349116879766667"],
         StyleBox["0.12349116879766667`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.12349116879766667`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              2.865222386322143}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{202.0619232332617, 
             249.11165902096278`}, {-19.628441539932084`, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.865222386322143]& ,
          TagBoxNote->"2.865222386322143"],
         StyleBox["2.865222386322143`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.865222386322143, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              1.80850366599622}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{253.6460937227803, 300.69582951048136`}, {
             16.261224227099298`, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 1.80850366599622]& ,
          TagBoxNote->"1.80850366599622"],
         StyleBox["1.80850366599622`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.80850366599622, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              5.592425887819568}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{305.2302642122989, 
             352.28}, {-112.25330023197047`, 78.18399536059091}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 5.592425887819568]& ,
          TagBoxNote->"5.592425887819568"],
         StyleBox["5.592425887819568`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5.592425887819568, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.43075018208302984`, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Polymer length\"", 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox["1", TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox["2", TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox["3", TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox["4", TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox["5", TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox["6", TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]],
  CellChangeTimes->{
   3.8229377906991816`*^9, {3.822939025355544*^9, 3.822939050008308*^9}, 
    3.8229402332987723`*^9, {3.8229402859109087`*^9, 3.8229402944937916`*^9}, 
    3.8229403520342236`*^9, 3.8229406227390585`*^9, 3.822940653689848*^9, 
    3.822943081745063*^9, 3.8229473010059586`*^9, 3.8229480929499707`*^9, 
    3.8229482207736435`*^9, 3.8230248898793736`*^9, 3.823283720353472*^9, {
    3.8232840635502896`*^9, 3.8232840895311832`*^9}, {3.8232841410614767`*^9, 
    3.823284176838544*^9}, 3.8232842432960677`*^9, {3.8232843039968586`*^9, 
    3.8232843363404207`*^9}, 3.823284373251749*^9, {3.8232844240173984`*^9, 
    3.823284454889234*^9}, 3.824325227230928*^9, 3.824325317119646*^9, 
    3.8243255254789104`*^9, {3.8243256448221073`*^9, 3.824325671099883*^9}, 
    3.824326055485712*^9, 3.824327508147483*^9},ExpressionUUID->
  "0582c2c0-5f28-4a1b-8800-ac993ad155ce"],
 ": \na,b,c:3,2,1\nIncreasing the concentration of both tiles \
\[OpenCurlyQuote]a\[CloseCurlyQuote] and \[OpenCurlyQuote]b\[CloseCurlyQuote] \
relative to tile \[OpenCurlyQuote]c\[CloseCurlyQuote] will result in longer \
polymers. Keeping tile \[OpenCurlyQuote]a\[CloseCurlyQuote] at a larger \
concentration relative to tile \[OpenCurlyQuote]b\[CloseCurlyQuote] will \
result in a higher fraction of polymers with tile \[OpenCurlyQuote]a\
\[CloseCurlyQuote] on one end that can displace the blade of the sword.\n",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              0.9803922887185132}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.309411764705885`, 82.57798861480076}, {
             48.77620039982744, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.9803922887185132]& ,
          TagBoxNote->"0.9803922887185132"],
         StyleBox["0.9803922887185132`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.9803922887185132, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              2.822622845114259}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{85.83827053402005, 
             121.10684738411494`}, {-11.973053685368498`, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.822622845114259]& ,
          TagBoxNote->"2.822622845114259"],
         StyleBox["2.822622845114259`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.822622845114259, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              3.259729904956628}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{124.36712930333424`, 
             159.6357061534291}, {-26.387062696677475`, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 3.259729904956628]& ,
          TagBoxNote->"3.259729904956628"],
         StyleBox["3.259729904956628`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3.259729904956628, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              2.9756068709605508`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{162.8959880726484, 
             198.16456492274327`}, {-17.017843234020475`, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.9756068709605508`]& ,
          TagBoxNote->"2.9756068709605508"],
         StyleBox["2.9756068709605508`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.9756068709605508`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              5.759877960790589}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{201.42484684196256`, 
             236.69342369205745`}, {-108.8317539798454, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 5.759877960790589]& ,
          TagBoxNote->"5.759877960790589"],
         StyleBox["5.759877960790589`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5.759877960790589, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              2.269287154861064}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{239.95370561127675`, 275.22228246137166`}, {
             6.273701762746839, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.269287154861064]& ,
          TagBoxNote->"2.269287154861064"],
         StyleBox["2.269287154861064`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.269287154861064, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
              4.201770129465398}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{278.48256438059093`, 
             313.7511412306858}, {-57.45170917020205, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 4.201770129465398]& ,
          TagBoxNote->"4.201770129465398"],
         StyleBox["4.201770129465398`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4.201770129465398, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
              2.3445016392340574`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{317.0114231499051, 352.28}, {
             3.7934346722902035`, 81.60554161271607}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.3445016392340574`]& ,
          TagBoxNote->"2.3445016392340574"],
         StyleBox["2.3445016392340574`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.3445016392340574`, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.39075018208302986`, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox[
         RotationBox["a", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         RotationBox["ac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         RotationBox["aba", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         RotationBox["abac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         RotationBox["ababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         RotationBox["ababab", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         RotationBox["ababac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {8., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
        FormBox[
         RotationBox["bababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]], "Output",
  CellChangeTimes->{{3.822940119480737*^9, 3.822940159052929*^9}, 
    3.8229406119515905`*^9, 3.822940649578617*^9, 3.8229430815289693`*^9, 
    3.822947300890051*^9, 3.8229480925867147`*^9, 3.8229482204039373`*^9, 
    3.8230248896319385`*^9, 3.8232837200043135`*^9, {3.8232840632788353`*^9, 
    3.8232840889975653`*^9}, {3.8232841270488043`*^9, 3.823284176289907*^9}, 
    3.823284242834103*^9, {3.8232843036058407`*^9, 3.823284335623282*^9}, 
    3.823284372645008*^9, {3.8232844051382*^9, 3.82328445423246*^9}, 
    3.8243252268543463`*^9, 3.824325316525241*^9, 3.8243254565260344`*^9, 
    3.824325525019173*^9, {3.824325644353168*^9, 3.8243256705649815`*^9}, 
    3.824326054966958*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
RrUiQDuMT7WMZNBU/NKqSo59tBRxaWe+UXQh6itZmKn1dW9VIAF+qIO0W6JK
Hmpg0cfVtVCBRGBoTwR0Mim+ZdNaiCUd1KEUygAEOsFVuaECWDFlKw9VrOol
2r8V5yI/VQivR6tU7tFKyHeArg5wpUpkb2fLP9u7LSfxHe/zqruZ06n2dMHn
Z6URrd3t2M6QHZJWza6B9zb/D1VHWrcLWZc1p55hQTbuQ7V3f3zmf//8Bf+y
Y/Zl/eX7Bv15/Fy8eDF7vm3UcR9FTxrFjI5R3WGd6DrqgMKqJViZSfJQp7y7
aGZ0eZ8bgY9R5s5anp2+0E+eZ4eQweb0x/bktzMu1BeU0/MLzJexNWf81Mtj
a8+ElpZ8Lfla8rXkaxndF1FLS76WfC35mhxfcxgFS/zY/tzKM6GnJV9LvpZ8
Lfl6BuL7sspd8rXka+p8nQ5N4WgpW9Qd60H4PA9InU0AJfC7MZec1en97hxw
Uh9YP9+bA266nH41jKPdvUXiq1Foyo65nBm+4hm1nuyp5+EYzJrnn2dxIJ62
d1vhXhKw+2NhSjgwXgAtKw5KybCUNdvuX1oQDk2lO3p9It37IbU/v2sMHljO
elTMK3myRbfN1TzZqtvmi3OvuTKHZoviMN4uEoemtaoOC9ucbw4L7xNHzbxq
tQsSX+p5ShohD1Za5p/LkBljYqjkDdPjy3PPYdxPObCUD7hzcmDp7yl5ZeRY
aG5lK6HcDI/nLUCMCFEv1ZXyHjG8GFVWebVgHDYSh4uSySKHsRppFDpdkGpk
EB0e6AjZ8+xw8f1v8WPo/Oe5+eegHAPNwJrBysKmUPbC3HNYjhQWGV6Ze44q
+3hU7q/mBzyK96hz2/PvqwujmbgWnn+O5D3ReRbBe+J+RdwFbyxcxHul0FlR
OTTSy2y5v6yWfX9O+ZLmip3tedZUvxrvuaRJ7XTP5wmh9FTU5u07TeEMJhzB
xP551mvvdZei6LF4r6ATdo0XgeNea2l/GqGZdJzHE7f513WRIbWmrpUkYdXZ
ujhPTh53kOefc49ehxPnQany6ZNzz91y93jGWTGtSQ/Mzod1jS9mrMVlQp42
5Ka+f1VLY7M3HMO7gzwv9vQssJ4XDJWu0qoon9rO6oS4S/VYhbup7xv3465e
hnUBEI0hdDX1pw76cVPqfzMfxJeqJ9ITjORDUP6dvLyHrfyZ4pzI1k8tTCt/
7lvqU8oyC0vfAdl3Hc3rpr+rOrK8p7Rnuu+YMKM90bHY8RR3PEe026nvZ47q
Z7PerXwW4rCl3wNvv8XTd8obq24PqQZ1ezgYce2NvMdZj8u5fUesW5VpNWut
G5aZWEa/p0N+NTNK231sdpQMW9XMjtJS/eLadMrSL4BZY/ubAAdDqlYTOK22
l5rcXr98176j2JXijlVhVw8bS51VPEWafpnPd7rtZOCXI2Lt1//tgKf8jpK0
W7wF0kdSY6SmKiNf960WuwhpAej37W+kDKTVidHqfnIkxem89LuYaaXdsbff
49cXp0t55/5G5Tc9wyFirv35elkFs7WOzl2mRGuF7oHyz1SoLLZbysKtPmE4
aeqq1Yb2hBJthfx6vgU1A68q5cl+Vb1RZ++4vjlWKtrrhr+O30KeUlmPF9sg
dfH0eO1X3U4De7VSNeSjYq3uVEzWevxEvFGKL3aRHe7jJ+OlYbIczjP0QZ5N
Hr/FDfvM92S8bND3ISbm4wO9q7BIvM9W78M+hz9+Px6HJ1Xro6ll/oF2ASZn
Ld1OJibnGfFcYXpR4GTkNayu21dck8NenFFOC3v7zr3/JahaeqpKflkvP+Vq
6/+/jEhDdR+h3278mn010gJYounYbRivXNzi6mELyBFOFt/pqPUeeynjxfZa
1PIUbazV2tvd2d7eTr+QsrW9vbOzu9f5bvt4sbskj5kO3aIN6c7urv7Y7N7u
LnfboceIyXPzgEFzQ1w9tv3aBHbj6ByiW2+9ZS16Mjd/fkh+/5h31PBYyq5T
m2dHdd+CG78/PhL0YXNYdfa4c1QV+qg5qDut+80xvTmPJ8yDWNEf8l7n1N3O
ffcjr96nsvuS/sBnptO0u9Fml39dxJha68LZ8LrU713ETGqwTo9uYZWzlNH0
6RV4o9gll92eGgmmx7rqU9nO+bARvgrVI1w9AjV4w66MqvCOVDRjANufCxsO
3mpFM0bfqQEt5vd5x2luPUmPADCahiu/uOKZZzQLHMRPxgBdpWZ4S6cVC8/w
dsdI0O1X2Fhc7+y14vlKzYuS4jeFCv/aR8XXRfrH81h4UHdYxm61Ikd+aQWI
lx9eKoiG9jPILu9z7Cs3idWUlbdDvRMlXaw44mlivyr/el6u4p32hrEVaitj
VrCbbccuI3MUf0twzwvK4HZD18xdYNbiqW/ne3DDQfPM3SgFV4c5Gtej58jh
Y9Is8/KzPHv4emPWFM/v7KWsZzf7/MWLF2901YgNeSt/Wiyyrx89FcNkRmhv
KNWPXSqFzjnF336s/vHS9ozQvuJ7Z8j7H3TBWvqLqWHzzLBa5m6vL9t5v9Dn
vt/4fv0n8nIFIWpLpcKAMpo21S91yrhhlO4UT7t4LdLtr9d2vqtrH/0l3Da7
Cp36O7p21f53d7ND/weOY1gV\
\>"],ExpressionUUID->"68ca60e6-3ff3-43ee-8785-7887bae44a00"],
 ",",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              0.9803922887248062}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.30941176470588, 94.35914755240694}, {
             56.5607674909981, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.9803922887248062]& ,
          TagBoxNote->"0.9803922887248062"],
         StyleBox["0.9803922887248062`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.9803922887248062, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              2.822622845113552}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.89358225422447, 145.94331804192552`}, {
             16.868639882016794`, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.822622845113552]& ,
          TagBoxNote->"2.822622845113552"],
         StyleBox["2.822622845113552`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.822622845113552, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              3.2597299049558055`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{150.47775274374308`, 197.52748853144413`}, {
             7.450866879675914, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 3.2597299049558055`]& ,
          TagBoxNote->"3.2597299049558055"],
         StyleBox["3.2597299049558055`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3.2597299049558055`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              2.9756070471407865`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{202.0619232332617, 249.11165902096272`}, {
             13.572489762280213`, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.9756070471407865`]& ,
          TagBoxNote->"2.9756070471407865"],
         StyleBox["2.9756070471407865`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.9756070471407865`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              5.759878115250875}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{253.64609372278028`, 
             300.6958295104813}, {-46.41655023608786, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 5.759878115250875]& ,
          TagBoxNote->"5.759878115250875"],
         StyleBox["5.759878115250875`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5.759878115250875, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6579999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
              8.81555892356052}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{305.23026421229883`, 
             352.2799999999999}, {-112.25330023197046`, 78.18399536059093}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 8.81555892356052]& ,
          TagBoxNote->"8.81555892356052"],
         StyleBox["8.81555892356052`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[8.81555892356052, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.43075018208302984`, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Polymer length\"", 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox["1", TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox["2", TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox["3", TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox["4", TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox["5", TraditionalForm], 0}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox["6", TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]],
  CellChangeTimes->{
   3.8229377906991816`*^9, {3.822939025355544*^9, 3.822939050008308*^9}, 
    3.8229402332987723`*^9, {3.8229402859109087`*^9, 3.8229402944937916`*^9}, 
    3.8229403520342236`*^9, 3.8229406227390585`*^9, 3.822940653689848*^9, 
    3.822943081745063*^9, 3.8229473010059586`*^9, 3.8229480929499707`*^9, 
    3.8229482207736435`*^9, 3.8230248898793736`*^9, 3.823283720353472*^9, {
    3.8232840635502896`*^9, 3.8232840895311832`*^9}, {3.8232841410614767`*^9, 
    3.823284176838544*^9}, 3.8232842432960677`*^9, {3.8232843039968586`*^9, 
    3.8232843363404207`*^9}, 3.823284373251749*^9, {3.8232844240173984`*^9, 
    3.823284454889234*^9}, 3.824325227230928*^9, 3.824325317119646*^9, 
    3.8243255254789104`*^9, {3.8243256448221073`*^9, 3.824325671099883*^9}, 
    3.824326055485712*^9},ExpressionUUID->
  "6fce1f88-c913-47b6-9d23-154a56210c80"],
 ": \na,b,c:6,4,1\nWe can make the polymers that start with tile \
\[OpenCurlyQuote]a\[CloseCurlyQuote] and end with tile \[OpenCurlyQuote]c\
\[CloseCurlyQuote] increase with concentration, but adding a much higher \
concentration of tiles \[OpenCurlyQuote]a\[CloseCurlyQuote] and \
\[OpenCurlyQuote]b\[CloseCurlyQuote] relative to tile \[OpenCurlyQuote]c\
\[CloseCurlyQuote]. This makes sense because a lack of tile \
\[OpenCurlyQuote]c\[CloseCurlyQuote] will cause strands to be able to keep \
extending, encouraging longer strands over shorter ones. \n\n",
 Cell[BoxData[
  GraphicsBox[{
    {Opacity[0], 
     PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
              8.655169519078306}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{47.30941176470588, 
             103.8544361033672}, {-110.25330023197044`, 80.18399536059094}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 8.655169519078306]& ,
          TagBoxNote->"8.655169519078306"],
         StyleBox["8.655169519078306`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[8.655169519078306, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
              3.877855387181268}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{109.41580273886407`, 
             165.96082707752538`}, {-5.415362117815874, 80.18399536059094}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 3.877855387181268]& ,
          TagBoxNote->"3.877855387181268"],
         StyleBox["3.877855387181268`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3.877855387181268, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
              0.16452896771307945`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{171.52219371302226`, 228.0672180516836}, {
             76.07341475842314, 80.18399536059094}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.16452896771307945`]& ,
          TagBoxNote->"0.16452896771307945"],
         StyleBox["0.16452896771307945`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.16452896771307945`, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
              2.32123313173946}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{233.62858468718048`, 290.1736090258418}, {
             28.744641427590757`, 80.18399536059094}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 2.32123313173946]& ,
          TagBoxNote->"2.32123313173946"],
         StyleBox["2.32123313173946`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.32123313173946, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
              0.17053971832207693`}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{295.7349756613387, 352.28000000000003`}, {
             75.94150911375174, 80.18399536059094}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.17053971832207693`]& ,
          TagBoxNote->"0.17053971832207693"],
         StyleBox["0.17053971832207693`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.17053971832207693`, {}], 
         "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.45075018208302986`, 0.},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
       StyleBox["\"Concentration (nM)\"", 16, StripOnInput -> False], 
       TraditionalForm], None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
        FormBox[
         RotationBox["ac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         RotationBox["abac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         RotationBox["ababab", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         RotationBox["ababac", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         RotationBox["bababa", BoxRotation -> 0.7853981633974483], 
         TraditionalForm], 0}}, {{1., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
        FormBox[
         TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]],
  CellChangeTimes->{{3.822940119480737*^9, 3.822940159052929*^9}, 
    3.8229406119515905`*^9, 3.822940649578617*^9, 3.8229430815289693`*^9, 
    3.822947300890051*^9, 3.8229480925867147`*^9, 3.8229482204039373`*^9, 
    3.8230248896319385`*^9, 3.8232837200043135`*^9, {3.8232840632788353`*^9, 
    3.8232840889975653`*^9}, {3.8232841270488043`*^9, 3.823284176289907*^9}, 
    3.823284242834103*^9, {3.8232843036058407`*^9, 3.823284335623282*^9}, 
    3.823284372645008*^9, {3.8232844051382*^9, 3.82328445423246*^9}, 
    3.8243252268543463`*^9, 3.824325316525241*^9, 3.8243254565260344`*^9, 
    3.824325525019173*^9, {3.824325644353168*^9, 3.8243256705649815`*^9}, 
    3.824326054966958*^9, {3.8243275074722214`*^9, 3.824327528324895*^9}, {
    3.8243286591154795`*^9, 3.8243287010079*^9}},ExpressionUUID->
  "820caa97-98b6-4d8f-b0df-0b2f67bd0dd3"],
 "\na,b,c:2.5,1,1.5\nIf we want a higher yield of polymers of length around 4 \
(\[OpenCurlyQuote]abac\[CloseCurlyQuote]), we would want to choose relative \
concentrations of a,b,c to be 2.5,1,1.5 or to make up 25,10,15 of the 50 nm, \
respectively.\n\n\nThere will be 6 unique type of 2 by 2 array that will be \
created (0 pairs of eyes, 1 pair of eyes, 2 x 2 pairs of eyes, 3 pairs of \
eyes, 4 pairs of eyes).\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3XuwlfV973F6zvnjTKftZDqdaf/pTNtJZtppJv2jk4yJ6XTMTNKxOcZc
TIO5ECUhlqOjMWQkrVYrakzwErVEsYpiuIigEkQhICAoeAmUJKQNDfUWgwYO
0hytAhGb5/isM8mMzl6/vbp+LL5fnv36zLyaVPaPsLZ77TfstXme3596zoc/
998mTZo043++9n8+fPrME77whdP/5iNveu3/+ejZM6afcfa0z5549hennTHt
C8dN/e+v/cNdvzJp0mOv+R+v/ffGzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzC9/NX
X2n2bF1ZVNqrPztQdf7wyy9Unf/Zi89XnT/00z1V5w8+/+Oq8y/vfbLq/EvP
7qo6/+Iz/1x1/oUnv1t1/v/+29aq82Zmo1zbyM3nHdfXvy742+L5tpGl8z+8
/aLi+baRpfO7ll5SPN82snT+8bu+UjzfNrJ0/olvXlU83zaydP6pe68tnm8b
WTr/9Orri+fbRpbO/2jtTcXzbSNL53+8/tbi+baRpfO7Ny4snm8bWTr/7OY7
iufNzEY5jdRIjTQzG3saqZEaaWY29jRSIzXSzGzsaaRGaqSZ2djTSI3USDOz
saeRGqmRZmZjTyM1UiPNzMaeRmqkRpqZjT2N1EiNNDMbexqpkRppZjb2NFIj
NdLMbOxppEZqpJnZ2NNIjdRIM7Oxp5EaqZFm1uUd2vPtvravvaU59yPvhs5q
P8ZLzwEzm9jTSCYyjTSz0jSSiUwjzaw0jWQiOxYaWfr17dkyr/iaLBzr2o/x
yOeoRjKRaSTkppEQRyMhN42EOBoJuUU3cuPGZX0tmH9lM/XUE4uiP8dByRVT
ji/auuii3nOwnwzTSCay6Ea+Z9q0oX364/8r/HMglFx72ruqnp8ZppFMZBoJ
o6ORcGzTSBidLjSyfc20n4e+cVGz9Mx3FkV/joOS719zfNHzj1zcHHxqfl+j
nkbSZV1oZM3jXzi97vHDqO284d3Nga3vGdqop5F0mUZqJLlpJMTRSI0kN42E
OBqpkeTW5UZe9w+zms3L50BeN55b9fzNMI2ky0beyJ8frlLTyHtWLSh+Ty5E
273uuqrnb4ZpJF026ka+um911c+vkXSZRmokuWkkxJnojfzWnHN77wPIat+D
M5oD2943tPGmkdBf+xycyI1sX5ON/ncAJQefuP7/v/Y3omkk9KeRGkluGglx
NFIjyU0jIY5GaiS5aSTE0UiNJLej0cifPX7x0DSSLtNIjSS3UTeydhpJl2mk
RpKbRkIcjdRIcmsb+eq/bxzaqKeRdJlGaiS5tY0c5XV2aqeRdJlGaiS5aSTE
0UiNJDeNhDgaqZHkppEQRyM1ktxG3sj/PFBFI+kyjdRIcht1I11nB/rTSI0k
N42EOBqpkeTWa+Q/vX9o400joT+N1Ehyc01ziKORGkluGglxNFIjyU0jIY5G
aiS5aSTE0UiNJLejcv/IJy4bmkbSZRqpkeTm3lgQRyM1ktw0EuJopEaSW+/+
kfvXDW3U00i6TCM1ktxc0xziaKRGkptGQhyN1Ehy00iIo5EaSW4aCXE0UiPJ
bdSN/PnhF6toJF2mkRpJbu6NBXE0UiPJTSMhjkZqJLm1jTz4nZOHNt40EvrT
SI0kN9c0hzgaqZHkppEQRyM1ktw0EuJopEaSm0ZCHI3USHI7KvePfGr20DSS
LtNIjSQ398aCOBqpkeSmkRBHIzWS3Hr3j9y3emijnkbSZRqpkeTmmuYQRyM1
ktw0EuJopEaSm0ZCHI3USHLTSIijkRpJbiO/f+Qr+6toJF2mkRpJbu6NBXE0
UiPJTSMhjkZqJLn17h/53VOGNt40EvrTSI0kN9c0hzgaqZHkppEQRyM1ktw0
EuJopEaSm0ZCHI3USHI7Go185emrh6aRdJlGaiS5uTcWxNFIjSQ3jYQ4GqmR
5NY28vD/WTm0UU8j6TKN1Ehyc01ziKORGkluGglxNFIjyU0jIY5GaiS5aSTE
0UiNJLeR3z/yZ3uraCRdppEaSW7ujQVxNFIjyU0jIY5GaiS59e4f+b3JQxtv
Ggn9aaRGkptrmkMcjdRIctNIiKORGkluGglxNFIjyU0jIY5GaiS5HZX7R/7o
uqFpJF2mkRpJbu6NBXE0UiPJTSMnlh1bljVv++O3NJMmTRpX+3ZbNyxqPjvl
w817TziueW7n/b2f44F7bur9ePuf0Y/nWKeRGkluvftH7l0+tFFPI4+sH+1Y
3Vwx69zm0gvO+qVTTzmx17zpU//qdf+8fbsfbl2hkSOkkRpJbq5pzq1fn/Vf
ap5GHjkaqZHkppFoZByN1Mg38npILhpJqZE/ffqhgZ5/B3/yWPPt9YuaKZNP
an7zTb/R/Pqv/WrzgRP/vLl/+dzej0U/xqw0UiPfyOshuWgktY1sG/iNuZf2
2ti+3eKbL2+WL/xa87EP/UWvlfOvv0Qn+9BIjRyEr/XEGfn9Iw/trqKRo1fb
yPb3se98x580Uz/5wWb/k5t+efal3Y80F8386+YP3/J7zfZNS8IfZ0YaqZGD
0Mg47o1FbSPb8+2fF8c6v3XD4ubNf/C7zZzZXwp/nBlppEYOwushcTSS2uff
heed0etg+/OsvfuG11l00+XNW//ozc15Z5/WvPzso+GPNRuN1MhBeD0kTu/+
kTs+NbTxppH51Tz/fvHj433/Xfs27dtGP9ZsNFIjB+H1kDiuaU7N86/9vecF
X5zWHPf2tzW7tq0IfyzHGo3UyEF4PSSORlL7/GufW6Xn3zv+9K3NdV+ZGf44
M9JIjRyE10PiaCS1z79f/J3n0z9xcrPv8Y2vO3v2GR9vfue3f6t5aPWt4Y8z
I43UyEF4PSSORnIkvh+gfc2//bPkG78foH279u86t697RD/OjDRSIwfh9ZA4
R+X+kc/cMDSNHL1RfF95++Mn/NnbmyXzvqqPBRqpkYPwekgc98aCOBqpkYPw
ekgcjYQ4GqmRg/B6SJze/SP3LB3aqKeRdJlGauQgvB4SxzXNIY5GaiS5aSTE
0UiNJDeNhDgaqZHkppEQRyM1ktxGfv/IA09X0Ui6TCM1ktzcGwviaKRGkptG
QhyN1Ehy690/8p9PH9p400joTyM1ktxc0xziaKRGkptGQhyN1Ehy00iIo5Ea
SW4aCXE0UiPJ7ajcP3L3TUPTSLpMIzWS3NwbC+JopEaSm0ZCHI3USHLr3T/y
ucVDG/U0ki7TSI0kN9c0hzgaqZHkppEQRyM1ktw0EuJopEaSm0ZCHI3USHIb
dSP/8+XHq2gkXaaRGklu7o0FcTRSI8lNIyGORmokubWNPPQv04Y23jQS+tNI
jSQ31zSHOBqpkeSmkRBHIzWS3DQS4mikRpKbRkIcjdRIcjsq9498dv7QNJIu
00iNJDf3xoI4GqmR5KaREEcjNZLcevePfPa2oY16GkmXaaRGkptrmkMcjdRI
ctNIiKORGkluGglxNFIjyU0jIY5GaiS5jfz+kS/trKKRdJlGaiS5uTcWxNFI
jSQ3jYQ4GqmR5Na7f+QPzhzaeNNI6E8jNZLcXNMc4mikRpKbRkIcjdRIctNI
iKORGkluGglxNFIjye1oNPLwcwuHppF0mUZqJLm5NxbE0UiNJDeNhDgaqZHk
1jbyld3zhjbqaSRdppEaSW6uaQ5xNFIjyU0jIY5GaiS5aSTE0UiNJDeNhDga
qZHkNvL7R/7HjioaSZdppEaSm3tjQRyN1Ehy00iIo5EaSW69+0fuPGdo400j
oT+N1Ehyc01ziKORGkluGglxNFIjyU0jIY5GaiS5aSTE0UiNJLejcv/In9wx
NI2kyzRSI8nNvbEgjkZqJLlpJMTRSI0kt979I388d2ijnkbSZRqpkeTmmuYQ
RyM1ktw0EuJopEaSm0ZCHI3USHLTSIijkRpJbiO/f+QL26toJF2mkRpJbu6N
BXE0UiPJTSMhjkZqJLn17h/5wxlDG28aCf1ppEaSm2uaQxyN1Ehy00iIo5Ea
SW4aCXE0UiPJTSMhjkZqJLkdlftH7rlraFWNXH5J7/FBVvsenNHsvOHdfX3/
muM1EgK1z9Ou3htrxcKTq/4MC9E0EmJpJOSlkRCrbeQrz8wZ2qinkUxkXW/k
jddc0Pu+AUhr+SW9lvSz4c6Tis/hUU8jmci63sjJU09tDh8+3NfGbduKz/H3
n3VW8fy6Rx8tnj/5858vnl+9ZUvx/CkzZhTPr9y0qXh+8syZxfPL168vnv/U
+ecXzy9du7Z4/vQLLyyeX7xqVfH8tFmziudvW7myeP7ML3+5eH7e8uXF8+fM
nl08P3fZsuL5GVddVTw/Z8mScTujkRBnIjSytEEaWdogjSxtkEaWNkgjSxuk
kaUN0sjSBmlkaYM0srRBGlnaII0sTSMhN43USI3UyNI0kolMIzVSIzWytI0b
l/X1wJqre7++kujPcVDj+UcubvZsmddXhmlk/2mkRo56xe/JfWp++OcwGKX2
Y7z0HMgwjew/jdTIUU8jmcg0UiM1UiNL00gmsmOhkdvX3tLXklu+2nzo05P7
+uhnPln8uTVSI7M3sn3Nr32e9jPqaSQT2bHQyNKvr/2+gdLnl/dNn178uTVS
I7M3sv0Yj3yOaiQTmUZqpEZqZGkayUSmkRqpkRpZmkYykWmkRmqkRo5qrx5+
pVn2j1cWlXbo4IGq8y//xwtV51/86f6q8/++b0/x7F03f614ft9PdhfPr5hf
vqb9nh8/VTx/78K5xfO7n9pVPL96SfnvBz6961+K5++/87bi+Sd+8L3i+Q3f
XFw8v2vHtuL5TfcuLZ4/VqaR/aeRGpl5bSNL33c+/8q/K55vG1k6v+Cai4vn
20aWzt8+p/zx0TaydH7p3PLHR9vI0vlBGlk6P0gjS+cHaWTp/CCNLJ0fpJGl
84M0snReIzVSIzUychqpkRo5+mlk/2mkRmaeRmqkRpqZjT2N1EiNNDMbexqp
kRppZjb2NFIjNTLv2vu8r968uai0A4cOVZ1/8aWXqs7vf+GFqvN79++vOr97
796q808/91zV+cefeabq/A+efLLq/I5du6rOb9+5s+p8F6aRGqmRedc2svS9
EBfPLX98tI0snb/s5puL59tGls7PvvXW4vm2kaXzVy9YUDzfNrJ0/rrbby+e
bxtZOn/D0vLHV9vI0vmb7r67eL5tZOn8/BUriufbRpbOL7zvvuL5tpGl83es
WVM83zaydP6udeuK57swjdRIjcw7jdRIjYydRmqkRuadRmqkRsZOIzVSI/NO
IzVSI2OnkRqpkXmnkRqpkbHTSI3UyLzTSI3UyNhppEZqZN5ppEZqZOw0UiM1
Mu80UiM1MnZtI6+e+dm+Bmlk6fwgjSydH6SRpfODNLJ0fpBGls4P0sjS+UEa
WTo/SCNL5wdpZOn8II0snddIjdRIjTQzG2saqZEaaWY29jRSIzXSzGzsaaRG
aqSZ2djTSI3UyLqV7u28fe0txe8Z/OLHTij+3N99eEPx/Jc+8d7i+X96cG3x
/Pmf/svi+cc23Fc8f+FnPlA8//DaFcXzs874SPH8Q6vuLJ6/7MyPFc8/cM/t
xfNfOeeTxfPr7l5QPH/ljNOL59csLf/7v+ZLnyuev2/xPxbP/8MF/7t4/p5v
fL14/vq/P6d4fvkt1xbPt9qP8WP1/uaDTCM1UiPrppH9p5EaeaxPIzVSI+um
kf2nkRqZYaVf38aNy4qfg+BY136MRz5HNbL/NFIjM0wjmcg0sv80UiM1UiOZ
2DSy/zRSIzVSI5nYNLL/NFIjNVIjmdiiG9n+7/ezYP6VzdRTT+zrc586qfhz
a6RGRjfyiinHF21ddFGzZ8u8vjJMI5nIohtZ82v/zJQPFn9ujdTI6EZee9q7
ms3nHTe0DNNIJjKN7D+N1EiNbJqDT83v63sPXdH87aUfL4r+HAclH/r05KIl
t3y195pIP6NezWPTSI0sTSOPzA5sfc/QLr9ycvjnQCg5ZcpHi8/z8Yx6NY9N
IzWyNI08MtNIukwjNVIjNbJmGkmXaaRGaqRG1kwj6TKN1EiN1MiaaSRd1uVG
fv36y5p/276+aPPyOX09svLGqvOP3ndz1flvr7ql6vzWb91WdX7b2gVV57ev
W1x1/jsbllSd/97GZVXndzx4V9X572/+5vjnbzxXIxN8HoR+sjfyfdOnD+3e
by0q/r0ViLZ73XUameDzIPSTvZE1+86Oh8M/B0LJRG/ktg0XNvesWgBp3XjN
BVWNbO+RWmOU00iym+iNPPjE9eH/DqCkfd2kppHXLFw49J9hp1922UifuxpJ
dhqpkeSmkRBHIzWS3DQS4mikRpKbRkIcjdRIctNIiKORGklu2Ru5cdu2oWkk
2WmkRpJb9kbW/N3P9u+2RL9/oUQjNZLcjkQjL547d2jjTSPpMo3USHKrbeSo
p5F0mUZqJLlpJMTRSI0kN42EOBqpkeSmkRBHIzWS3DQS4mikRpJb9ka+/6yz
hrZqze3h718o0UiNJLfsjayZawiQnUZqJLnVNvLAoUNVRjmNJDuN1Ehyy36d
nZppJNlppEaSm0ZCHI3USHLTSIijkRpJbhoJcTRSI8lNIyGORmokuWVv5LpH
Hx2aRpKdRmokuWVvpOvs0GUaqZHkdiQaednNNw9tvGkkXaaRGklu2a+zo5F0
mUZqJLlpJMTRSI0kN42EOBqpkeSmkRBHIzWS3DQS4mikRpJb9kae/PnPD231
/XeEv3+hRCM1ktyyN7JmriFAdhqpkeRW28gXX3qpyiinkWSnkRpJbtmvs1Mz
jSQ7jdRIctNIiKORGkluGglxNFIjyU0jIY5GaiS5aSTE0UiNJLfsjVy9ZcvQ
NJLsNFIjyS17I11nhy7TSI0ktyPRyNm33jq08aaRdJlGaiS5Zb/OjkbSZRqp
keSmkRBHIzWS3DQS4mikRpKbRkIcjdRIctNIiKORGklu2Rt5yowZQ1uz/s7w
9y+UaKRGklv2RtbMNQTITiM1ktxqG7n/hReqjHIaSXYaqZHklv06OzXTSLLT
SI0kN42EOBqpkeSmkRBHIzWS3DQS4mikRpKbRkIcjdRIcsveyJWbNg1NI8lO
IzWS3LI30nV26DKN1EhyOxKNvHrBgqGNN42kyzRSI8kt+3V2NJIu00iNJDeN
hDgaqZHkppEQRyM1ktw0EuJopEaSm0ZCHI3USHLL3sjJM2cO7f4H7g5//0KJ
RmokuWVvZM1cQ4DsNFIjya22kXv3768yymkk2WmkRpJb9uvs1EwjyU4jNZLc
NBLiaKRGkptGQhyN1Ehy00iIo5EaSW4aCXE0UiPJLXsjl69fPzSNJDuN1Ehy
y95I19mhyzRSI8mttpHX3X57lfGmkUfWji3Lmrf98VuaSZMmjat9u60bFjWf
nfLh5r0nHNc8t/P+3s/xwD039X68/c/ox3Os00iNJLfs19nRyCPrRztWN1fM
Ore59IKzfunUU07sNW/61L963T9v3+6HW1do5AhppEaSm0Zy69dn/Zeap5FH
jkZq5Bv5Wk8uGolGxtFIjXwjX+vJRSMpNfKnTz800PPv4E8ea769flEzZfJJ
zW++6TeaX/+1X20+cOKfN/cvn9v7sejHmJVGauQg/D42jkZS28i2gd+Ye2mv
je3bLb758mb5wq81H/vQX/RaOf/6S3SyD43UyEFoZJzsjfzU+ecPbf3Gb4a/
f48FtY1sv9bzznf8STP1kx9s9j+56ZdnX9r9SHPRzL9u/vAtv9ds37Qk/HFm
pJEaOQhf64mTvZE1cw2BwdQ+/9rz7fNtrPNbNyxu3vwHv9vMmf2l8MeZkUZq
5CB8rSdObSN3791bZZTTyMHUPv8uPO+MXgfbn2ft3Te8zqKbLm/e+kdvbs47
+7Tm5WcfDX+s2WikRg7C13riZL/OTs00cjA1z79f/Ph436Pevk37ttGPNRuN
1MhB+FpPHI2k5vnXfn3mgi9Oa457+9uaXdtWhD+WY41GauQgfK0njkZS+/xr
f/9Z+j3qO/70rc11X5kZ/jgz0kiNHISv9cTRSGob+Yvrgpz+iZObfY9vfN3Z
s8/4ePM7v/1bzUOrbw1/nBlppEYOwtd64mgkR+J75trvi2v/LPnG75lr3669
Hkj7vQHRjzMjjdTIQfhaT5zsjVy6du3QNHIwo/i7V+2Pn/Bnb2+WzPuqPhZo
pEYOwtd64mRvpOvs0GUaqZGD8LWeOLWNvGHp0irjTSPpMo3UyEH4Wk+c7NfZ
0Ui6TCM1ktw0EuJopEaSm0ZCHI3USHLTSIijkRpJbhoJcTRSI8kteyNPv/DC
oT3w4D3h718o0UiNJLfsjayZawiQnUZqJLnVNvLp556rMsppJNlppEaSW/br
7NRMI8lOIzWS3DQS4mikRpKbRkIcjdRIctNIiKORGkluGglxNFIjyS17Ixev
WjU0jSQ7jdRIcsveSNfZocs0UiPJrbaRN919d5XxppF0mUZqJLllv86ORtJl
GqmR5KaREEcjNZLcNBLiaKRGkptGQhyN1Ehy00iIo5EaSW7ZGzlt1qyhbdx8
b/j7F0o0UiPJLXsja+YaAmSnkRpJbrWNfPyZZ6qMchpJdhqpkeSW/To7NdNI
stNIjSQ3jYQ4GqmR5KaREEcjNZLcNBLiaKRGkptGQhyN1Ehyy97I21auHJpG
kp1GaiS5ZW+k6+zQZRqpkeRW28j5K1ZUGW8aSZdppEaSW/br7GgkXaaRGklu
GglxNFIjyU0jIY5GaiS5aSTE0UiNJDeNhDgaqZHklr2RZ375y0N76OHV4e9f
KNFIjSS37I2smWsIkJ1GaiS51TbyB08+WWWU00iy00iNJLfs19mpmUaSnUZq
JLlpJMTRSI0kN42EOBqpkeSmkRBHIzWS3DQS4mikRpJb9kbOW758aBpJdhqp
keSWvZGus0OXaaRGklttIxfed1+V8aaRdJlGaiS5Zb/OjkbSZRqpkeSmkRBH
IzWS3DQS4mikRpKbRkIcjdRIctNIiKORGklu2Rt5zuzZQ9v8yJrw9y+UaKRG
klv2RtbMNQTITiM1ktxqG7lj164qo5xGkp1GaiS5Zb/OTs00kuw0UiPJTSMh
jkZqJLlpJMTRSI0kN42EOBqpkeSmkRBHIzWS3LI3cu6yZUPTSLLTSI0kt+yN
dJ0dukwjNZLcaht5x5o1VcabRtJlGqmR5Jb9OjsaSZdppEaSm0ZCHI3USHLT
SIijkRpJbhoJcTRSI8lNIyGORmokuWVv5Iyrrhraw4/dH/7+hRKN1Ehyy97I
mrmGANlppEaSW20jt+/cWWWU00iy00iNJLfs19mpmUaSnUZqJLlpJMTRSI0k
N42EOBqpkeSmkRBHIzWS3DQS4mikRpJb9kbOWbJkaN/Zfk/vOQhZ7XtwRrPz
hnf39f1rjtdICJS9kTXX2Vmx8OSq5y9E00iIVdvIu9atqzLeNJKJrOuNbP8c
3X69GbLafOO5zbWnvauvK6YcX2zkqKeRTGRdb2T79eSa12MhmkZCHI2E3DQS
4mgk5KaREEcjITeNhDgaCblFN3LjxmV9PbDm6mbDnScVRX+OgxrPP3Jxs2fL
vL4yrObxaSTHuuhGlv7eysGn5od/DoNRaj/GS8+BDKt5fBrJsU4jIc6x0Mj2
19hP++fg9uvFJdGf46DG1kUXNdvX3tLXqKeRTGTHQiNLv77268HRn8NglNqP
8cjnqEYykWkk5KaREEcjITeNhDgaCblpJMTRSMgtupFmlnsayUSmkWZWmkYy
kWmkmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmR3p/T/eLxw/
     "], {{0, 474}, {457, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{457, 474},
   PlotRange->{{0, 457}, {0, 474}}]],ExpressionUUID->
  "fbaa87b2-a4fa-4db7-b87a-1286b93032ca"]
}], "Text",
 CellChangeTimes->{{3.824325504073567*^9, 3.8243255521372824`*^9}, {
  3.8243257721997337`*^9, 3.824325800417778*^9}, {3.82432592353798*^9, 
  3.8243259865785*^9}, {3.82432601975307*^9, 3.8243260331422215`*^9}, {
  3.824326084953169*^9, 3.824326094945715*^9}, {3.824326160655238*^9, 
  3.8243262262536125`*^9}, {3.824326699067357*^9, 3.8243267077479477`*^9}, {
  3.824327492189207*^9, 3.82432756538949*^9}, {3.8243283326568213`*^9, 
  3.8243283341195936`*^9}, {3.824328534567835*^9, 3.824328548520977*^9}, {
  3.8243287292904315`*^9, 3.8243287572311635`*^9}, {3.8243288092497845`*^9, 
  3.824328920863166*^9}, {3.8243289633997016`*^9, 3.82432898722206*^9}, {
  3.824329028281658*^9, 3.8243290504231243`*^9}, {3.8243291373574543`*^9, 
  3.8243291407179613`*^9}, {3.82432921396739*^9, 3.824329240658242*^9}, {
  3.824331051748502*^9, 
  3.8243310775765524`*^9}},ExpressionUUID->"c379c19c-2eb4-4815-82c0-\
ab35db183eb9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
SpellingDictionaries->{"CorrectWords"->{
 "nt", "Soloveichik", "tilename", "png", "jpg", "eps", "svg", "csv", "nm", 
  "bp", "subpaths", "subpath", "scadnano", "Spectrofluorometry", "datalist", 
  "pipetting", "Rothemund", "wihle", "cycler", "acheived", "Nanodrop", 
  "maxlength"}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 632, 11, 131, "Title",ExpressionUUID->"492c0e2a-a86c-4c0f-9487-9e7e5877e7b4"],
Cell[CellGroupData[{
Cell[1237, 37, 162, 3, 67, "Section",ExpressionUUID->"d87aba98-74b9-4ada-8bb7-0432e75cbe35"],
Cell[1402, 42, 246, 4, 56, "Text",ExpressionUUID->"9ae93a3c-733b-4855-a659-1c1c843a8bba"],
Cell[CellGroupData[{
Cell[1673, 50, 107, 0, 54, "Subsection",ExpressionUUID->"70a405bd-5a59-4227-906a-a3f800b0dc1f"],
Cell[1783, 52, 414, 10, 86, "Code",ExpressionUUID->"058465d2-9ae6-4ba3-ad7f-1f4904b765cc"],
Cell[2200, 64, 788, 23, 121, "Code",ExpressionUUID->"b3c15077-cabb-49ce-b722-dfe59833353d"],
Cell[2991, 89, 2069, 38, 471, "Code",ExpressionUUID->"3f273241-b65e-4d8c-83db-85cc6a66e316"],
Cell[5063, 129, 502, 12, 86, "Code",ExpressionUUID->"982d001a-1f79-4cef-bcba-43186049c4a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5602, 146, 84, 0, 54, "Subsection",ExpressionUUID->"4f9ccfe8-3775-48a9-ba19-7310bc035e59"],
Cell[5689, 148, 174, 4, 50, "Code",ExpressionUUID->"9cae575a-a936-44f8-bc81-f420782bd0ad"],
Cell[5866, 154, 3329, 77, 103, "Code",ExpressionUUID->"de4fab3a-eaa8-4bbc-b6c0-2757f30386a1"],
Cell[9198, 233, 4026, 113, 296, "Code",ExpressionUUID->"98e47793-b7e2-44b9-919e-cc82cb260593"],
Cell[13227, 348, 1621, 46, 138, "Code",ExpressionUUID->"608afa2c-9c5b-4dd1-bd7f-c072aaf2ff4f"],
Cell[14851, 396, 2596, 70, 175, "Code",ExpressionUUID->"f2fbe24a-cfaf-421a-9889-e7b6f1b2f8bc"],
Cell[17450, 468, 12598, 324, 981, "Code",ExpressionUUID->"0bf08946-00fb-491b-aa7b-777cfbe3aa6d"],
Cell[30051, 794, 1151, 30, 86, "Code",ExpressionUUID->"0ab66a60-4873-4f07-ad13-ae6f96c96551"],
Cell[31205, 826, 213, 6, 68, "Code",ExpressionUUID->"5105bf3b-0c20-4204-a302-3e644a296f99"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[31467, 838, 390, 6, 53, "Section",ExpressionUUID->"bc8d069d-abd3-456a-9b21-637c887590ef"],
Cell[31860, 846, 2617, 39, 50, "Text",ExpressionUUID->"175b8890-2772-48c1-9df0-c1a0a799a50e"],
Cell[34480, 887, 673, 18, 44, "Input",ExpressionUUID->"298f91c4-a0a2-4516-9662-307074df6c6d",
 InitializationCell->True],
Cell[35156, 907, 4471, 67, 248, "Text",ExpressionUUID->"130a33d4-1f4e-4b64-9d69-b8fc5e872495"],
Cell[39630, 976, 8130, 189, 444, "Input",ExpressionUUID->"81547e91-c10c-440f-93d1-0c568558893b",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47797, 1170, 293, 5, 67, "Section",ExpressionUUID->"6d40e031-754e-4146-a506-dd10bdf5e8dc"],
Cell[48093, 1177, 3486, 58, 270, "Text",ExpressionUUID->"e571a294-4583-4a1c-b9ed-7f8ed095a2ce"],
Cell[51582, 1237, 9313, 164, 254, "Input",ExpressionUUID->"3bb8255c-f187-45e6-8c27-7755bdd5b2e6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[60932, 1406, 513, 7, 53, "Section",ExpressionUUID->"c9867c8c-7bf2-44e3-ae35-de56928f681c"],
Cell[61448, 1415, 32223, 541, 784, "Text",ExpressionUUID->"d55c8bd7-22a3-4356-8cd9-7317f4a70500"],
Cell[93674, 1958, 177, 3, 28, "Input",ExpressionUUID->"f5f6b8ff-c309-4ab9-9d93-0fb43518767f"],
Cell[93854, 1963, 544, 11, 71, "Item",ExpressionUUID->"dd6ad8ba-d374-4b0c-ab68-b9f7e81a9ce3"],
Cell[94401, 1976, 2742, 61, 124, "Input",ExpressionUUID->"363133ff-eb9f-47be-a227-706ba6d28088"],
Cell[CellGroupData[{
Cell[97168, 2041, 117, 2, 28, "Input",ExpressionUUID->"e48c75db-3311-41e7-aea0-e6af11e3315a"],
Cell[97288, 2045, 1061, 18, 32, "Output",ExpressionUUID->"c491e668-3648-4d2d-aeb7-66d44b964d5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98386, 2068, 115, 2, 28, "Input",ExpressionUUID->"08301afe-325f-475e-bd27-37c790028792"],
Cell[98504, 2072, 7546, 194, 244, "Output",ExpressionUUID->"9092d5bb-a75a-42e6-ad11-451be837e7ee"]
}, Open  ]],
Cell[106065, 2269, 284, 6, 31, "Item",ExpressionUUID->"37736219-b3c3-41ad-90d6-020b3ccdf3a9"],
Cell[106352, 2277, 2560, 65, 200, "Input",ExpressionUUID->"ac555a0e-ec25-49d4-98e3-14d0da784c7c"],
Cell[CellGroupData[{
Cell[108937, 2346, 1799, 45, 124, "Input",ExpressionUUID->"930d243a-25e5-4263-b4a9-d166f3a25b05"],
Cell[110739, 2393, 355797, 6140, 274, "Output",ExpressionUUID->"49be18ab-f0f8-4874-b774-2b69e8ad3f79"]
}, Open  ]],
Cell[466551, 8536, 319, 6, 31, "Item",ExpressionUUID->"eafcc37a-a719-4cd9-af4b-374f542d4cb8"],
Cell[466873, 8544, 1487, 39, 67, "Input",ExpressionUUID->"6b454788-0c5d-47a0-8b36-42cd396f62d0"],
Cell[CellGroupData[{
Cell[468385, 8587, 1146, 26, 67, "Input",ExpressionUUID->"95c4c32c-b8a2-4f3f-8352-e2279d257e06"],
Cell[469534, 8615, 8341, 208, 258, "Output",ExpressionUUID->"4ac5253b-2271-4cd7-9bda-5761108b5dd8"]
}, Open  ]],
Cell[477890, 8826, 402, 8, 31, "Item",ExpressionUUID->"a95e8c67-2a12-4c1d-a90b-33d2dbbba922"],
Cell[CellGroupData[{
Cell[478317, 8838, 2072, 51, 143, "Input",ExpressionUUID->"58b15931-e032-44db-969e-634ac36f194c"],
Cell[480392, 8891, 52581, 953, 281, "Output",ExpressionUUID->"2d3cfe5b-489b-4a04-a660-714ec2656011"]
}, Open  ]],
Cell[532988, 9847, 507, 9, 51, "Item",ExpressionUUID->"3c555411-0e8e-4416-8672-f3b2d79410b6"],
Cell[533498, 9858, 1571, 38, 86, "Input",ExpressionUUID->"7e86c903-2eb9-40f5-bd7a-243d4e4612bb"],
Cell[CellGroupData[{
Cell[535094, 9900, 833, 18, 48, "Input",ExpressionUUID->"24c28ea8-2831-4d52-af94-9bc31c192e74"],
Cell[535930, 9920, 12507, 284, 262, 8418, 218, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"08219a80-1686-497d-b451-223da11eec1d"]
}, Open  ]],
Cell[548452, 10207, 102274, 2284, 1845, "Text",ExpressionUUID->"c379c19c-2eb4-4815-82c0-ab35db183eb9"]
}, Open  ]]
}, Open  ]]
}
]
*)

